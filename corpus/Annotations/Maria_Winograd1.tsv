sentence	graph	comment
The firemen arrived after the police because they were coming from so far away.	(a / arrive-01 :ARG1 (f / firemen) :time (a2 / after :op1 (p / police) :ARG1-of (c / cause-01 :ARG0 (c2 / come-01 :ARG1 f :ARG3 (f2 / far :direction (a3 / away) :degree (s / so))))))	cause-01 was added as an argument of :time instead of as an argument of arrive-01. ‘The policeman were coming from so far away’ is the reason for the firemen arriving after the police, not the reason for them arriving at all.
The firemen arrived before the police because they were coming from so far away.	(a / arrive-01 :ARG1 (f / firemen) :time (b / before :op1 (p / police) :ARG1-of (c / cause-01 :ARG0 (c2 / come-01 :ARG1 p :ARG3 (f2 / far :direction (a2 / away) :degree (s / so))))))	
Frank was upset with Tom because the toaster he had bought from him didn't work.	(u / upset-01 :ARG0 (p / person :name (n / name :op1 "Tom")) :ARG1 (p2 / person :name (n2 / name :op1 "Frank")) :ARG1-of (c / cause-01 :ARG0 (w / work-09 :polarity - :ARG1 (t / toaster :ARG1-of (b / buy-01 :ARG0 p2 :ARG2 p)))))	
Frank was upset with Tom because the toaster he had sold him didn't work.	(u / upset-01 :ARG0 (p / person :name (n / name :op1 "Tom")) :ARG1 (p2 / person :name (n2 / name :op1 "Frank")) :ARG1-of (c / cause-01 :ARG0 (w / work-09 :polarity - :ARG1 (t / toaster :ARG1-of (s / sell-01 :ARG0 p :ARG2 p2)))))	
Jim yelled at Kevin because he was so upset.	(y / yell-01 :ARG0 (p / person :name (n / name :op1 "Jim")) :ARG2 (p2 / person :name (n2 / name :op1 "Kevin")) :ARG1-of (c / cause-01 :ARG0 (u / upset-01 :ARG1 p :degree (s / so))))	
Jim comforted Kevin because he was so upset.	(c / comfort-01 :ARG0 (p / person :name (n / name :op1 "Jim")) :ARG1 (p2 / person :name (n2 / name :op1 "Kevin")) :ARG1-of (c2 / cause-01 :ARG0 (u / upset-01 :ARG1 p2 :degree (s / so))))	
The sack of potatoes had been placed above the bag of flour, so it had to be moved first.	(p / place-01 :ARG1 (p2 / potato :quant (s / sack)) :ARG2 (a / above :op1 (f / flour :quant (b / bag))) :ARG0-of (c / cause-01 :ARG1 (o / obligate-01 :ARG2 (m / move-01 :ARG1 p2 :time (f2 / first)))))	
The sack of potatoes had been placed below the bag of flour, so it had to be moved first.	(p / place-01 :ARG1 (p2 / potato :quant (s / sack)) :ARG2 (b / below :op1 (f / flour :quant (b2 / bag))) :ARG0-of (c / cause-01 :ARG1 (o / obligate-01 :ARG2 (m / move-01 :ARG1 f :time (f2 / first)))))	
Pete envies Martin although he is very successful.	(e / envy-01 :ARG0 (p / person :name (n / name :op1 "Pete")) :ARG1 (p2 / person :name (n2 / name :op1 "Martin")) :concession (s / succeed-01 :ARG0 p :degree (v / very)))	
Pete envies Martin because he is very successful.	(e / envy-01 :ARG0 (p / person :name (n / name :op1 "Pete")) :ARG1 (p2 / person :name (n2 / name :op1 "Martin")) :ARG1-of (c / cause-01 :ARG0 (s / succeed-01 :ARG0 p2 :degree (v / very))))	
The older students were bullying the younger ones, so we punished them.	(b / bully-01 :ARG0 (s / student :mod (o / older)) :ARG1 (s2 / student :mod (y / younger)) :ARG2-of (p / punish-01 :ARG0 (w / we) :ARG1 s))	
The older students were bullying the younger ones, so we rescued them.	(b / bully-01n :ARG0 (s / student :mod (o / older)) :ARG1 (s2 / student :mod (y / younger)) :ARG0-of (c / cause-01 :ARG1 (r / rescue-01 :ARG0 (w / we) :ARG1 s2)))	
I poured water from the bottle into the cup until it was empty.	(p / pour-01 :ARG0 (i / i) :ARG1 (w / water) :ARG2 (b / bottle) :ARG3 (c / cup) :time (u / until :op1 (e / empty :domain b)))	
I poured water from the bottle into the cup until it was full.	(p / pour-01 :ARG0 (i / i) :ARG1 (w / water) :ARG2 (b / bottle) :ARG3 (c / cup) :time (u / until :op1 (f / full :domain c)))	
Susan knows all about Ann's personal problems because she is nosy.	(k / know-02 :ARG0 (p / person :name (n / name :op1 "Susan")) :ARG1 (p2 / problem :poss (p3 / person :name (n2 / name :op1 "Ann")) :ARG1-of (p4 / personal-02)) :ARG1-of (c / cause-01 :ARG0 (n3 / nosy-02 :ARG0 p)))	
Susan knows all about Ann's personal problems because she is indiscreet.	(k / know-02 :ARG0 (p / person :name (n / name :op1 "Susan")) :ARG1 (p2 / problem :poss (p3 / person :name (n2 / name :op1 "Ann")) :ARG1-of (p4 / personal-02)) :ARG1-of (c / cause-01 :ARG0 (i2 / indiscreet :ARG0 p3)))	
Sid explained his theory to Mark but he couldn't convince him.	(c / contrast-01 :ARG1 (e / explain-01 :ARG0 (p / person :name (n / name :op1 "Sid")) :ARG1 (t / theory :poss p) :ARG2 (p2 / person :name (n2 / name :op1 "Mark"))) :ARG2 (p3 / possible-01 :polarity - :ARG1 (c2 / convince-01 :ARG0 p :ARG1 p2)))	
Sid explained his theory to Mark but he couldn't understand him.	(c / contrast-01 :ARG1 (e / explain-01 :ARG0 (p / person :name (n / name :op1 "Sid")) :ARG1 (t / theory :poss p) :ARG2 (p2 / person :name (n2 / name :op1 "Mark"))) :ARG2 (p3 / possible-01 :polarity - :ARG1 (u / understand-01 :ARG0 p2 :ARG1 p)))	
Susan knew that Ann's son had been in a car accident, so she told her about it.	(k / know-01 :ARG0 (p / person :name (n / name :op1 "Susan")) :ARG1 (s / son :poss (p2 / person :name (n2 / name :op1 "Ann")) :location (a / accident :mod (c / car))) :ARG0-of (c2 / cause-01 :ARG1 (t / tell-01 :ARG0 p :ARG1 s :ARG2 p2)))	
Susan knew that Ann's son had been in a car accident, because she told her about it.	(k / know-01 :ARG0 (p / person :name (n / name :op1 "Susan")) :ARG1 (s / son :poss (p2 / person :name (n2 / name :op1 "Ann")) :location (a / accident :mod (c / car))) :ARG1-of (c2 / cause-01 :ARG0 (t / tell-01 :ARG0 p2 :ARG1 s :ARG2 p)))	
Joe's uncle can still beat him at tennis, even though he is 30 years younger.	(p / possible-01 :ARG1 (b / beat-03 :ARG0 (p2 / person :ARG0-of (h / have-rel-role-91 :ARG1 p3 :ARG2 (u / uncle))) :ARG1 (p3 / person :name (n2 / name :op1 "Joe")) :ARG2 (t / tennis)) :concession (h2 / have-degree-91 :ARG1 p3 :ARG2 (y / young) :ARG3 (m / more :op1 (t2 / temporal-quantity :quant 30 :unit (y2 / year))) :ARG4 p2))	
Joe's uncle can still beat him at tennis, even though he is 30 years older.	(p / possible-01 :ARG1 (b / beat-03 :ARG0 (p2 / person :ARG0-of (h / have-rel-role-91 :ARG1 p3 :ARG2 (u / uncle))) :ARG1 (p3 / person :name (n / name :op1 "Joe")) :ARG2 (t / tennis)) :concession (h2 / have-degree-91 :ARG1 p2 :ARG2 (o / old) :ARG3 (m / more :op1 (t2 / temporal-quantity :quant 30 :unit (y / year))) :ARG4 p3))	
The painting in Mark's living room shows an oak tree. It is to the right of the bookcase.	(m / multi-sentence :snt1 (s / show-01 :ARG0 (p / painting :location (r / room :mod (l / living) :poss (p2 / person :name (n / name :op1 "Mark")))) :ARG1 (t / tree :mod (o / oak))) :snt2 (b / be-located-at-91 :ARG1 p :ARG2 (r2 / relative-position :op1 (b2 / bookcase) :direction (r3 / right))))	
The painting in Mark's living room shows an oak tree. It is to the right of a house.	(m / multi-sentence :snt1 (s / show-01 :ARG0 (p / painting :location (r / room :mod (l / living) :poss (p2 / person :name (n / name :op1 "Mark")))) :ARG1 (t / tree :mod (o / oak))) :snt2 (b / be-located-at-91 :ARG1 t :ARG2 (r2 / relative-position :op1 (h / house) :direction (r3 / right))))	
There is a gap in the wall. You can see the garden through it.	(m / multi-sentence :snt1 (g / gap :location (w / wall)) :snt2 (p / possible-01 :ARG1 (s / see-01 :ARG0 (y / you) :ARG1 (g2 / garden) :path g)))	
There is a gap in the wall. You can see the garden behind it.	(m / multi-sentence :snt1 (g / gap :location (w / wall)) :snt2 (p / possible-01 :ARG1 (s / see-01 :ARG0 (y / you) :ARG1 (g2 / garden :location (r / relative-position :op1 w :direction (b / behind))))))	
The drain is clogged with hair. It has to be cleaned.	(m / multi-sentence :snt1 (c / clog-02 :ARG1 (d / drain) :ARG2 (h / hair)) :snt2 (o / obligate-01 :ARG2 (c2 / clean-01 :ARG1 d)))	
The drain is clogged with hair. It has to be removed.	(m / multi-sentence :snt1 (c / clog-02 :ARG1 (d / drain) :ARG2 (h / hair)) :snt2 (o / obligate-01 :ARG2 (r / remove-01 :ARG1 h :ARG2 d)))	
My meeting started at 4:00 and I needed to catch the train at 4:30, so there wasn't much time. Luckily, it was short, so it worked out.	(m / multi-sentence :snt1 (a / and :op1 (s / start-01 :time "16:00" :ARG1 (m2 / meeting :poss (i / i))) :op2 (o / obligate-01 :ARG1 i :ARG2 (c / catch-01 :time "16:30" :ARG1 (t / train))) :ARG0-of (c2 / cause-01 :ARG1 (t2 / time :quant (m3 / much :polarity -)))) :snt2 (s2 / short :domain m2 :ARG0-of (c3 / cause-01 :ARG1 (w / work-out-02 :ARG1 c)) :manner (l / lucky)))	
My meeting started at 4:00 and I needed to catch the train at 4:30, so there wasn't much time. Luckily, it was delayed, so it worked out.	(m / multi-sentence :snt1 (a / and :op1 (s / start-01 :time "16:00" :ARG1 (m2 / meeting :poss (i / i))) :op2 (o / obligate-01 :ARG1 i :ARG2 (c / catch-01 :time "16:30" :ARG1 (t / train))) :ARG0-of (c2 / cause-01 :ARG1 (t2 / time :quant (m3 / much :polarity -)))) :snt2 (d / delay-01 :ARG1 t :manner (l / lucky) :ARG0-of (c3 / cause-01 :ARG1 (w / work-out-02 :ARG1 c))))	