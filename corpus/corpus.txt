# ::snt The women who the astronaut thought liked the soldier actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(women,subj_relA(CP_gap_end_recursion(CP_with_gap_base(thought,DP_the(NP_unary(unary_N_adapter(astronaut))))),liked),soldier)))
# ::size0 0
# ::size1 9
# ::id deep_recursion_rc_contrastive_coref_0
# ::suppl deep_recursion_rc_contrastive_coref_0
(u_9782 / hate-01
        :ARG0 (r / woman
                 :ARG0-of (u_9780 / like-01
                                  :ARG1 (s / soldier
                                           :ARG1-of u_9782)
                                  :ARG1-of (u_9778 / think-01
                                                   :ARG0 (a / astronaut))))
        :concession (a2 / after-all)
        :ARG1-of (u_9781 / actual-02))

# ::snt The lawyer who we thought liked the soldier actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(lawyer),subj_relA(CP_gap_end_recursion(CP_with_gap_base(thought,we)),liked),soldier)))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_contrastive_coref_1
# ::suppl deep_recursion_rc_contrastive_coref_1
(u_9786 / hate-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / like-01
                             :ARG1 (s / soldier
                                      :ARG1-of u_9786)
                             :ARG1-of (u_9783 / think-01
                                              :ARG0 (u_9784 / we))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The men who you said hated the lawyer actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(men,subj_relB(CP_gap_end_recursion(CP_with_gap_base(said,you)),hated),lawyer)))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_contrastive_coref_2
# ::suppl deep_recursion_rc_contrastive_coref_2
(u_9790 / like-01
        :ARG0 (r / man
                 :ARG0-of (u_9789 / hate-01
                                  :ARG1 (m / lawyer
                                           :ARG1-of u_9790)
                                  :ARG1-of (u_9787 / say-01
                                                   :ARG0 (u_9788 / you))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The astronaut who we said liked the lawyer actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(astronaut),subj_relA(CP_gap_end_recursion(CP_with_gap_base(said,we)),liked),lawyer)))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_contrastive_coref_3
# ::suppl deep_recursion_rc_contrastive_coref_3
(u_9794 / hate-01
        :ARG0 (a / astronaut
                 :ARG0-of (r / like-01
                             :ARG1 (m / lawyer
                                      :ARG1-of u_9794)
                             :ARG1-of (u_9791 / say-01
                                              :ARG0 (u_9792 / we))))
        :concession (a2 / after-all)
        :ARG1-of (u_9793 / actual-02))

# ::snt The women who you thought hated the lawyer actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(women,subj_relB(CP_gap_end_recursion(CP_with_gap_base(thought,you)),hated),lawyer)))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_contrastive_coref_4
# ::suppl deep_recursion_rc_contrastive_coref_4
(u_9798 / like-01
        :ARG0 (r / woman
                 :ARG0-of (u_9797 / hate-01
                                  :ARG1 (m / lawyer
                                           :ARG1-of u_9798)
                                  :ARG1-of (u_9795 / think-01
                                                   :ARG0 (u_9796 / you))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The doctor who we claimed liked the astronaut actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(doctor),subj_relA(CP_gap_end_recursion(CP_with_gap_base(claimed,we)),liked),astronaut)))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_contrastive_coref_5
# ::suppl deep_recursion_rc_contrastive_coref_5
(u_9802 / hate-01
        :ARG0 (d / doctor
                 :ARG0-of (r / like-01
                             :ARG1 (a / astronaut
                                      :ARG1-of u_9802)
                             :ARG1-of (u_9799 / claim-01
                                              :ARG0 (u_9800 / we))))
        :concession (a2 / after-all)
        :ARG1-of (u_9801 / actual-02))

# ::snt The kids who you assumed hated the astronaut actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(kids,subj_relB(CP_gap_end_recursion(CP_with_gap_base(assumed,you)),hated),astronaut)))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_contrastive_coref_6
# ::suppl deep_recursion_rc_contrastive_coref_6
(u_9807 / like-01
        :ARG0 (r / kid
                 :ARG0-of (u_9805 / hate-01
                                  :ARG1 (a / astronaut
                                           :ARG1-of u_9807)
                                  :ARG1-of (u_9803 / assume-02
                                                   :ARG0 (u_9804 / you))))
        :concession (a2 / after-all)
        :ARG1-of (u_9806 / actual-02))

# ::snt The women who I assumed liked the astronaut actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(women,subj_relA(CP_gap_end_recursion(CP_with_gap_base(assumed,I)),liked),astronaut)))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_contrastive_coref_7
# ::suppl deep_recursion_rc_contrastive_coref_7
(u_9812 / hate-01
        :ARG0 (r / woman
                 :ARG0-of (u_9810 / like-01
                                  :ARG1 (a / astronaut
                                           :ARG1-of u_9812)
                                  :ARG1-of (u_9808 / assume-02
                                                   :ARG0 (u_9809 / i))))
        :concession (a2 / after-all)
        :ARG1-of (u_9811 / actual-02))

# ::snt The men who we said hated the soldier actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(men,subj_relB(CP_gap_end_recursion(CP_with_gap_base(said,we)),hated),soldier)))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_contrastive_coref_8
# ::suppl deep_recursion_rc_contrastive_coref_8
(u_9817 / like-01
        :ARG0 (r / man
                 :ARG0-of (u_9816 / hate-01
                                  :ARG1 (s / soldier
                                           :ARG1-of u_9817)
                                  :ARG1-of (u_9813 / say-01
                                                   :ARG0 (u_9814 / we))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The men who you claimed liked the lawyer actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(men,subj_relA(CP_gap_end_recursion(CP_with_gap_base(claimed,you)),liked),lawyer)))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_contrastive_coref_9
# ::suppl deep_recursion_rc_contrastive_coref_9
(u_9821 / hate-01
        :ARG0 (r / man
                 :ARG0-of (u_9820 / like-01
                                  :ARG1 (m / lawyer
                                           :ARG1-of u_9821)
                                  :ARG1-of (u_9818 / claim-01
                                                   :ARG0 (u_9819 / you))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The lawyer who I said that we said hated the soldier actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(lawyer),subj_relB(CP_with_gap_recursive(CP_with_gap_base(said,we),CP_gap_end_recursion(CP_with_gap_base(said,I))),hated),soldier)))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_contrastive_coref_10
# ::suppl deep_recursion_rc_contrastive_coref_10
(u_9827 / like-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / hate-01
                             :ARG1 (s / soldier
                                      :ARG1-of u_9827)
                             :ARG1-of (u_9822 / say-01
                                              :ARG0 (u_9825 / we)
                                              :ARG1-of (u_9823 / say-01
                                                               :ARG0 (u_9824 / i)))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The men who we said that I thought hated the doctor actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(men,subj_relB(CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_gap_end_recursion(CP_with_gap_base(said,we))),hated),doctor)))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_contrastive_coref_11
# ::suppl deep_recursion_rc_contrastive_coref_11
(u_9833 / like-01
        :ARG0 (r / man
                 :ARG0-of (u_9832 / hate-01
                                  :ARG1 (d / doctor
                                           :ARG1-of u_9833)
                                  :ARG1-of (u_9828 / think-01
                                                   :ARG0 (u_9831 / i)
                                                   :ARG1-of (u_9829 / say-01
                                                                    :ARG0 (u_9830 / we)))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The girls who you claimed that I thought hated the lawyer actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(girls,subj_relB(CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_gap_end_recursion(CP_with_gap_base(claimed,you))),hated),lawyer)))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_contrastive_coref_12
# ::suppl deep_recursion_rc_contrastive_coref_12
(u_9839 / like-01
        :ARG0 (r / girl
                 :ARG0-of (u_9838 / hate-01
                                  :ARG1 (m / lawyer
                                           :ARG1-of u_9839)
                                  :ARG1-of (u_9834 / think-01
                                                   :ARG0 (u_9837 / i)
                                                   :ARG1-of (u_9835 / claim-01
                                                                    :ARG0 (u_9836 / you)))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The women who you thought that we thought hated the astronaut actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(women,subj_relB(CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_gap_end_recursion(CP_with_gap_base(thought,you))),hated),astronaut)))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_contrastive_coref_13
# ::suppl deep_recursion_rc_contrastive_coref_13
(u_9846 / like-01
        :ARG0 (r / woman
                 :ARG0-of (u_9844 / hate-01
                                  :ARG1 (a / astronaut
                                           :ARG1-of u_9846)
                                  :ARG1-of (u_9840 / think-01
                                                   :ARG0 (u_9843 / we)
                                                   :ARG1-of (u_9841 / think-01
                                                                    :ARG0 (u_9842 / you)))))
        :concession (a2 / after-all)
        :ARG1-of (u_9845 / actual-02))

# ::snt The kids who I said that you claimed liked the lawyer actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(kids,subj_relA(CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_gap_end_recursion(CP_with_gap_base(said,I))),liked),lawyer)))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_contrastive_coref_14
# ::suppl deep_recursion_rc_contrastive_coref_14
(u_9852 / hate-01
        :ARG0 (r / kid
                 :ARG0-of (u_9851 / like-01
                                  :ARG1 (m / lawyer
                                           :ARG1-of u_9852)
                                  :ARG1-of (u_9847 / claim-01
                                                   :ARG0 (u_9850 / you)
                                                   :ARG1-of (u_9848 / say-01
                                                                    :ARG0 (u_9849 / i)))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The kids who the lawyer claimed that we claimed hated the soldier actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(kids,subj_relB(CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(unary_N_adapter(lawyer)))))),hated),soldier)))
# ::size0 1
# ::size1 10
# ::id deep_recursion_rc_contrastive_coref_15
# ::suppl deep_recursion_rc_contrastive_coref_15
(u_9858 / like-01
        :ARG0 (r / kid
                 :ARG0-of (u_9857 / hate-01
                                  :ARG1 (s / soldier
                                           :ARG1-of u_9858)
                                  :ARG1-of (u_9853 / claim-01
                                                   :ARG0 (u_9855 / we)
                                                   :ARG1-of (u_9854 / claim-01
                                                                    :ARG0 (m / lawyer)))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The kids who we thought that you said liked the doctor actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(kids,subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,you),CP_gap_end_recursion(CP_with_gap_base(thought,we))),liked),doctor)))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_contrastive_coref_16
# ::suppl deep_recursion_rc_contrastive_coref_16
(u_9864 / hate-01
        :ARG0 (r / kid
                 :ARG0-of (u_9863 / like-01
                                  :ARG1 (d / doctor
                                           :ARG1-of u_9864)
                                  :ARG1-of (u_9859 / say-01
                                                   :ARG0 (u_9862 / you)
                                                   :ARG1-of (u_9860 / think-01
                                                                    :ARG0 (u_9861 / we)))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The men who I assumed that you assumed liked the astronaut actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(men,subj_relA(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(assumed,I))),liked),astronaut)))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_contrastive_coref_17
# ::suppl deep_recursion_rc_contrastive_coref_17
(u_9871 / hate-01
        :ARG0 (r / man
                 :ARG0-of (u_9869 / like-01
                                  :ARG1 (a / astronaut
                                           :ARG1-of u_9871)
                                  :ARG1-of (u_9865 / assume-02
                                                   :ARG0 (u_9868 / you)
                                                   :ARG1-of (u_9866 / assume-02
                                                                    :ARG0 (u_9867 / i)))))
        :concession (a2 / after-all)
        :ARG1-of (u_9870 / actual-02))

# ::snt The kids who I assumed that we thought hated the astronaut actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(kids,subj_relB(CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_gap_end_recursion(CP_with_gap_base(assumed,I))),hated),astronaut)))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_contrastive_coref_18
# ::suppl deep_recursion_rc_contrastive_coref_18
(u_9878 / like-01
        :ARG0 (r / kid
                 :ARG0-of (u_9876 / hate-01
                                  :ARG1 (a / astronaut
                                           :ARG1-of u_9878)
                                  :ARG1-of (u_9872 / think-01
                                                   :ARG0 (u_9875 / we)
                                                   :ARG1-of (u_9873 / assume-02
                                                                    :ARG0 (u_9874 / i)))))
        :concession (a2 / after-all)
        :ARG1-of (u_9877 / actual-02))

# ::snt The kids who we claimed that you said liked the astronaut actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(kids,subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,you),CP_gap_end_recursion(CP_with_gap_base(claimed,we))),liked),astronaut)))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_contrastive_coref_19
# ::suppl deep_recursion_rc_contrastive_coref_19
(u_9885 / hate-01
        :ARG0 (r / kid
                 :ARG0-of (u_9883 / like-01
                                  :ARG1 (a / astronaut
                                           :ARG1-of u_9885)
                                  :ARG1-of (u_9879 / say-01
                                                   :ARG0 (u_9882 / you)
                                                   :ARG1-of (u_9880 / claim-01
                                                                    :ARG0 (u_9881 / we)))))
        :concession (a2 / after-all)
        :ARG1-of (u_9884 / actual-02))

# ::snt The men who I said that you said that the doctor claimed liked the astronaut actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(men,subj_relA(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(unary_N_adapter(doctor)))),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_gap_end_recursion(CP_with_gap_base(said,I)))),liked),astronaut)))
# ::size0 2
# ::size1 9
# ::id deep_recursion_rc_contrastive_coref_20
# ::suppl deep_recursion_rc_contrastive_coref_20
(u_9893 / hate-01
        :ARG0 (r / man
                 :ARG0-of (u_9891 / like-01
                                  :ARG1 (a / astronaut
                                           :ARG1-of u_9893)
                                  :ARG1-of (u_9890 / claim-01
                                                   :ARG0 (d / doctor)
                                                   :ARG1-of (u_9886 / say-01
                                                                    :ARG0 (u_9889 / you)
                                                                    :ARG1-of (u_9887 / say-01
                                                                                     :ARG0 (u_9888 / i))))))
        :concession (a2 / after-all)
        :ARG1-of (u_9892 / actual-02))

# ::snt The soldier who we thought that I thought that you assumed hated the astronaut actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(soldier),subj_relB(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_gap_end_recursion(CP_with_gap_base(thought,we)))),hated),astronaut)))
# ::size0 2
# ::size1 8
# ::id deep_recursion_rc_contrastive_coref_21
# ::suppl deep_recursion_rc_contrastive_coref_21
(u_9901 / like-01
        :ARG0 (s / soldier
                 :ARG0-of (r / hate-01
                             :ARG1 (a / astronaut
                                      :ARG1-of u_9901)
                             :ARG1-of (u_9894 / assume-02
                                              :ARG0 (u_9899 / you)
                                              :ARG1-of (u_9895 / think-01
                                                               :ARG0 (u_9898 / i)
                                                               :ARG1-of (u_9896 / think-01
                                                                                :ARG0 (u_9897 / we))))))
        :concession (a2 / after-all)
        :ARG1-of (u_9900 / actual-02))

# ::snt The kids who I said that you assumed that the astronaut said liked the lawyer actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(kids,subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(unary_N_adapter(astronaut)))),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(said,I)))),liked),lawyer)))
# ::size0 2
# ::size1 9
# ::id deep_recursion_rc_contrastive_coref_22
# ::suppl deep_recursion_rc_contrastive_coref_22
(u_9909 / hate-01
        :ARG0 (r / kid
                 :ARG0-of (u_9907 / like-01
                                  :ARG1 (m / lawyer
                                           :ARG1-of u_9909)
                                  :ARG1-of (u_9906 / say-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_9902 / assume-02
                                                                    :ARG0 (u_9905 / you)
                                                                    :ARG1-of (u_9903 / say-01
                                                                                     :ARG0 (u_9904 / i))))))
        :concession (a2 / after-all)
        :ARG1-of (u_9908 / actual-02))

# ::snt The astronaut who the men claimed that we said that you thought hated the doctor actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(astronaut),subj_relB(CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(men)))))),hated),doctor)))
# ::size0 2
# ::size1 10
# ::id deep_recursion_rc_contrastive_coref_23
# ::suppl deep_recursion_rc_contrastive_coref_23
(u_9917 / like-01
        :ARG0 (a / astronaut
                 :ARG0-of (r / hate-01
                             :ARG1 (d / doctor
                                      :ARG1-of u_9917)
                             :ARG1-of (u_9910 / think-01
                                              :ARG0 (u_9915 / you)
                                              :ARG1-of (u_9911 / say-01
                                                               :ARG0 (u_9914 / we)
                                                               :ARG1-of (u_9912 / claim-01
                                                                                :ARG0 (u_9913 / man))))))
        :concession (a2 / after-all)
        :ARG1-of (u_9916 / actual-02))

# ::snt The women who you assumed that the lawyer thought that I claimed hated the soldier actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(women,subj_relB(CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_gap_end_recursion(CP_with_gap_base(assumed,you)))),hated),soldier)))
# ::size0 2
# ::size1 10
# ::id deep_recursion_rc_contrastive_coref_24
# ::suppl deep_recursion_rc_contrastive_coref_24
(u_9925 / like-01
        :ARG0 (r / woman
                 :ARG0-of (u_9924 / hate-01
                                  :ARG1 (s / soldier
                                           :ARG1-of u_9925)
                                  :ARG1-of (u_9918 / claim-01
                                                   :ARG0 (u_9922 / i)
                                                   :ARG1-of (u_9921 / think-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_9919 / assume-02
                                                                                     :ARG0 (u_9920 / you))))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The women who the boys claimed that we said that I said liked the soldier actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(women,subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(boys)))))),liked),soldier)))
# ::size0 2
# ::size1 10
# ::id deep_recursion_rc_contrastive_coref_25
# ::suppl deep_recursion_rc_contrastive_coref_25
(u_9934 / hate-01
        :ARG0 (r / woman
                 :ARG0-of (u_9933 / like-01
                                  :ARG1 (s / soldier
                                           :ARG1-of u_9934)
                                  :ARG1-of (u_9926 / say-01
                                                   :ARG0 (u_9931 / i)
                                                   :ARG1-of (u_9927 / say-01
                                                                    :ARG0 (u_9930 / we)
                                                                    :ARG1-of (u_9928 / claim-01
                                                                                     :ARG0 (u_9929 / boy))))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The girls who I claimed that we claimed that you claimed liked the doctor actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(girls,subj_relA(CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_gap_end_recursion(CP_with_gap_base(claimed,I)))),liked),doctor)))
# ::size0 2
# ::size1 8
# ::id deep_recursion_rc_contrastive_coref_26
# ::suppl deep_recursion_rc_contrastive_coref_26
(u_9942 / hate-01
        :ARG0 (r / girl
                 :ARG0-of (u_9941 / like-01
                                  :ARG1 (d / doctor
                                           :ARG1-of u_9942)
                                  :ARG1-of (u_9935 / claim-01
                                                   :ARG0 (u_9940 / you)
                                                   :ARG1-of (u_9936 / claim-01
                                                                    :ARG0 (u_9939 / we)
                                                                    :ARG1-of (u_9937 / claim-01
                                                                                     :ARG0 (u_9938 / i))))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The soldier who I thought that you said that we claimed hated the doctor actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(soldier),subj_relB(CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_gap_end_recursion(CP_with_gap_base(thought,I)))),hated),doctor)))
# ::size0 2
# ::size1 8
# ::id deep_recursion_rc_contrastive_coref_27
# ::suppl deep_recursion_rc_contrastive_coref_27
(u_9949 / like-01
        :ARG0 (s / soldier
                 :ARG0-of (r / hate-01
                             :ARG1 (d / doctor
                                      :ARG1-of u_9949)
                             :ARG1-of (u_9943 / claim-01
                                              :ARG0 (u_9948 / we)
                                              :ARG1-of (u_9944 / say-01
                                                               :ARG0 (u_9947 / you)
                                                               :ARG1-of (u_9945 / think-01
                                                                                :ARG0 (u_9946 / i))))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The girls who the doctor thought that I said that we assumed liked the soldier actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(girls,subj_relA(CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(said,I),CP_gap_end_recursion(CP_with_gap_base(thought,DP_the(NP_unary(unary_N_adapter(doctor))))))),liked),soldier)))
# ::size0 2
# ::size1 11
# ::id deep_recursion_rc_contrastive_coref_28
# ::suppl deep_recursion_rc_contrastive_coref_28
(u_9957 / hate-01
        :ARG0 (r / girl
                 :ARG0-of (u_9956 / like-01
                                  :ARG1 (s / soldier
                                           :ARG1-of u_9957)
                                  :ARG1-of (u_9950 / assume-02
                                                   :ARG0 (u_9954 / we)
                                                   :ARG1-of (u_9951 / say-01
                                                                    :ARG0 (u_9953 / i)
                                                                    :ARG1-of (u_9952 / think-01
                                                                                     :ARG0 (d / doctor))))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The soldier who we thought that the lawyer assumed that you claimed liked the astronaut actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(soldier),subj_relA(CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_gap_end_recursion(CP_with_gap_base(thought,we)))),liked),astronaut)))
# ::size0 2
# ::size1 10
# ::id deep_recursion_rc_contrastive_coref_29
# ::suppl deep_recursion_rc_contrastive_coref_29
(u_9964 / hate-01
        :ARG0 (s / soldier
                 :ARG0-of (r / like-01
                             :ARG1 (a / astronaut
                                      :ARG1-of u_9964)
                             :ARG1-of (u_9958 / claim-01
                                              :ARG0 (u_9962 / you)
                                              :ARG1-of (u_9961 / assume-02
                                                               :ARG0 (m / lawyer)
                                                               :ARG1-of (u_9959 / think-01
                                                                                :ARG0 (u_9960 / we))))))
        :concession (a2 / after-all)
        :ARG1-of (u_9963 / actual-02))

# ::snt The lawyer who the women claimed that I thought that you assumed that we assumed hated the astronaut actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(lawyer),subj_relB(CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(women))))))),hated),astronaut)))
# ::size0 3
# ::size1 11
# ::id deep_recursion_rc_contrastive_coref_30
# ::suppl deep_recursion_rc_contrastive_coref_30
(u_9974 / like-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / hate-01
                             :ARG1 (a / astronaut
                                      :ARG1-of u_9974)
                             :ARG1-of (u_9965 / assume-02
                                              :ARG0 (u_9972 / we)
                                              :ARG1-of (u_9966 / assume-02
                                                               :ARG0 (u_9971 / you)
                                                               :ARG1-of (u_9967 / think-01
                                                                                :ARG0 (u_9970 / i)
                                                                                :ARG1-of (u_9968 / claim-01
                                                                                                 :ARG0 (u_9969 / woman)))))))
        :concession (a2 / after-all)
        :ARG1-of (u_9973 / actual-02))

# ::snt The girls who we claimed that the doctor said that I claimed that you said liked the astronaut actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(girls,subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(unary_N_adapter(doctor)))),CP_gap_end_recursion(CP_with_gap_base(claimed,we))))),liked),astronaut)))
# ::size0 3
# ::size1 11
# ::id deep_recursion_rc_contrastive_coref_31
# ::suppl deep_recursion_rc_contrastive_coref_31
(u_9984 / hate-01
        :ARG0 (r / girl
                 :ARG0-of (u_9982 / like-01
                                  :ARG1 (a / astronaut
                                           :ARG1-of u_9984)
                                  :ARG1-of (u_9975 / say-01
                                                   :ARG0 (u_9981 / you)
                                                   :ARG1-of (u_9976 / claim-01
                                                                    :ARG0 (u_9980 / i)
                                                                    :ARG1-of (u_9979 / say-01
                                                                                     :ARG0 (d / doctor)
                                                                                     :ARG1-of (u_9977 / claim-01
                                                                                                      :ARG0 (u_9978 / we)))))))
        :concession (a2 / after-all)
        :ARG1-of (u_9983 / actual-02))

# ::snt The men who the girls said that we claimed that I claimed that you said liked the doctor actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(men,subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_gap_end_recursion(CP_with_gap_base(said,DP_the(NP_unary(girls))))))),liked),doctor)))
# ::size0 3
# ::size1 11
# ::id deep_recursion_rc_contrastive_coref_32
# ::suppl deep_recursion_rc_contrastive_coref_32
(u_9994 / hate-01
        :ARG0 (r / man
                 :ARG0-of (u_9993 / like-01
                                  :ARG1 (d / doctor
                                           :ARG1-of u_9994)
                                  :ARG1-of (u_9985 / say-01
                                                   :ARG0 (u_9992 / you)
                                                   :ARG1-of (u_9986 / claim-01
                                                                    :ARG0 (u_9991 / i)
                                                                    :ARG1-of (u_9987 / claim-01
                                                                                     :ARG0 (u_9990 / we)
                                                                                     :ARG1-of (u_9988 / say-01
                                                                                                      :ARG0 (u_9989 / girl)))))))
        :concession (a2 / after-all)
        :ARG1-of (a / actual-02))

# ::snt The girls who I said that the astronaut thought that we claimed that the men said liked the lawyer actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(girls,subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(men))),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(unary_N_adapter(astronaut)))),CP_gap_end_recursion(CP_with_gap_base(said,I))))),liked),lawyer)))
# ::size0 3
# ::size1 11
# ::id deep_recursion_rc_contrastive_coref_33
# ::suppl deep_recursion_rc_contrastive_coref_33
(u_10004 / hate-01
         :ARG0 (r / girl
                  :ARG0-of (u_10002 / like-01
                                    :ARG1 (m / lawyer
                                             :ARG1-of u_10004)
                                    :ARG1-of (u_9995 / say-01
                                                     :ARG0 (u_10001 / man)
                                                     :ARG1-of (u_9996 / claim-01
                                                                      :ARG0 (u_10000 / we)
                                                                      :ARG1-of (u_9999 / think-01
                                                                                       :ARG0 (a / astronaut)
                                                                                       :ARG1-of (u_9997 / say-01
                                                                                                        :ARG0 (u_9998 / i)))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10003 / actual-02))

# ::snt The soldier who we said that you said that I thought that the boys assumed hated the astronaut actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(soldier),subj_relB(CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_gap_end_recursion(CP_with_gap_base(said,we))))),hated),astronaut)))
# ::size0 3
# ::size1 9
# ::id deep_recursion_rc_contrastive_coref_34
# ::suppl deep_recursion_rc_contrastive_coref_34
(u_10014 / like-01
         :ARG0 (s / soldier
                  :ARG0-of (r / hate-01
                              :ARG1 (a / astronaut
                                       :ARG1-of u_10014)
                              :ARG1-of (u_10005 / assume-02
                                                :ARG0 (u_10012 / boy)
                                                :ARG1-of (u_10006 / think-01
                                                                  :ARG0 (u_10011 / i)
                                                                  :ARG1-of (u_10007 / say-01
                                                                                    :ARG0 (u_10010 / you)
                                                                                    :ARG1-of (u_10008 / say-01
                                                                                                      :ARG0 (u_10009 / we)))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10013 / actual-02))

# ::snt The doctor who the women assumed that you claimed that we assumed that I claimed liked the lawyer actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(doctor),subj_relA(CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_gap_end_recursion(CP_with_gap_base(assumed,DP_the(NP_unary(women))))))),liked),lawyer)))
# ::size0 3
# ::size1 11
# ::id deep_recursion_rc_contrastive_coref_35
# ::suppl deep_recursion_rc_contrastive_coref_35
(u_10023 / hate-01
         :ARG0 (d / doctor
                  :ARG0-of (r / like-01
                              :ARG1 (m / lawyer
                                       :ARG1-of u_10023)
                              :ARG1-of (u_10015 / claim-01
                                                :ARG0 (u_10022 / i)
                                                :ARG1-of (u_10016 / assume-02
                                                                  :ARG0 (u_10021 / we)
                                                                  :ARG1-of (u_10017 / claim-01
                                                                                    :ARG0 (u_10020 / you)
                                                                                    :ARG1-of (u_10018 / assume-02
                                                                                                      :ARG0 (u_10019 / woman)))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The women who I claimed that you claimed that the lawyer assumed that we assumed hated the soldier actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(women,subj_relB(CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_gap_end_recursion(CP_with_gap_base(claimed,I))))),hated),soldier)))
# ::size0 3
# ::size1 10
# ::id deep_recursion_rc_contrastive_coref_36
# ::suppl deep_recursion_rc_contrastive_coref_36
(u_10033 / like-01
         :ARG0 (r / woman
                  :ARG0-of (u_10032 / hate-01
                                    :ARG1 (s / soldier
                                             :ARG1-of u_10033)
                                    :ARG1-of (u_10024 / assume-02
                                                      :ARG0 (u_10030 / we)
                                                      :ARG1-of (u_10029 / assume-02
                                                                        :ARG0 (m / lawyer)
                                                                        :ARG1-of (u_10025 / claim-01
                                                                                          :ARG0 (u_10028 / you)
                                                                                          :ARG1-of (u_10026 / claim-01
                                                                                                            :ARG0 (u_10027 / i)))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The kids who the men assumed that we said that I claimed that you assumed liked the lawyer actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(kids,subj_relA(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_gap_end_recursion(CP_with_gap_base(assumed,DP_the(NP_unary(men))))))),liked),lawyer)))
# ::size0 3
# ::size1 11
# ::id deep_recursion_rc_contrastive_coref_37
# ::suppl deep_recursion_rc_contrastive_coref_37
(u_10043 / hate-01
         :ARG0 (r / kid
                  :ARG0-of (u_10042 / like-01
                                    :ARG1 (m / lawyer
                                             :ARG1-of u_10043)
                                    :ARG1-of (u_10034 / assume-02
                                                      :ARG0 (u_10041 / you)
                                                      :ARG1-of (u_10035 / claim-01
                                                                        :ARG0 (u_10040 / i)
                                                                        :ARG1-of (u_10036 / say-01
                                                                                          :ARG0 (u_10039 / we)
                                                                                          :ARG1-of (u_10037 / assume-02
                                                                                                            :ARG0 (u_10038 / man)))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The doctor who I claimed that the women claimed that we said that you assumed hated the astronaut actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(doctor),subj_relB(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(women))),CP_gap_end_recursion(CP_with_gap_base(claimed,I))))),hated),astronaut)))
# ::size0 3
# ::size1 10
# ::id deep_recursion_rc_contrastive_coref_38
# ::suppl deep_recursion_rc_contrastive_coref_38
(u_10053 / like-01
         :ARG0 (d / doctor
                  :ARG0-of (r / hate-01
                              :ARG1 (a / astronaut
                                       :ARG1-of u_10053)
                              :ARG1-of (u_10044 / assume-02
                                                :ARG0 (u_10051 / you)
                                                :ARG1-of (u_10045 / say-01
                                                                  :ARG0 (u_10050 / we)
                                                                  :ARG1-of (u_10046 / claim-01
                                                                                    :ARG0 (u_10049 / woman)
                                                                                    :ARG1-of (u_10047 / claim-01
                                                                                                      :ARG0 (u_10048 / i)))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10052 / actual-02))

# ::snt The astronaut who you assumed that I thought that we assumed that the men thought hated the lawyer actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(astronaut),subj_relB(CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(men))),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_gap_end_recursion(CP_with_gap_base(assumed,you))))),hated),lawyer)))
# ::size0 3
# ::size1 9
# ::id deep_recursion_rc_contrastive_coref_39
# ::suppl deep_recursion_rc_contrastive_coref_39
(u_10063 / like-01
         :ARG0 (a / astronaut
                  :ARG0-of (r / hate-01
                              :ARG1 (m / lawyer
                                       :ARG1-of u_10063)
                              :ARG1-of (u_10054 / think-01
                                                :ARG0 (u_10061 / man)
                                                :ARG1-of (u_10055 / assume-02
                                                                  :ARG0 (u_10060 / we)
                                                                  :ARG1-of (u_10056 / think-01
                                                                                    :ARG0 (u_10059 / i)
                                                                                    :ARG1-of (u_10057 / assume-02
                                                                                                      :ARG0 (u_10058 / you)))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10062 / actual-02))

# ::snt The men who we assumed that the lawyer said that you said that I said that the kids said liked the soldier actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(men,subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_gap_end_recursion(CP_with_gap_base(assumed,we)))))),liked),soldier)))
# ::size0 4
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_40
# ::suppl deep_recursion_rc_contrastive_coref_40
(u_10075 / hate-01
         :ARG0 (r / man
                  :ARG0-of (u_10074 / like-01
                                    :ARG1 (s / soldier
                                             :ARG1-of u_10075)
                                    :ARG1-of (u_10064 / say-01
                                                      :ARG0 (u_10072 / kid)
                                                      :ARG1-of (u_10065 / say-01
                                                                        :ARG0 (u_10071 / i)
                                                                        :ARG1-of (u_10066 / say-01
                                                                                          :ARG0 (u_10070 / you)
                                                                                          :ARG1-of (u_10069 / say-01
                                                                                                            :ARG0 (m / lawyer)
                                                                                                            :ARG1-of (u_10067 / assume-02
                                                                                                                              :ARG0 (u_10068 / we))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The boys who you said that we said that the kids thought that the astronaut claimed that I claimed liked the lawyer actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(boys,subj_relA(CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(unary_N_adapter(astronaut)))),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_gap_end_recursion(CP_with_gap_base(said,you)))))),liked),lawyer)))
# ::size0 4
# ::size1 10
# ::id deep_recursion_rc_contrastive_coref_41
# ::suppl deep_recursion_rc_contrastive_coref_41
(u_10087 / hate-01
         :ARG0 (r / boy
                  :ARG0-of (u_10085 / like-01
                                    :ARG1 (m / lawyer
                                             :ARG1-of u_10087)
                                    :ARG1-of (u_10076 / claim-01
                                                      :ARG0 (u_10084 / i)
                                                      :ARG1-of (u_10083 / claim-01
                                                                        :ARG0 (a / astronaut)
                                                                        :ARG1-of (u_10077 / think-01
                                                                                          :ARG0 (u_10082 / kid)
                                                                                          :ARG1-of (u_10078 / say-01
                                                                                                            :ARG0 (u_10081 / we)
                                                                                                            :ARG1-of (u_10079 / say-01
                                                                                                                              :ARG0 (u_10080 / you))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10086 / actual-02))

# ::snt The women who I claimed that you assumed that we said that the men assumed that the doctor said hated the lawyer actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(women,subj_relB(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(unary_N_adapter(doctor)))),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(men))),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(claimed,I)))))),hated),lawyer)))
# ::size0 4
# ::size1 10
# ::id deep_recursion_rc_contrastive_coref_42
# ::suppl deep_recursion_rc_contrastive_coref_42
(u_10098 / like-01
         :ARG0 (r / woman
                  :ARG0-of (u_10097 / hate-01
                                    :ARG1 (m / lawyer
                                             :ARG1-of u_10098)
                                    :ARG1-of (u_10096 / say-01
                                                      :ARG0 (d / doctor)
                                                      :ARG1-of (u_10088 / assume-02
                                                                        :ARG0 (u_10095 / man)
                                                                        :ARG1-of (u_10089 / say-01
                                                                                          :ARG0 (u_10094 / we)
                                                                                          :ARG1-of (u_10090 / assume-02
                                                                                                            :ARG0 (u_10093 / you)
                                                                                                            :ARG1-of (u_10091 / claim-01
                                                                                                                              :ARG0 (u_10092 / i))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The lawyer who we assumed that you claimed that the girls claimed that I assumed that the soldier assumed liked the doctor actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(lawyer),subj_relA(CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(soldier)))),CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_gap_end_recursion(CP_with_gap_base(assumed,we)))))),liked),doctor)))
# ::size0 4
# ::size1 10
# ::id deep_recursion_rc_contrastive_coref_43
# ::suppl deep_recursion_rc_contrastive_coref_43
(u_10109 / hate-01
         :ARG0 (m / lawyer
                  :ARG0-of (r / like-01
                              :ARG1 (d / doctor
                                       :ARG1-of u_10109)
                              :ARG1-of (u_10107 / assume-02
                                                :ARG0 (u_10108 / soldier)
                                                :ARG1-of (u_10099 / assume-02
                                                                  :ARG0 (u_10106 / i)
                                                                  :ARG1-of (u_10100 / claim-01
                                                                                    :ARG0 (u_10105 / girl)
                                                                                    :ARG1-of (u_10101 / claim-01
                                                                                                      :ARG0 (u_10104 / you)
                                                                                                      :ARG1-of (u_10102 / assume-02
                                                                                                                        :ARG0 (u_10103 / we))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The lawyer who we assumed that the girls assumed that you said that I thought that the women thought hated the astronaut actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(lawyer),subj_relB(CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(women))),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(assumed,we)))))),hated),astronaut)))
# ::size0 4
# ::size1 11
# ::id deep_recursion_rc_contrastive_coref_44
# ::suppl deep_recursion_rc_contrastive_coref_44
(u_10121 / like-01
         :ARG0 (m / lawyer
                  :ARG0-of (r / hate-01
                              :ARG1 (a / astronaut
                                       :ARG1-of u_10121)
                              :ARG1-of (u_10110 / think-01
                                                :ARG0 (u_10119 / woman)
                                                :ARG1-of (u_10111 / think-01
                                                                  :ARG0 (u_10118 / i)
                                                                  :ARG1-of (u_10112 / say-01
                                                                                    :ARG0 (u_10117 / you)
                                                                                    :ARG1-of (u_10113 / assume-02
                                                                                                      :ARG0 (u_10116 / girl)
                                                                                                      :ARG1-of (u_10114 / assume-02
                                                                                                                        :ARG0 (u_10115 / we))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10120 / actual-02))

# ::snt The girls who I thought that the kids assumed that we thought that you said that the boys thought hated the lawyer actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(girls,subj_relB(CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(kids))),CP_gap_end_recursion(CP_with_gap_base(thought,I)))))),hated),lawyer)))
# ::size0 4
# ::size1 11
# ::id deep_recursion_rc_contrastive_coref_45
# ::suppl deep_recursion_rc_contrastive_coref_45
(u_10133 / like-01
         :ARG0 (r / girl
                  :ARG0-of (u_10132 / hate-01
                                    :ARG1 (m / lawyer
                                             :ARG1-of u_10133)
                                    :ARG1-of (u_10122 / think-01
                                                      :ARG0 (u_10131 / boy)
                                                      :ARG1-of (u_10123 / say-01
                                                                        :ARG0 (u_10130 / you)
                                                                        :ARG1-of (u_10124 / think-01
                                                                                          :ARG0 (u_10129 / we)
                                                                                          :ARG1-of (u_10125 / assume-02
                                                                                                            :ARG0 (u_10128 / kid)
                                                                                                            :ARG1-of (u_10126 / think-01
                                                                                                                              :ARG0 (u_10127 / i))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The soldier who the women assumed that we said that you assumed that I thought that the men assumed liked the doctor actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(soldier),subj_relA(CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(men))),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_gap_end_recursion(CP_with_gap_base(assumed,DP_the(NP_unary(women)))))))),liked),doctor)))
# ::size0 4
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_46
# ::suppl deep_recursion_rc_contrastive_coref_46
(u_10144 / hate-01
         :ARG0 (s / soldier
                  :ARG0-of (r / like-01
                              :ARG1 (d / doctor
                                       :ARG1-of u_10144)
                              :ARG1-of (u_10134 / assume-02
                                                :ARG0 (u_10143 / man)
                                                :ARG1-of (u_10135 / think-01
                                                                  :ARG0 (u_10142 / i)
                                                                  :ARG1-of (u_10136 / assume-02
                                                                                    :ARG0 (u_10141 / you)
                                                                                    :ARG1-of (u_10137 / say-01
                                                                                                      :ARG0 (u_10140 / we)
                                                                                                      :ARG1-of (u_10138 / assume-02
                                                                                                                        :ARG0 (u_10139 / woman))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The soldier who we thought that the kids claimed that the boys claimed that you said that I said hated the doctor actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(soldier),subj_relB(CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(kids))),CP_gap_end_recursion(CP_with_gap_base(thought,we)))))),hated),doctor)))
# ::size0 4
# ::size1 11
# ::id deep_recursion_rc_contrastive_coref_47
# ::suppl deep_recursion_rc_contrastive_coref_47
(u_10155 / like-01
         :ARG0 (s / soldier
                  :ARG0-of (r / hate-01
                              :ARG1 (d / doctor
                                       :ARG1-of u_10155)
                              :ARG1-of (u_10145 / say-01
                                                :ARG0 (u_10154 / i)
                                                :ARG1-of (u_10146 / say-01
                                                                  :ARG0 (u_10153 / you)
                                                                  :ARG1-of (u_10147 / claim-01
                                                                                    :ARG0 (u_10152 / boy)
                                                                                    :ARG1-of (u_10148 / claim-01
                                                                                                      :ARG0 (u_10151 / kid)
                                                                                                      :ARG1-of (u_10149 / think-01
                                                                                                                        :ARG0 (u_10150 / we))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The boys who the girls claimed that you assumed that I claimed that we claimed that the kids claimed liked the doctor actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(boys,subj_relA(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(girls)))))))),liked),doctor)))
# ::size0 4
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_48
# ::suppl deep_recursion_rc_contrastive_coref_48
(u_10167 / hate-01
         :ARG0 (r / boy
                  :ARG0-of (u_10166 / like-01
                                    :ARG1 (d / doctor
                                             :ARG1-of u_10167)
                                    :ARG1-of (u_10156 / claim-01
                                                      :ARG0 (u_10165 / kid)
                                                      :ARG1-of (u_10157 / claim-01
                                                                        :ARG0 (u_10164 / we)
                                                                        :ARG1-of (u_10158 / claim-01
                                                                                          :ARG0 (u_10163 / i)
                                                                                          :ARG1-of (u_10159 / assume-02
                                                                                                            :ARG0 (u_10162 / you)
                                                                                                            :ARG1-of (u_10160 / claim-01
                                                                                                                              :ARG0 (u_10161 / girl))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The men who the girls claimed that we said that you said that the lawyer claimed that I assumed hated the soldier actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(men,subj_relB(CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(girls)))))))),hated),soldier)))
# ::size0 4
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_49
# ::suppl deep_recursion_rc_contrastive_coref_49
(u_10179 / like-01
         :ARG0 (r / man
                  :ARG0-of (u_10178 / hate-01
                                    :ARG1 (s / soldier
                                             :ARG1-of u_10179)
                                    :ARG1-of (u_10168 / assume-02
                                                      :ARG0 (u_10176 / i)
                                                      :ARG1-of (u_10175 / claim-01
                                                                        :ARG0 (m / lawyer)
                                                                        :ARG1-of (u_10169 / say-01
                                                                                          :ARG0 (u_10174 / you)
                                                                                          :ARG1-of (u_10170 / say-01
                                                                                                            :ARG0 (u_10173 / we)
                                                                                                            :ARG1-of (u_10171 / claim-01
                                                                                                                              :ARG0 (u_10172 / girl))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The girls who I thought that the doctor assumed that we claimed that the women assumed that the soldier said that you assumed liked the lawyer actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(girls,subj_relA(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(unary_N_adapter(soldier)))),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(women))),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(doctor)))),CP_gap_end_recursion(CP_with_gap_base(thought,I))))))),liked),lawyer)))
# ::size0 5
# ::size1 13
# ::id deep_recursion_rc_contrastive_coref_50
# ::suppl deep_recursion_rc_contrastive_coref_50
(u_10192 / hate-01
         :ARG0 (r / girl
                  :ARG0-of (u_10191 / like-01
                                    :ARG1 (m / lawyer
                                             :ARG1-of u_10192)
                                    :ARG1-of (u_10180 / assume-02
                                                      :ARG0 (u_10189 / you)
                                                      :ARG1-of (u_10188 / say-01
                                                                        :ARG0 (u_10190 / soldier)
                                                                        :ARG1-of (u_10181 / assume-02
                                                                                          :ARG0 (u_10187 / woman)
                                                                                          :ARG1-of (u_10182 / claim-01
                                                                                                            :ARG0 (u_10186 / we)
                                                                                                            :ARG1-of (u_10185 / assume-02
                                                                                                                              :ARG0 (d / doctor)
                                                                                                                              :ARG1-of (u_10183 / think-01
                                                                                                                                                :ARG0 (u_10184 / i)))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The doctor who we claimed that the boys assumed that the men assumed that you claimed that the women thought that I said liked the soldier actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(doctor),subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(women))),CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(men))),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(boys))),CP_gap_end_recursion(CP_with_gap_base(claimed,we))))))),liked),soldier)))
# ::size0 5
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_51
# ::suppl deep_recursion_rc_contrastive_coref_51
(u_10206 / hate-01
         :ARG0 (d / doctor
                  :ARG0-of (r / like-01
                              :ARG1 (s / soldier
                                       :ARG1-of u_10206)
                              :ARG1-of (u_10193 / say-01
                                                :ARG0 (u_10204 / i)
                                                :ARG1-of (u_10194 / think-01
                                                                  :ARG0 (u_10203 / woman)
                                                                  :ARG1-of (u_10195 / claim-01
                                                                                    :ARG0 (u_10202 / you)
                                                                                    :ARG1-of (u_10196 / assume-02
                                                                                                      :ARG0 (u_10201 / man)
                                                                                                      :ARG1-of (u_10197 / assume-02
                                                                                                                        :ARG0 (u_10200 / boy)
                                                                                                                        :ARG1-of (u_10198 / claim-01
                                                                                                                                          :ARG0 (u_10199 / we)))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The boys who we said that the girls assumed that the lawyer assumed that I claimed that the women thought that you assumed hated the soldier actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(boys,subj_relB(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(women))),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(said,we))))))),hated),soldier)))
# ::size0 5
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_52
# ::suppl deep_recursion_rc_contrastive_coref_52
(u_10220 / like-01
         :ARG0 (r / boy
                  :ARG0-of (u_10219 / hate-01
                                    :ARG1 (s / soldier
                                             :ARG1-of u_10220)
                                    :ARG1-of (u_10207 / assume-02
                                                      :ARG0 (u_10217 / you)
                                                      :ARG1-of (u_10208 / think-01
                                                                        :ARG0 (u_10216 / woman)
                                                                        :ARG1-of (u_10209 / claim-01
                                                                                          :ARG0 (u_10215 / i)
                                                                                          :ARG1-of (u_10214 / assume-02
                                                                                                            :ARG0 (m / lawyer)
                                                                                                            :ARG1-of (u_10210 / assume-02
                                                                                                                              :ARG0 (u_10213 / girl)
                                                                                                                              :ARG1-of (u_10211 / say-01
                                                                                                                                                :ARG0 (u_10212 / we)))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The astronaut who I claimed that the girls said that the kids said that you claimed that we assumed that the lawyer claimed hated the soldier actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(astronaut),subj_relB(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(claimed,I))))))),hated),soldier)))
# ::size0 5
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_53
# ::suppl deep_recursion_rc_contrastive_coref_53
(u_10234 / like-01
         :ARG0 (a / astronaut
                  :ARG0-of (r / hate-01
                              :ARG1 (s / soldier
                                       :ARG1-of u_10234)
                              :ARG1-of (u_10231 / claim-01
                                                :ARG0 (m / lawyer)
                                                :ARG1-of (u_10221 / assume-02
                                                                  :ARG0 (u_10230 / we)
                                                                  :ARG1-of (u_10222 / claim-01
                                                                                    :ARG0 (u_10229 / you)
                                                                                    :ARG1-of (u_10223 / say-01
                                                                                                      :ARG0 (u_10228 / kid)
                                                                                                      :ARG1-of (u_10224 / say-01
                                                                                                                        :ARG0 (u_10227 / girl)
                                                                                                                        :ARG1-of (u_10225 / claim-01
                                                                                                                                          :ARG0 (u_10226 / i)))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10233 / actual-02))

# ::snt The men who the soldier assumed that we claimed that I claimed that you claimed that the lawyer claimed that the girls claimed hated the doctor actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(men,subj_relB(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_gap_end_recursion(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(soldier)))))))))),hated),doctor)))
# ::size0 5
# ::size1 14
# ::id deep_recursion_rc_contrastive_coref_54
# ::suppl deep_recursion_rc_contrastive_coref_54
(u_10247 / like-01
         :ARG0 (r / man
                  :ARG0-of (u_10246 / hate-01
                                    :ARG1 (d / doctor
                                             :ARG1-of u_10247)
                                    :ARG1-of (u_10235 / claim-01
                                                      :ARG0 (u_10244 / girl)
                                                      :ARG1-of (u_10243 / claim-01
                                                                        :ARG0 (m / lawyer)
                                                                        :ARG1-of (u_10236 / claim-01
                                                                                          :ARG0 (u_10242 / you)
                                                                                          :ARG1-of (u_10237 / claim-01
                                                                                                            :ARG0 (u_10241 / i)
                                                                                                            :ARG1-of (u_10238 / claim-01
                                                                                                                              :ARG0 (u_10240 / we)
                                                                                                                              :ARG1-of (u_10239 / assume-02
                                                                                                                                                :ARG0 (u_10245 / soldier)))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The soldier who you said that the lawyer assumed that we assumed that the kids assumed that I assumed that the women said hated the astronaut actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(soldier),subj_relB(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(women))),CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_gap_end_recursion(CP_with_gap_base(said,you))))))),hated),astronaut)))
# ::size0 5
# ::size1 13
# ::id deep_recursion_rc_contrastive_coref_55
# ::suppl deep_recursion_rc_contrastive_coref_55
(u_10260 / like-01
         :ARG0 (s / soldier
                  :ARG0-of (r / hate-01
                              :ARG1 (a / astronaut
                                       :ARG1-of u_10260)
                              :ARG1-of (u_10248 / say-01
                                                :ARG0 (u_10258 / woman)
                                                :ARG1-of (u_10249 / assume-02
                                                                  :ARG0 (u_10257 / i)
                                                                  :ARG1-of (u_10250 / assume-02
                                                                                    :ARG0 (u_10256 / kid)
                                                                                    :ARG1-of (u_10251 / assume-02
                                                                                                      :ARG0 (u_10255 / we)
                                                                                                      :ARG1-of (u_10254 / assume-02
                                                                                                                        :ARG0 (m / lawyer)
                                                                                                                        :ARG1-of (u_10252 / say-01
                                                                                                                                          :ARG0 (u_10253 / you)))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10259 / actual-02))

# ::snt The lawyer who I thought that the women claimed that the doctor assumed that we said that the boys claimed that the kids thought liked the astronaut actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(lawyer),subj_relA(CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(doctor)))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(women))),CP_gap_end_recursion(CP_with_gap_base(thought,I))))))),liked),astronaut)))
# ::size0 5
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_56
# ::suppl deep_recursion_rc_contrastive_coref_56
(u_10273 / hate-01
         :ARG0 (m / lawyer
                  :ARG0-of (r / like-01
                              :ARG1 (a / astronaut
                                       :ARG1-of u_10273)
                              :ARG1-of (u_10261 / think-01
                                                :ARG0 (u_10271 / kid)
                                                :ARG1-of (u_10262 / claim-01
                                                                  :ARG0 (u_10270 / boy)
                                                                  :ARG1-of (u_10263 / say-01
                                                                                    :ARG0 (u_10269 / we)
                                                                                    :ARG1-of (u_10268 / assume-02
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_10264 / claim-01
                                                                                                                        :ARG0 (u_10267 / woman)
                                                                                                                        :ARG1-of (u_10265 / think-01
                                                                                                                                          :ARG0 (u_10266 / i)))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10272 / actual-02))

# ::snt The soldier who we thought that the boys said that I thought that you thought that the kids said that the girls thought hated the astronaut actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(soldier),subj_relB(CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(boys))),CP_gap_end_recursion(CP_with_gap_base(thought,we))))))),hated),astronaut)))
# ::size0 5
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_57
# ::suppl deep_recursion_rc_contrastive_coref_57
(u_10287 / like-01
         :ARG0 (s / soldier
                  :ARG0-of (r / hate-01
                              :ARG1 (a / astronaut
                                       :ARG1-of u_10287)
                              :ARG1-of (u_10274 / think-01
                                                :ARG0 (u_10285 / girl)
                                                :ARG1-of (u_10275 / say-01
                                                                  :ARG0 (u_10284 / kid)
                                                                  :ARG1-of (u_10276 / think-01
                                                                                    :ARG0 (u_10283 / you)
                                                                                    :ARG1-of (u_10277 / think-01
                                                                                                      :ARG0 (u_10282 / i)
                                                                                                      :ARG1-of (u_10278 / say-01
                                                                                                                        :ARG0 (u_10281 / boy)
                                                                                                                        :ARG1-of (u_10279 / think-01
                                                                                                                                          :ARG0 (u_10280 / we)))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10286 / actual-02))

# ::snt The boys who you said that the girls claimed that the men thought that I claimed that the kids thought that we said hated the soldier actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(boys,subj_relB(CP_with_gap_recursive(CP_with_gap_base(said,we),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(men))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(said,you))))))),hated),soldier)))
# ::size0 5
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_58
# ::suppl deep_recursion_rc_contrastive_coref_58
(u_10302 / like-01
         :ARG0 (r / boy
                  :ARG0-of (u_10301 / hate-01
                                    :ARG1 (s / soldier
                                             :ARG1-of u_10302)
                                    :ARG1-of (u_10288 / say-01
                                                      :ARG0 (u_10299 / we)
                                                      :ARG1-of (u_10289 / think-01
                                                                        :ARG0 (u_10298 / kid)
                                                                        :ARG1-of (u_10290 / claim-01
                                                                                          :ARG0 (u_10297 / i)
                                                                                          :ARG1-of (u_10291 / think-01
                                                                                                            :ARG0 (u_10296 / man)
                                                                                                            :ARG1-of (u_10292 / claim-01
                                                                                                                              :ARG0 (u_10295 / girl)
                                                                                                                              :ARG1-of (u_10293 / say-01
                                                                                                                                                :ARG0 (u_10294 / you)))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The girls who we said that the men thought that I claimed that the lawyer claimed that the boys assumed that the women thought liked the soldier actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(girls,subj_relA(CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(women))),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(men))),CP_gap_end_recursion(CP_with_gap_base(said,we))))))),liked),soldier)))
# ::size0 5
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_59
# ::suppl deep_recursion_rc_contrastive_coref_59
(u_10316 / hate-01
         :ARG0 (r / girl
                  :ARG0-of (u_10315 / like-01
                                    :ARG1 (s / soldier
                                             :ARG1-of u_10316)
                                    :ARG1-of (u_10303 / think-01
                                                      :ARG0 (u_10313 / woman)
                                                      :ARG1-of (u_10304 / assume-02
                                                                        :ARG0 (u_10312 / boy)
                                                                        :ARG1-of (u_10311 / claim-01
                                                                                          :ARG0 (m / lawyer)
                                                                                          :ARG1-of (u_10305 / claim-01
                                                                                                            :ARG0 (u_10310 / i)
                                                                                                            :ARG1-of (u_10306 / think-01
                                                                                                                              :ARG0 (u_10309 / man)
                                                                                                                              :ARG1-of (u_10307 / say-01
                                                                                                                                                :ARG0 (u_10308 / we)))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The lawyer who the boys claimed that we thought that the soldier thought that I thought that the girls thought that you assumed that the men said liked the doctor actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(lawyer),subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(men))),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(unary_N_adapter(soldier)))),CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(boys)))))))))),liked),doctor)))
# ::size0 6
# ::size1 14
# ::id deep_recursion_rc_contrastive_coref_60
# ::suppl deep_recursion_rc_contrastive_coref_60
(u_10331 / hate-01
         :ARG0 (m / lawyer
                  :ARG0-of (r / like-01
                              :ARG1 (d / doctor
                                       :ARG1-of u_10331)
                              :ARG1-of (u_10317 / say-01
                                                :ARG0 (u_10329 / man)
                                                :ARG1-of (u_10318 / assume-02
                                                                  :ARG0 (u_10328 / you)
                                                                  :ARG1-of (u_10319 / think-01
                                                                                    :ARG0 (u_10327 / girl)
                                                                                    :ARG1-of (u_10320 / think-01
                                                                                                      :ARG0 (u_10326 / i)
                                                                                                      :ARG1-of (u_10325 / think-01
                                                                                                                        :ARG0 (u_10330 / soldier)
                                                                                                                        :ARG1-of (u_10321 / think-01
                                                                                                                                          :ARG0 (u_10324 / we)
                                                                                                                                          :ARG1-of (u_10322 / claim-01
                                                                                                                                                            :ARG0 (u_10323 / boy))))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The kids who you assumed that we thought that the men claimed that the girls thought that the women assumed that the soldier said that I said hated the doctor actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(kids,subj_relB(CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(unary_N_adapter(soldier)))),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(women))),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(men))),CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_gap_end_recursion(CP_with_gap_base(assumed,you)))))))),hated),doctor)))
# ::size0 6
# ::size1 12
# ::id deep_recursion_rc_contrastive_coref_61
# ::suppl deep_recursion_rc_contrastive_coref_61
(u_10347 / like-01
         :ARG0 (r / kid
                  :ARG0-of (u_10346 / hate-01
                                    :ARG1 (d / doctor
                                             :ARG1-of u_10347)
                                    :ARG1-of (u_10332 / say-01
                                                      :ARG0 (u_10344 / i)
                                                      :ARG1-of (u_10343 / say-01
                                                                        :ARG0 (u_10345 / soldier)
                                                                        :ARG1-of (u_10333 / assume-02
                                                                                          :ARG0 (u_10342 / woman)
                                                                                          :ARG1-of (u_10334 / think-01
                                                                                                            :ARG0 (u_10341 / girl)
                                                                                                            :ARG1-of (u_10335 / claim-01
                                                                                                                              :ARG0 (u_10340 / man)
                                                                                                                              :ARG1-of (u_10336 / think-01
                                                                                                                                                :ARG0 (u_10339 / we)
                                                                                                                                                :ARG1-of (u_10337 / assume-02
                                                                                                                                                                  :ARG0 (u_10338 / you))))))))))
         :concession (a2 / after-all)
         :ARG1-of (a / actual-02))

# ::snt The astronaut who the girls claimed that you assumed that the lawyer assumed that we assumed that the kids claimed that I said that the women said hated the doctor actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(unary_N_adapter(astronaut),subj_relB(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(women))),CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(girls)))))))))),hated),doctor)))
# ::size0 6
# ::size1 14
# ::id deep_recursion_rc_contrastive_coref_62
# ::suppl deep_recursion_rc_contrastive_coref_62
(u_10362 / like-01
         :ARG0 (a / astronaut
                  :ARG0-of (r / hate-01
                              :ARG1 (d / doctor
                                       :ARG1-of u_10362)
                              :ARG1-of (u_10348 / say-01
                                                :ARG0 (u_10360 / woman)
                                                :ARG1-of (u_10349 / say-01
                                                                  :ARG0 (u_10359 / i)
                                                                  :ARG1-of (u_10350 / claim-01
                                                                                    :ARG0 (u_10358 / kid)
                                                                                    :ARG1-of (u_10351 / assume-02
                                                                                                      :ARG0 (u_10357 / we)
                                                                                                      :ARG1-of (u_10356 / assume-02
                                                                                                                        :ARG0 (m / lawyer)
                                                                                                                        :ARG1-of (u_10352 / assume-02
                                                                                                                                          :ARG0 (u_10355 / you)
                                                                                                                                          :ARG1-of (u_10353 / claim-01
                                                                                                                                                            :ARG0 (u_10354 / girl))))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10361 / actual-02))

# ::snt The women who the kids said that the astronaut assumed that the men said that we assumed that I thought that the boys thought that you thought hated the soldier actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(women,subj_relB(CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(men))),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(astronaut)))),CP_gap_end_recursion(CP_with_gap_base(said,DP_the(NP_unary(kids)))))))))),hated),soldier)))
# ::size0 6
# ::size1 14
# ::id deep_recursion_rc_contrastive_coref_63
# ::suppl deep_recursion_rc_contrastive_coref_63
(u_10379 / like-01
         :ARG0 (r / woman
                  :ARG0-of (u_10377 / hate-01
                                    :ARG1 (s / soldier
                                             :ARG1-of u_10379)
                                    :ARG1-of (u_10363 / think-01
                                                      :ARG0 (u_10375 / you)
                                                      :ARG1-of (u_10364 / think-01
                                                                        :ARG0 (u_10374 / boy)
                                                                        :ARG1-of (u_10365 / think-01
                                                                                          :ARG0 (u_10373 / i)
                                                                                          :ARG1-of (u_10366 / assume-02
                                                                                                            :ARG0 (u_10372 / we)
                                                                                                            :ARG1-of (u_10367 / say-01
                                                                                                                              :ARG0 (u_10371 / man)
                                                                                                                              :ARG1-of (u_10370 / assume-02
                                                                                                                                                :ARG0 (a / astronaut)
                                                                                                                                                :ARG1-of (u_10368 / say-01
                                                                                                                                                                  :ARG0 (u_10369 / kid))))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10378 / actual-02))

# ::snt The women who the astronaut thought that I assumed that you thought that we claimed that the girls thought that the soldier said that the lawyer claimed hated the doctor actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(women,subj_relB(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(unary_N_adapter(soldier)))),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_gap_end_recursion(CP_with_gap_base(thought,DP_the(NP_unary(unary_N_adapter(astronaut))))))))))),hated),doctor)))
# ::size0 6
# ::size1 15
# ::id deep_recursion_rc_contrastive_coref_64
# ::suppl deep_recursion_rc_contrastive_coref_64
(u_10394 / like-01
         :ARG0 (r / woman
                  :ARG0-of (u_10392 / hate-01
                                    :ARG1 (d / doctor
                                             :ARG1-of u_10394)
                                    :ARG1-of (u_10390 / claim-01
                                                      :ARG0 (m / lawyer)
                                                      :ARG1-of (u_10389 / say-01
                                                                        :ARG0 (u_10391 / soldier)
                                                                        :ARG1-of (u_10380 / think-01
                                                                                          :ARG0 (u_10388 / girl)
                                                                                          :ARG1-of (u_10381 / claim-01
                                                                                                            :ARG0 (u_10387 / we)
                                                                                                            :ARG1-of (u_10382 / think-01
                                                                                                                              :ARG0 (u_10386 / you)
                                                                                                                              :ARG1-of (u_10383 / assume-02
                                                                                                                                                :ARG0 (u_10385 / i)
                                                                                                                                                :ARG1-of (u_10384 / think-01
                                                                                                                                                                  :ARG0 (a / astronaut))))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10393 / actual-02))

# ::snt The boys who you said that the kids said that the girls said that the women said that I claimed that the men claimed that we claimed hated the astronaut actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(boys,subj_relB(CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(men))),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(women))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(kids))),CP_gap_end_recursion(CP_with_gap_base(said,you)))))))),hated),astronaut)))
# ::size0 6
# ::size1 13
# ::id deep_recursion_rc_contrastive_coref_65
# ::suppl deep_recursion_rc_contrastive_coref_65
(u_10411 / like-01
         :ARG0 (r / boy
                  :ARG0-of (u_10409 / hate-01
                                    :ARG1 (a / astronaut
                                             :ARG1-of u_10411)
                                    :ARG1-of (u_10395 / claim-01
                                                      :ARG0 (u_10408 / we)
                                                      :ARG1-of (u_10396 / claim-01
                                                                        :ARG0 (u_10407 / man)
                                                                        :ARG1-of (u_10397 / claim-01
                                                                                          :ARG0 (u_10406 / i)
                                                                                          :ARG1-of (u_10398 / say-01
                                                                                                            :ARG0 (u_10405 / woman)
                                                                                                            :ARG1-of (u_10399 / say-01
                                                                                                                              :ARG0 (u_10404 / girl)
                                                                                                                              :ARG1-of (u_10400 / say-01
                                                                                                                                                :ARG0 (u_10403 / kid)
                                                                                                                                                :ARG1-of (u_10401 / say-01
                                                                                                                                                                  :ARG0 (u_10402 / you))))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10410 / actual-02))

# ::snt The lawyer who the astronaut assumed that the girls said that you thought that the doctor claimed that we assumed that the kids assumed that I claimed liked the soldier actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(lawyer),subj_relA(CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(unary_N_adapter(doctor)))),CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(astronaut))))))))))),liked),soldier)))
# ::size0 6
# ::size1 15
# ::id deep_recursion_rc_contrastive_coref_66
# ::suppl deep_recursion_rc_contrastive_coref_66
(u_10426 / hate-01
         :ARG0 (m / lawyer
                  :ARG0-of (r / like-01
                              :ARG1 (s / soldier
                                       :ARG1-of u_10426)
                              :ARG1-of (u_10412 / claim-01
                                                :ARG0 (u_10423 / i)
                                                :ARG1-of (u_10413 / assume-02
                                                                  :ARG0 (u_10422 / kid)
                                                                  :ARG1-of (u_10414 / assume-02
                                                                                    :ARG0 (u_10421 / we)
                                                                                    :ARG1-of (u_10420 / claim-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_10415 / think-01
                                                                                                                        :ARG0 (u_10419 / you)
                                                                                                                        :ARG1-of (u_10416 / say-01
                                                                                                                                          :ARG0 (u_10418 / girl)
                                                                                                                                          :ARG1-of (u_10417 / assume-02
                                                                                                                                                            :ARG0 (a / astronaut))))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10425 / actual-02))

# ::snt The kids who I claimed that the men claimed that the lawyer said that we claimed that the doctor assumed that the astronaut thought that you said liked the soldier actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(kids,subj_relA(CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(unary_N_adapter(astronaut)))),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(doctor)))),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(unary_N_adapter(lawyer)))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(men))),CP_gap_end_recursion(CP_with_gap_base(claimed,I)))))))),liked),soldier)))
# ::size0 6
# ::size1 13
# ::id deep_recursion_rc_contrastive_coref_67
# ::suppl deep_recursion_rc_contrastive_coref_67
(u_10441 / hate-01
         :ARG0 (r / kid
                  :ARG0-of (u_10439 / like-01
                                    :ARG1 (s / soldier
                                             :ARG1-of u_10441)
                                    :ARG1-of (u_10427 / say-01
                                                      :ARG0 (u_10437 / you)
                                                      :ARG1-of (u_10436 / think-01
                                                                        :ARG0 (a / astronaut)
                                                                        :ARG1-of (u_10435 / assume-02
                                                                                          :ARG0 (d / doctor)
                                                                                          :ARG1-of (u_10428 / claim-01
                                                                                                            :ARG0 (u_10434 / we)
                                                                                                            :ARG1-of (u_10433 / say-01
                                                                                                                              :ARG0 (m / lawyer)
                                                                                                                              :ARG1-of (u_10429 / claim-01
                                                                                                                                                :ARG0 (u_10432 / man)
                                                                                                                                                :ARG1-of (u_10430 / claim-01
                                                                                                                                                                  :ARG0 (u_10431 / i))))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10440 / actual-02))

# ::snt The kids who I assumed that the boys said that the astronaut assumed that we assumed that the doctor claimed that the soldier said that the girls thought liked the lawyer actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(kids,subj_relA(CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(unary_N_adapter(soldier)))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(unary_N_adapter(doctor)))),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(astronaut)))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(boys))),CP_gap_end_recursion(CP_with_gap_base(assumed,I)))))))),liked),lawyer)))
# ::size0 6
# ::size1 13
# ::id deep_recursion_rc_contrastive_coref_68
# ::suppl deep_recursion_rc_contrastive_coref_68
(u_10456 / hate-01
         :ARG0 (r / kid
                  :ARG0-of (u_10454 / like-01
                                    :ARG1 (m / lawyer
                                             :ARG1-of u_10456)
                                    :ARG1-of (u_10442 / think-01
                                                      :ARG0 (u_10452 / girl)
                                                      :ARG1-of (u_10451 / say-01
                                                                        :ARG0 (u_10453 / soldier)
                                                                        :ARG1-of (u_10450 / claim-01
                                                                                          :ARG0 (d / doctor)
                                                                                          :ARG1-of (u_10443 / assume-02
                                                                                                            :ARG0 (u_10449 / we)
                                                                                                            :ARG1-of (u_10448 / assume-02
                                                                                                                              :ARG0 (a / astronaut)
                                                                                                                              :ARG1-of (u_10444 / say-01
                                                                                                                                                :ARG0 (u_10447 / boy)
                                                                                                                                                :ARG1-of (u_10445 / assume-02
                                                                                                                                                                  :ARG0 (u_10446 / i))))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10455 / actual-02))

# ::snt The men who the girls claimed that you said that the kids said that the doctor said that the soldier assumed that we claimed that I claimed hated the astronaut actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(men,subj_relB(CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(unary_N_adapter(soldier)))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(unary_N_adapter(doctor)))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(girls)))))))))),hated),astronaut)))
# ::size0 6
# ::size1 14
# ::id deep_recursion_rc_contrastive_coref_69
# ::suppl deep_recursion_rc_contrastive_coref_69
(u_10472 / like-01
         :ARG0 (r / man
                  :ARG0-of (u_10470 / hate-01
                                    :ARG1 (a / astronaut
                                             :ARG1-of u_10472)
                                    :ARG1-of (u_10457 / claim-01
                                                      :ARG0 (u_10468 / i)
                                                      :ARG1-of (u_10458 / claim-01
                                                                        :ARG0 (u_10467 / we)
                                                                        :ARG1-of (u_10466 / assume-02
                                                                                          :ARG0 (u_10469 / soldier)
                                                                                          :ARG1-of (u_10465 / say-01
                                                                                                            :ARG0 (d / doctor)
                                                                                                            :ARG1-of (u_10459 / say-01
                                                                                                                              :ARG0 (u_10464 / kid)
                                                                                                                              :ARG1-of (u_10460 / say-01
                                                                                                                                                :ARG0 (u_10463 / you)
                                                                                                                                                :ARG1-of (u_10461 / claim-01
                                                                                                                                                                  :ARG0 (u_10462 / girl))))))))))
         :concession (a2 / after-all)
         :ARG1-of (u_10471 / actual-02))

# ::snt The doctor likes the girl
# ::tree TP(Vbar_tr(likes,girl),finish_NP(doctor))
# ::id centre_embedding_sanity_check_0
# ::suppl centre_embedding_sanity_check_0
(u_39 / like-01
      :ARG0 (r / doctor)
      :ARG1 (u_40 / girl))

# ::snt The woman saw the child
# ::tree TP(Vbar_tr(saw,child),finish_NP(woman))
# ::id centre_embedding_sanity_check_1
# ::suppl centre_embedding_sanity_check_1
(u_41 / see-01
      :ARG0 (r / woman)
      :ARG1 (u_42 / child))

# ::snt The astronaut met the boy
# ::tree TP(Vbar_tr(met,boy),finish_NP(astronaut))
# ::id centre_embedding_sanity_check_2
# ::suppl centre_embedding_sanity_check_2
(u_43 / meet-02
      :ARG0 (r / astronaut)
      :ARG1 (u_44 / boy))

# ::snt The doctor hugged the mechanic
# ::tree TP(Vbar_tr(hugged,mechanic),finish_NP(doctor))
# ::id centre_embedding_sanity_check_3
# ::suppl centre_embedding_sanity_check_3
(u_45 / hug-01
      :ARG0 (r / doctor)
      :ARG1 (u_46 / mechanic))

# ::snt The woman taught the girl
# ::tree TP(Vbar_tr(taught,girl),finish_NP(woman))
# ::id centre_embedding_sanity_check_4
# ::suppl centre_embedding_sanity_check_4
(u_47 / teach-01
      :ARG0 (r / woman)
      :ARG2 (u_48 / girl))

# ::snt The astronaut amused the child
# ::tree TP(Vbar_tr(amused,child),finish_NP(astronaut))
# ::id centre_embedding_sanity_check_5
# ::suppl centre_embedding_sanity_check_5
(u_49 / amuse-01
      :ARG0 (r / astronaut)
      :ARG1 (u_50 / child))

# ::snt The boy sneezed
# ::tree TP(Vbar_intr(sneezed),finish_NP(boy))
# ::id centre_embedding_sanity_check_6
# ::suppl centre_embedding_sanity_check_6
(u_51 / sneeze-01
      :ARG0 (r / boy))

# ::snt The mechanic slept
# ::tree TP(Vbar_intr(slept),finish_NP(mechanic))
# ::id centre_embedding_sanity_check_7
# ::suppl centre_embedding_sanity_check_7
(u_52 / sleep-01
      :ARG0 (r / mechanic))

# ::snt The girl jumped
# ::tree TP(Vbar_intr(jumped),finish_NP(girl))
# ::id centre_embedding_sanity_check_8
# ::suppl centre_embedding_sanity_check_8
(u_53 / jump-03
      :ARG0 (r / girl))

# ::snt The woman attended
# ::tree TP(Vbar_intr(attended),finish_NP(woman))
# ::id centre_embedding_sanity_check_9
# ::suppl centre_embedding_sanity_check_9
(u_54 / attend-01
      :ARG0 (r / woman))

# ::snt The child ate
# ::tree TP(Vbar_intr(ate),finish_NP(child))
# ::id centre_embedding_sanity_check_10
# ::suppl centre_embedding_sanity_check_10
(u_55 / eat-01
      :ARG0 (r / child))

# ::snt The doctor focused
# ::tree TP(Vbar_intr(focused),finish_NP(doctor))
# ::id centre_embedding_sanity_check_11
# ::suppl centre_embedding_sanity_check_11
(u_56 / focus-01
      :ARG0 (r / doctor))

# ::snt The girl laughed
# ::tree TP(Vbar_intr(laughed),finish_NP(girl))
# ::id centre_embedding_sanity_check_12
# ::suppl centre_embedding_sanity_check_12
(u_57 / laugh-01
      :ARG0 (r / girl))

# ::snt I saw 37 cats.
# ::tree template(singleton(combine(cats,n37)))
# ::id long_lists_sanity_check_0
# ::suppl long_lists_sanity_check_0
(s / see-01
   :ARG0 (i / i)
   :ARG1 (c / cat
            :quant 37))

# ::snt I saw twelve mosques.
# ::tree template(singleton(combine(mosques,twelve)))
# ::id long_lists_sanity_check_1
# ::suppl long_lists_sanity_check_1
(s / see-01
   :ARG0 (i / i)
   :ARG1 (m / mosque
            :quant 12))

# ::snt I saw 13 trees.
# ::tree template(singleton(combine(trees,n13)))
# ::id long_lists_sanity_check_2
# ::suppl long_lists_sanity_check_2
(s / see-01
   :ARG0 (i / i)
   :ARG1 (t / tree
            :quant 13))

# ::snt I saw 765 lions.
# ::tree template(singleton(combine(lions,n765)))
# ::id long_lists_sanity_check_3
# ::suppl long_lists_sanity_check_3
(s / see-01
   :ARG0 (i / i)
   :ARG1 (l / lion
            :quant 765))

# ::snt I saw 376 airports.
# ::tree template(singleton(combine(airports,n376)))
# ::id long_lists_sanity_check_4
# ::suppl long_lists_sanity_check_4
(s / see-01
   :ARG0 (i / i)
   :ARG1 (a / airport
            :quant 376))

# ::snt I saw 29 churches.
# ::tree template(singleton(combine(churches,n29)))
# ::id long_lists_sanity_check_5
# ::suppl long_lists_sanity_check_5
(s / see-01
   :ARG0 (i / i)
   :ARG1 (c / church
            :quant 29))

# ::snt I saw 44 foxes.
# ::tree template(singleton(combine(foxes,n44)))
# ::id long_lists_sanity_check_6
# ::suppl long_lists_sanity_check_6
(s / see-01
   :ARG0 (i / i)
   :ARG1 (f / fox
            :quant 44))

# ::snt I saw 51 weapons.
# ::tree template(singleton(combine(weapons,n51)))
# ::id long_lists_sanity_check_7
# ::suppl long_lists_sanity_check_7
(s / see-01
   :ARG0 (i / i)
   :ARG1 (w / weapon
            :quant 51))

# ::snt I saw two buses.
# ::tree template(singleton(combine(buses,two)))
# ::id long_lists_sanity_check_8
# ::suppl long_lists_sanity_check_8
(s / see-01
   :ARG0 (i / i)
   :ARG1 (b / bus
            :quant 2))

# ::snt I saw 25 children.
# ::tree template(singleton(combine(children,n25)))
# ::id long_lists_sanity_check_9
# ::suppl long_lists_sanity_check_9
(s / see-01
   :ARG0 (i / i)
   :ARG1 (c / child
            :quant 25))

# ::snt I saw ten tanks.
# ::tree template(singleton(combine(tanks,ten)))
# ::id long_lists_sanity_check_10
# ::suppl long_lists_sanity_check_10
(s / see-01
   :ARG0 (i / i)
   :ARG1 (t / tank
            :quant 10))

# ::snt I saw eleven barrels.
# ::tree template(singleton(combine(barrels,eleven)))
# ::id long_lists_sanity_check_11
# ::suppl long_lists_sanity_check_11
(s / see-01
   :ARG0 (i / i)
   :ARG1 (b / barrel
            :quant 11))

# ::snt I saw 14 bikes.
# ::tree template(singleton(combine(bikes,n14)))
# ::id long_lists_sanity_check_12
# ::suppl long_lists_sanity_check_12
(s / see-01
   :ARG0 (i / i)
   :ARG1 (b / bike
            :quant 14))

# ::snt I saw 21 dogs.
# ::tree template(singleton(combine(dogs,n21)))
# ::id long_lists_sanity_check_13
# ::suppl long_lists_sanity_check_13
(s / see-01
   :ARG0 (i / i)
   :ARG1 (d / dog
            :quant 21))

# ::snt I saw 15 boxes.
# ::tree template(singleton(combine(boxes,n15)))
# ::id long_lists_sanity_check_14
# ::suppl long_lists_sanity_check_14
(s / see-01
   :ARG0 (i / i)
   :ARG1 (b / box
            :quant 15))

# ::snt I saw nine airplanes.
# ::tree template(singleton(combine(airplanes,nine)))
# ::id long_lists_sanity_check_15
# ::suppl long_lists_sanity_check_15
(s / see-01
   :ARG0 (i / i)
   :ARG1 (a / airplane
            :quant 9))

# ::snt I saw three museums.
# ::tree template(singleton(combine(museums,three)))
# ::id long_lists_sanity_check_16
# ::suppl long_lists_sanity_check_16
(s / see-01
   :ARG0 (i / i)
   :ARG1 (m / museum
            :quant 3))

# ::snt I saw four roads.
# ::tree template(singleton(combine(roads,four)))
# ::id long_lists_sanity_check_17
# ::suppl long_lists_sanity_check_17
(s / see-01
   :ARG0 (i / i)
   :ARG1 (r / road
            :quant 4))

# ::snt I saw eight rockets.
# ::tree template(singleton(combine(rockets,eight)))
# ::id long_lists_sanity_check_18
# ::suppl long_lists_sanity_check_18
(s / see-01
   :ARG0 (i / i)
   :ARG1 (r / rocket
            :quant 8))

# ::snt I saw seven veterinarians.
# ::tree template(singleton(combine(veterinarians,seven)))
# ::id long_lists_sanity_check_19
# ::suppl long_lists_sanity_check_19
(s / see-01
   :ARG0 (i / i)
   :ARG1 (v / veterinarian
            :quant 7))

# ::snt I saw five astronauts.
# ::tree template(singleton(combine(astronauts,five)))
# ::id long_lists_sanity_check_20
# ::suppl long_lists_sanity_check_20
(s / see-01
   :ARG0 (i / i)
   :ARG1 (a / astronaut
            :quant 5))

# ::snt I saw six soldiers.
# ::tree template(singleton(combine(soldiers,six)))
# ::id long_lists_sanity_check_21
# ::suppl long_lists_sanity_check_21
(u_64 / see-01
      :ARG0 (i / i)
      :ARG1 (s / soldier
               :quant 6))

# ::snt I saw 1487 schools.
# ::tree template(singleton(combine(schools,n1487)))
# ::id long_lists_sanity_check_22
# ::suppl long_lists_sanity_check_22
(u_65 / see-01
      :ARG0 (i / i)
      :ARG1 (s / school
               :quant 1487))

# ::snt I saw 20 trucks.
# ::tree template(singleton(combine(trucks,n20)))
# ::id long_lists_sanity_check_23
# ::suppl long_lists_sanity_check_23
(s / see-01
   :ARG0 (i / i)
   :ARG1 (t / truck
            :quant 20))

# ::snt I saw 3874 women.
# ::tree template(singleton(combine(women,n3874)))
# ::id long_lists_sanity_check_24
# ::suppl long_lists_sanity_check_24
(s / see-01
   :ARG0 (i / i)
   :ARG1 (w / woman
            :quant 3874))

# ::snt I saw 18 bombs.
# ::tree template(singleton(combine(bombs,n18)))
# ::id long_lists_sanity_check_25
# ::suppl long_lists_sanity_check_25
(s / see-01
   :ARG0 (i / i)
   :ARG1 (b / bomb
            :quant 18))

# ::snt I saw 343 ships.
# ::tree template(singleton(combine(ships,n343)))
# ::id long_lists_sanity_check_26
# ::suppl long_lists_sanity_check_26
(u_66 / see-01
      :ARG0 (i / i)
      :ARG1 (s / ship
               :quant 343))

# ::snt I saw 71 universities.
# ::tree template(singleton(combine(universities,n71)))
# ::id long_lists_sanity_check_27
# ::suppl long_lists_sanity_check_27
(s / see-01
   :ARG0 (i / i)
   :ARG1 (u / university
            :quant 71))

# ::snt I saw 122 boats.
# ::tree template(singleton(combine(boats,n122)))
# ::id long_lists_sanity_check_28
# ::suppl long_lists_sanity_check_28
(s / see-01
   :ARG0 (i / i)
   :ARG1 (b / boat
            :quant 122))

# ::snt I saw 98 rats.
# ::tree template(singleton(combine(rats,n98)))
# ::id long_lists_sanity_check_29
# ::suppl long_lists_sanity_check_29
(s / see-01
   :ARG0 (i / i)
   :ARG1 (r / rat
            :quant 98))

# ::snt I saw 235 clouds.
# ::tree template(singleton(combine(clouds,n235)))
# ::id long_lists_sanity_check_30
# ::suppl long_lists_sanity_check_30
(s / see-01
   :ARG0 (i / i)
   :ARG1 (c / cloud
            :quant 235))

# ::snt I saw 107 diamonds.
# ::tree template(singleton(combine(diamonds,n107)))
# ::id long_lists_sanity_check_31
# ::suppl long_lists_sanity_check_31
(s / see-01
   :ARG0 (i / i)
   :ARG1 (d / diamond
            :quant 107))

# ::snt I saw many dinosaurs.
# ::tree template(singleton(combine(dinosaurs,many)))
# ::id long_lists_sanity_check_32
# ::suppl long_lists_sanity_check_32
(s / see-01
   :ARG0 (i / i)
   :ARG1 (d / dinosaur
            :quant (q / many)))

# ::snt I saw a few cars.
# ::tree template(singleton(combine(cars,few)))
# ::id long_lists_sanity_check_33
# ::suppl long_lists_sanity_check_33
(s / see-01
   :ARG0 (i / i)
   :ARG1 (c / car
            :quant (q / few)))

# ::snt I saw 513 submarines.
# ::tree template(singleton(combine(submarines,n513)))
# ::id long_lists_sanity_check_34
# ::suppl long_lists_sanity_check_34
(u_67 / see-01
      :ARG0 (i / i)
      :ARG1 (s / submarine
               :quant 513))

# ::snt I saw 37 spaceships.
# ::tree template(singleton(combine(spaceships,n37)))
# ::id long_lists_sanity_check_35
# ::suppl long_lists_sanity_check_35
(u_68 / see-01
      :ARG0 (i / i)
      :ARG1 (s / spaceship
               :quant 37))

# ::snt Please buy salt.
# ::tree template(singleton(salt))
# ::id long_lists_sanity_check_36
# ::suppl long_lists_sanity_check_36
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (s / salt))

# ::snt Please buy plates.
# ::tree template(singleton(plates))
# ::id long_lists_sanity_check_37
# ::suppl long_lists_sanity_check_37
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (p / plate))

# ::snt Please buy coal.
# ::tree template(singleton(coal))
# ::id long_lists_sanity_check_38
# ::suppl long_lists_sanity_check_38
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (c / coal))

# ::snt Please buy fish.
# ::tree template(singleton(fish))
# ::id long_lists_sanity_check_39
# ::suppl long_lists_sanity_check_39
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (f / fish))

# ::snt Please buy oranges.
# ::tree template(singleton(oranges))
# ::id long_lists_sanity_check_40
# ::suppl long_lists_sanity_check_40
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (o / orange))

# ::snt Please buy meat.
# ::tree template(singleton(meat))
# ::id long_lists_sanity_check_41
# ::suppl long_lists_sanity_check_41
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (m / meat))

# ::snt Please buy beer.
# ::tree template(singleton(beer))
# ::id long_lists_sanity_check_42
# ::suppl long_lists_sanity_check_42
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (b / beer))

# ::snt Please buy ice.
# ::tree template(singleton(ice))
# ::id long_lists_sanity_check_43
# ::suppl long_lists_sanity_check_43
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (i / ice))

# ::snt Please buy a movie.
# ::tree template(singleton(movie))
# ::id long_lists_sanity_check_44
# ::suppl long_lists_sanity_check_44
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (m / movie))

# ::snt Please buy a hat.
# ::tree template(singleton(hat))
# ::id long_lists_sanity_check_45
# ::suppl long_lists_sanity_check_45
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (h / hat))

# ::snt Please buy bananas.
# ::tree template(singleton(bananas))
# ::id long_lists_sanity_check_46
# ::suppl long_lists_sanity_check_46
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (b / banana))

# ::snt Please buy rice.
# ::tree template(singleton(rice))
# ::id long_lists_sanity_check_47
# ::suppl long_lists_sanity_check_47
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / rice))

# ::snt Please buy coffee.
# ::tree template(singleton(coffee))
# ::id long_lists_sanity_check_48
# ::suppl long_lists_sanity_check_48
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (c / coffee))

# ::snt Please buy a light bulb.
# ::tree template(singleton(light_bulb))
# ::id long_lists_sanity_check_49
# ::suppl long_lists_sanity_check_49
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (b / bulb
            :ARG0-of (l / light-04)))

# ::snt Please buy cigarettes.
# ::tree template(singleton(cigarettes))
# ::id long_lists_sanity_check_50
# ::suppl long_lists_sanity_check_50
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (c / cigarette))

# ::snt Please buy gasoline.
# ::tree template(singleton(gasoline))
# ::id long_lists_sanity_check_51
# ::suppl long_lists_sanity_check_51
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (g / gasoline))

# ::snt Please buy a chicken.
# ::tree template(singleton(chicken))
# ::id long_lists_sanity_check_52
# ::suppl long_lists_sanity_check_52
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (n / chicken))

# ::snt Please buy juice.
# ::tree template(singleton(juice))
# ::id long_lists_sanity_check_53
# ::suppl long_lists_sanity_check_53
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (j / juice))

# ::snt Please buy chips.
# ::tree template(singleton(chips))
# ::id long_lists_sanity_check_54
# ::suppl long_lists_sanity_check_54
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (c / chip))

# ::snt Please buy a cup.
# ::tree template(singleton(cup))
# ::id long_lists_sanity_check_55
# ::suppl long_lists_sanity_check_55
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (c / cup))

# ::snt Please buy tape.
# ::tree template(singleton(tape))
# ::id long_lists_sanity_check_56
# ::suppl long_lists_sanity_check_56
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (t / tape))

# ::snt Please buy soap.
# ::tree template(singleton(soap))
# ::id long_lists_sanity_check_57
# ::suppl long_lists_sanity_check_57
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (s / soap))

# ::snt Please buy water.
# ::tree template(singleton(water))
# ::id long_lists_sanity_check_58
# ::suppl long_lists_sanity_check_58
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (w / water))

# ::snt Please buy wine.
# ::tree template(singleton(wine))
# ::id long_lists_sanity_check_59
# ::suppl long_lists_sanity_check_59
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (w / wine))

# ::snt Please buy a map.
# ::tree template(singleton(map))
# ::id long_lists_sanity_check_60
# ::suppl long_lists_sanity_check_60
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (m / map))

# ::snt Please buy milk.
# ::tree template(singleton(milk))
# ::id long_lists_sanity_check_61
# ::suppl long_lists_sanity_check_61
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (m / milk))

# ::snt Please buy tools.
# ::tree template(singleton(tools))
# ::id long_lists_sanity_check_62
# ::suppl long_lists_sanity_check_62
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (t / tool))

# ::snt Please buy a book.
# ::tree template(singleton(book))
# ::id long_lists_sanity_check_63
# ::suppl long_lists_sanity_check_63
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (b / book))

# ::snt Please buy alcohol.
# ::tree template(singleton(alcohol))
# ::id long_lists_sanity_check_64
# ::suppl long_lists_sanity_check_64
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (a / alcohol))

# ::snt Please buy bags.
# ::tree template(singleton(bags))
# ::id long_lists_sanity_check_65
# ::suppl long_lists_sanity_check_65
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (b / bag))

# ::snt Please buy expensive food.
# ::tree template(singleton(expensive_food))
# ::id long_lists_sanity_check_66
# ::suppl long_lists_sanity_check_66
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (f / food
            :mod (e / expensive)))

# ::snt Please buy apples.
# ::tree template(singleton(apples))
# ::id long_lists_sanity_check_67
# ::suppl long_lists_sanity_check_67
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (a / apple))

# ::snt Please buy paper.
# ::tree template(singleton(paper))
# ::id long_lists_sanity_check_68
# ::suppl long_lists_sanity_check_68
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (p / paper))

# ::snt Please buy a phone.
# ::tree template(singleton(phone))
# ::id long_lists_sanity_check_69
# ::suppl long_lists_sanity_check_69
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (p / phone))

# ::snt Please buy a knife.
# ::tree template(singleton(knife))
# ::id long_lists_sanity_check_70
# ::suppl long_lists_sanity_check_70
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (k / knife))

# ::snt Please buy batteries.
# ::tree template(singleton(batteries))
# ::id long_lists_sanity_check_71
# ::suppl long_lists_sanity_check_71
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (b / battery))

# ::snt She visited Haiti.
# ::tree template(singleton(Haiti))
# ::id long_lists_sanity_check_72
# ::suppl long_lists_sanity_check_72
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Haiti"
            :name (n / name
                     :op1 "Haiti")))

# ::snt She visited Pakistan.
# ::tree template(singleton(pakistan))
# ::id long_lists_sanity_check_73
# ::suppl long_lists_sanity_check_73
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Pakistan"
            :name (n / name
                     :op1 "Pakistan")))

# ::snt She visited Thailand.
# ::tree template(singleton(thailand))
# ::id long_lists_sanity_check_74
# ::suppl long_lists_sanity_check_74
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Thailand"
            :name (n / name
                     :op1 "Thailand")))

# ::snt She visited Laos.
# ::tree template(singleton(laos))
# ::id long_lists_sanity_check_75
# ::suppl long_lists_sanity_check_75
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Laos"
            :name (n / name
                     :op1 "Laos")))

# ::snt She visited India.
# ::tree template(singleton(india))
# ::id long_lists_sanity_check_76
# ::suppl long_lists_sanity_check_76
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "India"
            :name (n / name
                     :op1 "India")))

# ::snt She visited Spain.
# ::tree template(singleton(spain))
# ::id long_lists_sanity_check_77
# ::suppl long_lists_sanity_check_77
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Spain"
            :name (n / name
                     :op1 "Spain")))

# ::snt She visited Australia.
# ::tree template(singleton(australia))
# ::id long_lists_sanity_check_78
# ::suppl long_lists_sanity_check_78
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Australia"
            :name (n / name
                     :op1 "Australia")))

# ::snt She visited the United States.
# ::tree template(singleton(united_states))
# ::id long_lists_sanity_check_79
# ::suppl long_lists_sanity_check_79
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "United_States"
            :name (n / name
                     :op1 "United"
                     :op2 "States")))

# ::snt She visited Britain.
# ::tree template(singleton(britain))
# ::id long_lists_sanity_check_80
# ::suppl long_lists_sanity_check_80
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "United_Kingdom"
            :name (n / name
                     :op1 "Britain")))

# ::snt She visited Libya.
# ::tree template(singleton(libya))
# ::id long_lists_sanity_check_81
# ::suppl long_lists_sanity_check_81
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Libya"
            :name (n / name
                     :op1 "Libya")))

# ::snt She visited the Philippines.
# ::tree template(singleton(philippines))
# ::id long_lists_sanity_check_82
# ::suppl long_lists_sanity_check_82
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Philippines"
            :name (n / name
                     :op1 "Philippines")))

# ::snt She visited Vietnam.
# ::tree template(singleton(vietnam))
# ::id long_lists_sanity_check_83
# ::suppl long_lists_sanity_check_83
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Vietnam"
            :name (n / name
                     :op1 "Vietnam")))

# ::snt She visited Syria.
# ::tree template(singleton(syria))
# ::id long_lists_sanity_check_84
# ::suppl long_lists_sanity_check_84
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Syria"
            :name (n / name
                     :op1 "Syria")))

# ::snt She visited Indonesia.
# ::tree template(singleton(indonesia))
# ::id long_lists_sanity_check_85
# ::suppl long_lists_sanity_check_85
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Indonesia"
            :name (n / name
                     :op1 "Indonesia")))

# ::snt She visited Iraq.
# ::tree template(singleton(iraq))
# ::id long_lists_sanity_check_86
# ::suppl long_lists_sanity_check_86
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Iraq"
            :name (n / name
                     :op1 "Iraq")))

# ::snt She visited Afghanistan.
# ::tree template(singleton(afghanistan))
# ::id long_lists_sanity_check_87
# ::suppl long_lists_sanity_check_87
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Afghanistan"
            :name (n / name
                     :op1 "Afghanistan")))

# ::snt She visited North Korea.
# ::tree template(singleton(north_korea))
# ::id long_lists_sanity_check_88
# ::suppl long_lists_sanity_check_88
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "North_Korea"
            :name (n / name
                     :op1 "North"
                     :op2 "Korea")))

# ::snt She visited Myanmar.
# ::tree template(singleton(myanmar))
# ::id long_lists_sanity_check_89
# ::suppl long_lists_sanity_check_89
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Myanmar"
            :name (n / name
                     :op1 "Myanmar")))

# ::snt She visited South Korea.
# ::tree template(singleton(south_korea))
# ::id long_lists_sanity_check_90
# ::suppl long_lists_sanity_check_90
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "South_Korea"
            :name (n / name
                     :op1 "South"
                     :op2 "Korea")))

# ::snt She visited Egypt.
# ::tree template(singleton(egypt))
# ::id long_lists_sanity_check_91
# ::suppl long_lists_sanity_check_91
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Egypt"
            :name (n / name
                     :op1 "Egypt")))

# ::snt She visited Israel.
# ::tree template(singleton(israel))
# ::id long_lists_sanity_check_92
# ::suppl long_lists_sanity_check_92
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Israel"
            :name (n / name
                     :op1 "Israel")))

# ::snt She visited Estonia.
# ::tree template(singleton(Estonia))
# ::id long_lists_sanity_check_93
# ::suppl long_lists_sanity_check_93
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Estonia"
            :name (n / name
                     :op1 "Estonia")))

# ::snt She visited South Africa.
# ::tree template(singleton(south_africa))
# ::id long_lists_sanity_check_94
# ::suppl long_lists_sanity_check_94
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "South_Africa"
            :name (n / name
                     :op1 "South"
                     :op2 "Africa")))

# ::snt She visited China.
# ::tree template(singleton(china))
# ::id long_lists_sanity_check_95
# ::suppl long_lists_sanity_check_95
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "China"
            :name (n / name
                     :op1 "China")))

# ::snt She visited Malaysia.
# ::tree template(singleton(malaysia))
# ::id long_lists_sanity_check_96
# ::suppl long_lists_sanity_check_96
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Malaysia"
            :name (n / name
                     :op1 "Malaysia")))

# ::snt She visited Russia.
# ::tree template(singleton(russia))
# ::id long_lists_sanity_check_97
# ::suppl long_lists_sanity_check_97
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Russia"
            :name (n / name
                     :op1 "Russia")))

# ::snt She visited Brazil.
# ::tree template(singleton(brazil))
# ::id long_lists_sanity_check_98
# ::suppl long_lists_sanity_check_98
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Brazil"
            :name (n / name
                     :op1 "Brazil")))

# ::snt She visited Canada.
# ::tree template(singleton(canada))
# ::id long_lists_sanity_check_99
# ::suppl long_lists_sanity_check_99
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Canada"
            :name (n / name
                     :op1 "Canada")))

# ::snt She visited Zimbabwe.
# ::tree template(singleton(Zimbabwe))
# ::id long_lists_sanity_check_100
# ::suppl long_lists_sanity_check_100
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Zimbabwe"
            :name (n / name
                     :op1 "Zimbabwe")))

# ::snt She visited Italy.
# ::tree template(singleton(italy))
# ::id long_lists_sanity_check_101
# ::suppl long_lists_sanity_check_101
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Italy"
            :name (n / name
                     :op1 "Italy")))

# ::snt She visited France.
# ::tree template(singleton(france))
# ::id long_lists_sanity_check_102
# ::suppl long_lists_sanity_check_102
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "France"
            :name (n / name
                     :op1 "France")))

# ::snt She visited Colombia.
# ::tree template(singleton(Colombia))
# ::id long_lists_sanity_check_103
# ::suppl long_lists_sanity_check_103
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Colombia"
            :name (n / name
                     :op1 "Colombia")))

# ::snt She visited Germany.
# ::tree template(singleton(germany))
# ::id long_lists_sanity_check_104
# ::suppl long_lists_sanity_check_104
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Germany"
            :name (n / name
                     :op1 "Germany")))

# ::snt She visited Jordan.
# ::tree template(singleton(Jordan))
# ::id long_lists_sanity_check_105
# ::suppl long_lists_sanity_check_105
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Jordan"
            :name (n / name
                     :op1 "Jordan")))

# ::snt She visited Iran.
# ::tree template(singleton(iran))
# ::id long_lists_sanity_check_106
# ::suppl long_lists_sanity_check_106
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Iran"
            :name (n / name
                     :op1 "Iran")))

# ::snt She visited Palestine.
# ::tree template(singleton(palestine))
# ::id long_lists_sanity_check_107
# ::suppl long_lists_sanity_check_107
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "State_of_Palestine"
            :name (n / name
                     :op1 "Palestine")))

# ::snt She visited Saudi Arabia.
# ::tree template(singleton(saudi_arabia))
# ::id long_lists_sanity_check_108
# ::suppl long_lists_sanity_check_108
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Saudi_Arabia"
            :name (n / name
                     :op1 "Saudi"
                     :op2 "Arabia")))

# ::snt She visited Japan.
# ::tree template(singleton(japan))
# ::id long_lists_sanity_check_109
# ::suppl long_lists_sanity_check_109
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Japan"
            :name (n / name
                     :op1 "Japan")))

# ::snt She visited Singapore.
# ::tree template(singleton(singapore))
# ::id long_lists_sanity_check_110
# ::suppl long_lists_sanity_check_110
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (c / country
            :wiki "Singapore"
            :name (n / name
                     :op1 "Singapore")))

# ::snt You knew that you sneezed
# ::tree TP_resolve_coref_2(knew_resolve_coref,you,TP_intr_2(you_sneezed))
# ::id deep_recursion_pronouns_sanity_check_0
# ::suppl deep_recursion_pronouns_sanity_check_0
(u_125 / know-01
       :ARG0 (r / you
                :ARG0-of (u_126 / sneeze-01
                                :ARG1-of u_125)))

# ::snt I believed that the boys liked me
# ::tree TP_resolve_coref_1s(believed_resolve_coref,I,TP_tr_1s(liked_me,boys))
# ::id deep_recursion_pronouns_sanity_check_1
# ::suppl deep_recursion_pronouns_sanity_check_1
(u_128 / believe-01
       :ARG0 (r / i
                :ARG1-of (u_127 / like-01
                                :ARG0 (u_129 / boy)
                                :ARG1-of u_128)))

# ::snt We thought that the doctor liked us
# ::tree TP_resolve_coref_1p(thought_resolve_coref,we,TP_tr_1p(liked_us,doctor))
# ::id deep_recursion_pronouns_sanity_check_2
# ::suppl deep_recursion_pronouns_sanity_check_2
(u_130 / think-01
       :ARG0 (r / we
                :ARG1-of (u_131 / like-01
                                :ARG0 (d / doctor)
                                :ARG1-of u_130)))

# ::snt You heard that the girls hated you
# ::tree TP_resolve_coref_2(heard_resolve_coref,you,TP_tr_2(hated_you,girls))
# ::id deep_recursion_pronouns_sanity_check_3
# ::suppl deep_recursion_pronouns_sanity_check_3
(u_133 / hear-01
       :ARG0 (r / you
                :ARG1-of (u_132 / hate-01
                                :ARG0 (u_134 / girl)
                                :ARG1-of u_133)))

# ::snt I said that I sneezed
# ::tree TP_resolve_coref_1s(said_resolve_coref,I,TP_intr_1s(I_sneezed))
# ::id deep_recursion_pronouns_sanity_check_4
# ::suppl deep_recursion_pronouns_sanity_check_4
(u_135 / say-01
       :ARG0 (r / i
                :ARG0-of (u_136 / sneeze-01
                                :ARG1-of u_135)))

# ::snt We mentioned that we sneezed
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_intr_1p(we_sneezed))
# ::id deep_recursion_pronouns_sanity_check_5
# ::suppl deep_recursion_pronouns_sanity_check_5
(u_137 / mention-01
       :ARG0 (r / we
                :ARG0-of (u_138 / sneeze-01
                                :ARG1-of u_137)))

# ::snt You knew that you slept
# ::tree TP_resolve_coref_2(knew_resolve_coref,you,TP_intr_2(you_slept))
# ::id deep_recursion_pronouns_sanity_check_6
# ::suppl deep_recursion_pronouns_sanity_check_6
(u_139 / know-01
       :ARG0 (r / you
                :ARG0-of (u_140 / sleep-01
                                :ARG1-of u_139)))

# ::snt I believed that the men hated me
# ::tree TP_resolve_coref_1s(believed_resolve_coref,I,TP_tr_1s(hated_me,men))
# ::id deep_recursion_pronouns_sanity_check_7
# ::suppl deep_recursion_pronouns_sanity_check_7
(u_142 / believe-01
       :ARG0 (r / i
                :ARG1-of (u_141 / hate-01
                                :ARG0 (u_143 / man)
                                :ARG1-of u_142)))

# ::snt We thought that the lawyer hated us
# ::tree TP_resolve_coref_1p(thought_resolve_coref,we,TP_tr_1p(hated_us,lawyer))
# ::id deep_recursion_pronouns_sanity_check_8
# ::suppl deep_recursion_pronouns_sanity_check_8
(u_144 / think-01
       :ARG0 (r / we
                :ARG1-of (u_145 / hate-01
                                :ARG0 (m / lawyer)
                                :ARG1-of u_144)))

# ::snt You heard that the astronaut liked you
# ::tree TP_resolve_coref_2(heard_resolve_coref,you,TP_tr_2(liked_you,astronaut))
# ::id deep_recursion_pronouns_sanity_check_9
# ::suppl deep_recursion_pronouns_sanity_check_9
(u_146 / hear-01
       :ARG0 (r / you
                :ARG1-of (u_147 / like-01
                                :ARG0 (a / astronaut)
                                :ARG1-of u_146)))

# ::snt I said that I slept
# ::tree TP_resolve_coref_1s(said_resolve_coref,I,TP_intr_1s(I_slept))
# ::id deep_recursion_pronouns_sanity_check_10
# ::suppl deep_recursion_pronouns_sanity_check_10
(u_148 / say-01
       :ARG0 (r / i
                :ARG0-of (u_149 / sleep-01
                                :ARG1-of u_148)))

# ::snt We mentioned that we slept
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_intr_1p(we_slept))
# ::id deep_recursion_pronouns_sanity_check_11
# ::suppl deep_recursion_pronouns_sanity_check_11
(u_150 / mention-01
       :ARG0 (r / we
                :ARG0-of (u_151 / sleep-01
                                :ARG1-of u_150)))

# ::snt You knew that you sneezed
# ::tree TP_resolve_coref_2(knew_resolve_coref,you,TP_intr_2(you_sneezed))
# ::id deep_recursion_pronouns_sanity_check_12
# ::suppl deep_recursion_pronouns_sanity_check_12
(u_152 / know-01
       :ARG0 (r / you
                :ARG0-of (u_153 / sneeze-01
                                :ARG1-of u_152)))

# ::snt I believed that the soldier liked me
# ::tree TP_resolve_coref_1s(believed_resolve_coref,I,TP_tr_1s(liked_me,soldier))
# ::id deep_recursion_pronouns_sanity_check_13
# ::suppl deep_recursion_pronouns_sanity_check_13
(u_154 / believe-01
       :ARG0 (r / i
                :ARG1-of (u_155 / like-01
                                :ARG0 (s / soldier)
                                :ARG1-of u_154)))

# ::snt We thought that the women liked us
# ::tree TP_resolve_coref_1p(thought_resolve_coref,we,TP_tr_1p(liked_us,women))
# ::id deep_recursion_pronouns_sanity_check_14
# ::suppl deep_recursion_pronouns_sanity_check_14
(u_157 / think-01
       :ARG0 (r / we
                :ARG1-of (u_156 / like-01
                                :ARG0 (u_158 / woman)
                                :ARG1-of u_157)))

# ::snt You heard that the kids hated you
# ::tree TP_resolve_coref_2(heard_resolve_coref,you,TP_tr_2(hated_you,kids))
# ::id deep_recursion_pronouns_sanity_check_15
# ::suppl deep_recursion_pronouns_sanity_check_15
(u_160 / hear-01
       :ARG0 (r / you
                :ARG1-of (u_159 / hate-01
                                :ARG0 (u_161 / kid)
                                :ARG1-of u_160)))

# ::snt I saw 765 astronauts, 122 museums, 13 diamonds and 235 lions.
# ::tree template(coord_4(combine(astronauts,n765),combine(museums,n122),combine(diamonds,n13),combine(lions,n235)))
# ::id long_lists_0
# ::suppl long_lists_0
(s / see-01
   :ARG0 (i / i)
   :ARG1 (r / and
            :op1 (a / astronaut
                    :quant 765)
            :op2 (m / museum
                    :quant 122)
            :op3 (d / diamond
                    :quant 13)
            :op4 (l / lion
                    :quant 235)))

# ::snt I saw 376 cats, 3874 barrels, 98 veterinarians, four soldiers and 14 diamonds.
# ::tree template(coord_5(combine(cats,n376),combine(barrels,n3874),combine(veterinarians,n98),combine(soldiers,four),combine(diamonds,n14)))
# ::id long_lists_1
# ::suppl long_lists_1
(u_1643 / see-01
        :ARG0 (i / i)
        :ARG1 (r / and
                 :op1 (c / cat
                         :quant 376)
                 :op2 (b / barrel
                         :quant 3874)
                 :op3 (v / veterinarian
                         :quant 98)
                 :op4 (s / soldier
                         :quant 4)
                 :op5 (d / diamond
                         :quant 14)))

# ::snt I saw 376 dogs, 15 rats, 51 airplanes, 13 clouds, 44 ships and 25 bikes.
# ::tree template(coord_6(combine(dogs,n376),combine(rats,n15),combine(airplanes,n51),combine(clouds,n13),combine(ships,n44),combine(bikes,n25)))
# ::id long_lists_2
# ::suppl long_lists_2
(u_1650 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1648 / and
                      :op1 (d / dog
                              :quant 376)
                      :op2 (r / rat
                              :quant 15)
                      :op3 (a / airplane
                              :quant 51)
                      :op4 (c / cloud
                              :quant 13)
                      :op5 (s / ship
                              :quant 44)
                      :op6 (b / bike
                              :quant 25)))

# ::snt I saw 21 cats, 376 boats, 37 children, 122 rats, two diamonds, ten submarines and five ships.
# ::tree template(coord_7(combine(cats,n21),combine(boats,n376),combine(children,n37),combine(rats,n122),combine(diamonds,two),combine(submarines,ten),combine(ships,five)))
# ::id long_lists_3
# ::suppl long_lists_3
(u_1660 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1655 / and
                      :op1 (c / cat
                              :quant 21)
                      :op2 (b / boat
                              :quant 376)
                      :op3 (u_1658 / child
                                   :quant 37)
                      :op4 (r / rat
                              :quant 122)
                      :op5 (d / diamond
                              :quant 2)
                      :op6 (s / submarine
                              :quant 10)
                      :op7 (u_1652 / ship
                                   :quant 5)))

# ::snt I saw many barrels, nine spaceships, 15 universities, 71 bombs, 513 children, six tanks, 1487 women and 235 ships.
# ::tree template(coord_8(combine(barrels,many),combine(spaceships,nine),combine(universities,n15),combine(bombs,n71),combine(children,n513),combine(tanks,six),combine(women,n1487),combine(ships,n235)))
# ::id long_lists_4
# ::suppl long_lists_4
(u_1670 / see-01
        :ARG0 (i / i)
        :ARG1 (r / and
                 :op1 (b / barrel
                         :quant (q / many))
                 :op2 (s / spaceship
                         :quant 9)
                 :op3 (u / university
                         :quant 15)
                 :op4 (u_1668 / bomb
                              :quant 71)
                 :op5 (c / child
                         :quant 513)
                 :op6 (t / tank
                         :quant 6)
                 :op7 (w / woman
                         :quant 1487)
                 :op8 (u_1667 / ship
                              :quant 235)))

# ::snt I saw 122 foxes, 376 diamonds, 51 women, 765 trees, 3874 mosques, 98 universities, 44 dogs, 29 ships and 20 boats.
# ::tree template(coord_9(combine(foxes,n122),combine(diamonds,n376),combine(women,n51),combine(trees,n765),combine(mosques,n3874),combine(universities,n98),combine(dogs,n44),combine(ships,n29),combine(boats,n20)))
# ::id long_lists_5
# ::suppl long_lists_5
(u_1680 / see-01
        :ARG0 (i / i)
        :ARG1 (r / and
                 :op1 (f / fox
                         :quant 122)
                 :op2 (d / diamond
                         :quant 376)
                 :op3 (w / woman
                         :quant 51)
                 :op4 (t / tree
                         :quant 765)
                 :op5 (m / mosque
                         :quant 3874)
                 :op6 (u / university
                         :quant 98)
                 :op7 (u_1677 / dog
                              :quant 44)
                 :op8 (s / ship
                         :quant 29)
                 :op9 (b / boat
                         :quant 20)))

# ::snt I saw many rockets, 765 foxes, three museums, 44 churches, 25 soldiers, 18 schools, 107 cars, 29 dogs, nine airplanes and 513 cats.
# ::tree template(coord_10(combine(rockets,many),combine(foxes,n765),combine(museums,three),combine(churches,n44),combine(soldiers,n25),combine(schools,n18),combine(cars,n107),combine(dogs,n29),combine(airplanes,nine),combine(cats,n513)))
# ::id long_lists_6
# ::suppl long_lists_6
(u_1694 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1693 / and
                      :op1 (r / rocket
                              :quant (q / many))
                      :op2 (f / fox
                              :quant 765)
                      :op3 (m / museum
                              :quant 3)
                      :op4 (c / church
                              :quant 44)
                      :op5 (s / soldier
                              :quant 25)
                      :op6 (u_1687 / school
                                   :quant 18)
                      :op7 (u_1688 / car
                                   :quant 107)
                      :op8 (d / dog
                              :quant 29)
                      :op9 (a / airplane
                              :quant 9)
                      :op10 (u_1683 / cat
                                    :quant 513)))

# ::snt I saw 3874 buses, 343 veterinarians, 765 museums, 37 foxes, 18 schools, 14 trucks, eight diamonds, 122 boxes, 107 women, 29 churches and 20 trees.
# ::tree template(coord_11(combine(buses,n3874),combine(veterinarians,n343),combine(museums,n765),combine(foxes,n37),combine(schools,n18),combine(trucks,n14),combine(diamonds,eight),combine(boxes,n122),combine(women,n107),combine(churches,n29),combine(trees,n20)))
# ::id long_lists_7
# ::suppl long_lists_7
(u_1707 / see-01
        :ARG0 (i / i)
        :ARG1 (r / and
                 :op1 (b / bus
                         :quant 3874)
                 :op2 (v / veterinarian
                         :quant 343)
                 :op3 (m / museum
                         :quant 765)
                 :op4 (f / fox
                         :quant 37)
                 :op5 (s / school
                         :quant 18)
                 :op6 (t / truck
                         :quant 14)
                 :op7 (d / diamond
                         :quant 8)
                 :op8 (u_1705 / box
                              :quant 122)
                 :op9 (w / woman
                         :quant 107)
                 :op10 (c / church
                          :quant 29)
                 :op11 (u_1700 / tree
                               :quant 20)))

# ::snt I saw eleven foxes, eight cats, 765 spaceships, five airplanes, 14 bikes, 15 trees, 3874 ships, a few museums, 37 boxes, 376 boats, 51 dinosaurs and 235 weapons.
# ::tree template(coord_12(combine(foxes,eleven),combine(cats,eight),combine(spaceships,n765),combine(airplanes,five),combine(bikes,n14),combine(trees,n15),combine(ships,n3874),combine(museums,few),combine(boxes,n37),combine(boats,n376),combine(dinosaurs,n51),combine(weapons,n235)))
# ::id long_lists_8
# ::suppl long_lists_8
(u_1722 / see-01
        :ARG0 (i / i)
        :ARG1 (r / and
                 :op1 (f / fox
                         :quant 11)
                 :op2 (c / cat
                         :quant 8)
                 :op3 (s / spaceship
                         :quant 765)
                 :op4 (a / airplane
                         :quant 5)
                 :op5 (b / bike
                         :quant 14)
                 :op6 (t / tree
                         :quant 15)
                 :op7 (u_1719 / ship
                              :quant 3874)
                 :op8 (m / museum
                         :quant (u_1713 / few))
                 :op9 (u_1715 / box
                              :quant 37)
                 :op10 (u_1710 / boat
                               :quant 376)
                 :op11 (d / dinosaur
                          :quant 51)
                 :op12 (w / weapon
                          :quant 235)))

# ::snt I saw 122 dogs, 21 barrels, 37 rockets, 44 roads, eleven cars, seven universities, eight soldiers, a few tanks, 376 boxes, 14 boats, 513 trucks, 15 trees and 29 museums.
# ::tree template(coord_13(combine(dogs,n122),combine(barrels,n21),combine(rockets,n37),combine(roads,n44),combine(cars,eleven),combine(universities,seven),combine(soldiers,eight),combine(tanks,few),combine(boxes,n376),combine(boats,n14),combine(trucks,n513),combine(trees,n15),combine(museums,n29)))
# ::id long_lists_9
# ::suppl long_lists_9
(u_1741 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1735 / and
                      :op1 (d / dog
                              :quant 122)
                      :op2 (b / barrel
                              :quant 21)
                      :op3 (r / rocket
                              :quant 37)
                      :op4 (u_1737 / road
                                   :quant 44)
                      :op5 (c / car
                              :quant 11)
                      :op6 (u / university
                              :quant 7)
                      :op7 (s / soldier
                              :quant 8)
                      :op8 (t / tank
                              :quant (u_1731 / few))
                      :op9 (u_1738 / box
                                   :quant 376)
                      :op10 (u_1727 / boat
                                    :quant 14)
                      :op11 (u_1730 / truck
                                    :quant 513)
                      :op12 (u_1725 / tree
                                    :quant 15)
                      :op13 (m / museum
                               :quant 29)))

# ::snt I saw twelve trucks, nine soldiers, 71 bombs, 14 children, four astronauts, 18 boxes, 1487 trees, 21 ships, 122 museums, a few schools, 513 diamonds, 107 veterinarians, 51 buses and 376 airplanes.
# ::tree template(coord_14(combine(trucks,twelve),combine(soldiers,nine),combine(bombs,n71),combine(children,n14),combine(astronauts,four),combine(boxes,n18),combine(trees,n1487),combine(ships,n21),combine(museums,n122),combine(schools,few),combine(diamonds,n513),combine(veterinarians,n107),combine(buses,n51),combine(airplanes,n376)))
# ::id long_lists_10
# ::suppl long_lists_10
(u_1761 / see-01
        :ARG0 (i / i)
        :ARG1 (r / and
                 :op1 (t / truck
                         :quant 12)
                 :op2 (s / soldier
                         :quant 9)
                 :op3 (b / bomb
                         :quant 71)
                 :op4 (c / child
                         :quant 14)
                 :op5 (a / astronaut
                         :quant 4)
                 :op6 (u_1755 / box
                              :quant 18)
                 :op7 (u_1760 / tree
                              :quant 1487)
                 :op8 (u_1758 / ship
                              :quant 21)
                 :op9 (m / museum
                         :quant 122)
                 :op10 (u_1748 / school
                               :quant (u_1746 / few))
                 :op11 (d / diamond
                          :quant 513)
                 :op12 (v / veterinarian
                          :quant 107)
                 :op13 (u_1750 / bus
                               :quant 51)
                 :op14 (u_1752 / airplane
                               :quant 376)))

# ::snt I saw 343 universities, 21 barrels, six tanks, 15 soldiers, eight airports, 71 astronauts, 51 mosques, 122 children, four trucks, a few buses, 44 boxes, 513 rats, three veterinarians, nine bombs and eleven roads.
# ::tree template(coord_15(combine(universities,n343),combine(barrels,n21),combine(tanks,six),combine(soldiers,n15),combine(airports,eight),combine(astronauts,n71),combine(mosques,n51),combine(children,n122),combine(trucks,four),combine(buses,few),combine(boxes,n44),combine(rats,n513),combine(veterinarians,three),combine(bombs,nine),combine(roads,eleven)))
# ::id long_lists_11
# ::suppl long_lists_11
(u_1783 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1762 / and
                      :op1 (u / university
                              :quant 343)
                      :op2 (b / barrel
                              :quant 21)
                      :op3 (t / tank
                              :quant 6)
                      :op4 (s / soldier
                              :quant 15)
                      :op5 (a / airport
                              :quant 8)
                      :op6 (u_1775 / astronaut
                                   :quant 71)
                      :op7 (m / mosque
                              :quant 51)
                      :op8 (c / child
                              :quant 122)
                      :op9 (u_1779 / truck
                                   :quant 4)
                      :op10 (u_1780 / bus
                                    :quant (u_1771 / few))
                      :op11 (u_1769 / box
                                    :quant 44)
                      :op12 (r / rat
                               :quant 513)
                      :op13 (v / veterinarian
                               :quant 3)
                      :op14 (u_1767 / bomb
                                    :quant 9)
                      :op15 (u_1766 / road
                                    :quant 11)))

# ::snt I saw eight cars, nine boxes, six clouds, 71 roads, two ships, twelve foxes, four soldiers, 51 dinosaurs, 37 cats, 107 rockets, 18 churches, many barrels, 29 boats, a few museums, 15 lions and 21 women.
# ::tree template(coord_16(combine(cars,eight),combine(boxes,nine),combine(clouds,six),combine(roads,n71),combine(ships,two),combine(foxes,twelve),combine(soldiers,four),combine(dinosaurs,n51),combine(cats,n37),combine(rockets,n107),combine(churches,n18),combine(barrels,many),combine(boats,n29),combine(museums,few),combine(lions,n15),combine(women,n21)))
# ::id long_lists_12
# ::suppl long_lists_12
(u_1807 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1791 / and
                      :op1 (c / car
                              :quant 8)
                      :op2 (b / box
                              :quant 9)
                      :op3 (u_1805 / cloud
                                   :quant 6)
                      :op4 (r / road
                              :quant 71)
                      :op5 (s / ship
                              :quant 2)
                      :op6 (f / fox
                              :quant 12)
                      :op7 (u_1798 / soldier
                                   :quant 4)
                      :op8 (d / dinosaur
                              :quant 51)
                      :op9 (u_1801 / cat
                                   :quant 37)
                      :op10 (u_1800 / rocket
                                    :quant 107)
                      :op11 (u_1792 / church
                                    :quant 18)
                      :op12 (u_1803 / barrel
                                    :quant (u_1789 / many))
                      :op13 (u_1787 / boat
                                    :quant 29)
                      :op14 (m / museum
                               :quant (u_1786 / few))
                      :op15 (l / lion
                               :quant 15)
                      :op16 (w / woman
                               :quant 21)))

# ::snt I saw five schools, 71 soldiers, a few women, seven rockets, 44 submarines, 20 trucks, 21 spaceships, three foxes, many ships, 343 boxes, twelve buses, 3874 clouds, 37 tanks, 13 weapons, ten churches, 235 cats and 122 dinosaurs.
# ::tree template(coord_17(combine(schools,five),combine(soldiers,n71),combine(women,few),combine(rockets,seven),combine(submarines,n44),combine(trucks,n20),combine(spaceships,n21),combine(foxes,three),combine(ships,many),combine(boxes,n343),combine(buses,twelve),combine(clouds,n3874),combine(tanks,n37),combine(weapons,n13),combine(churches,ten),combine(cats,n235),combine(dinosaurs,n122)))
# ::id long_lists_13
# ::suppl long_lists_13
(u_1834 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1827 / and
                      :op1 (s / school
                              :quant 5)
                      :op2 (u_1833 / soldier
                                   :quant 71)
                      :op3 (w / woman
                              :quant (u_1830 / few))
                      :op4 (r / rocket
                              :quant 7)
                      :op5 (u_1831 / submarine
                                   :quant 44)
                      :op6 (t / truck
                              :quant 20)
                      :op7 (u_1825 / spaceship
                                   :quant 21)
                      :op8 (f / fox
                              :quant 3)
                      :op9 (u_1821 / ship
                                   :quant (u_1819 / many))
                      :op10 (b / box
                               :quant 343)
                      :op11 (u_1816 / bus
                                    :quant 12)
                      :op12 (c / cloud
                               :quant 3874)
                      :op13 (u_1823 / tank
                                    :quant 37)
                      :op14 (u_1829 / weapon
                                    :quant 13)
                      :op15 (u_1813 / church
                                    :quant 10)
                      :op16 (u_1809 / cat
                                    :quant 235)
                      :op17 (d / dinosaur
                               :quant 122)))

# ::snt I saw 343 churches, 37 weapons, 25 clouds, nine buses, 21 airplanes, 18 boats, 765 ships, 235 dogs, 13 rockets, many airports, six veterinarians, 3874 foxes, eight soldiers, 1487 women, five schools, two children, four roads and three submarines.
# ::tree template(coord_18(combine(churches,n343),combine(weapons,n37),combine(clouds,n25),combine(buses,nine),combine(airplanes,n21),combine(boats,n18),combine(ships,n765),combine(dogs,n235),combine(rockets,n13),combine(airports,many),combine(veterinarians,six),combine(foxes,n3874),combine(soldiers,eight),combine(women,n1487),combine(schools,five),combine(children,two),combine(roads,four),combine(submarines,three)))
# ::id long_lists_14
# ::suppl long_lists_14
(u_1862 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1836 / and
                      :op1 (c / church
                              :quant 343)
                      :op2 (w / weapon
                              :quant 37)
                      :op3 (u_1860 / cloud
                                   :quant 25)
                      :op4 (b / bus
                              :quant 9)
                      :op5 (a / airplane
                              :quant 21)
                      :op6 (u_1854 / boat
                                   :quant 18)
                      :op7 (s / ship
                              :quant 765)
                      :op8 (d / dog
                              :quant 235)
                      :op9 (r / rocket
                              :quant 13)
                      :op10 (u_1852 / airport
                                    :quant (u_1846 / many))
                      :op11 (v / veterinarian
                               :quant 6)
                      :op12 (f / fox
                               :quant 3874)
                      :op13 (u_1850 / soldier
                                    :quant 8)
                      :op14 (u_1859 / woman
                                    :quant 1487)
                      :op15 (u_1842 / school
                                    :quant 5)
                      :op16 (u_1856 / child
                                    :quant 2)
                      :op17 (u_1847 / road
                                    :quant 4)
                      :op18 (u_1839 / submarine
                                    :quant 3)))

# ::snt I saw two airports, a few museums, 51 astronauts, 15 trucks, eleven lions, 44 women, 1487 trees, 122 dogs, seven cats, six airplanes, 37 roads, 343 bombs, 765 schools, 20 clouds, 513 bikes, nine foxes, 25 barrels, 98 ships and five veterinarians.
# ::tree template(coord_19(combine(airports,two),combine(museums,few),combine(astronauts,n51),combine(trucks,n15),combine(lions,eleven),combine(women,n44),combine(trees,n1487),combine(dogs,n122),combine(cats,seven),combine(airplanes,six),combine(roads,n37),combine(bombs,n343),combine(schools,n765),combine(clouds,n20),combine(bikes,n513),combine(foxes,nine),combine(barrels,n25),combine(ships,n98),combine(veterinarians,five)))
# ::id long_lists_15
# ::suppl long_lists_15
(u_1889 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1874 / and
                      :op1 (a / airport
                              :quant 2)
                      :op2 (m / museum
                              :quant (u_1888 / few))
                      :op3 (u_1887 / astronaut
                                   :quant 51)
                      :op4 (t / truck
                              :quant 15)
                      :op5 (l / lion
                              :quant 11)
                      :op6 (w / woman
                              :quant 44)
                      :op7 (u_1883 / tree
                                   :quant 1487)
                      :op8 (d / dog
                              :quant 122)
                      :op9 (c / cat
                              :quant 7)
                      :op10 (u_1884 / airplane
                                    :quant 6)
                      :op11 (r / road
                               :quant 37)
                      :op12 (b / bomb
                               :quant 343)
                      :op13 (s / school
                               :quant 765)
                      :op14 (u_1876 / cloud
                                    :quant 20)
                      :op15 (u_1871 / bike
                                    :quant 513)
                      :op16 (f / fox
                               :quant 9)
                      :op17 (u_1866 / barrel
                                    :quant 25)
                      :op18 (u_1870 / ship
                                    :quant 98)
                      :op19 (v / veterinarian
                               :quant 5)))

# ::snt I saw 765 boxes, 343 dogs, 15 airplanes, 37 soldiers, 20 churches, three trees, 44 rockets, many airports, 25 women, a few submarines, 13 trucks, 376 diamonds, 235 bombs, 98 barrels, four tanks, 71 cats, 122 bikes, seven buses, 513 mosques and nine museums.
# ::tree template(coord_20(combine(boxes,n765),combine(dogs,n343),combine(airplanes,n15),combine(soldiers,n37),combine(churches,n20),combine(trees,three),combine(rockets,n44),combine(airports,many),combine(women,n25),combine(submarines,few),combine(trucks,n13),combine(diamonds,n376),combine(bombs,n235),combine(barrels,n98),combine(tanks,four),combine(cats,n71),combine(bikes,n122),combine(buses,seven),combine(mosques,n513),combine(museums,nine)))
# ::id long_lists_16
# ::suppl long_lists_16
(u_1921 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1908 / and
                      :op1 (b / box
                              :quant 765)
                      :op2 (d / dog
                              :quant 343)
                      :op3 (a / airplane
                              :quant 15)
                      :op4 (s / soldier
                              :quant 37)
                      :op5 (c / church
                              :quant 20)
                      :op6 (t / tree
                              :quant 3)
                      :op7 (r / rocket
                              :quant 44)
                      :op8 (u_1915 / airport
                                   :quant (u_1907 / many))
                      :op9 (w / woman
                              :quant 25)
                      :op10 (u_1914 / submarine
                                    :quant (u_1905 / few))
                      :op11 (u_1910 / truck
                                    :quant 13)
                      :op12 (u_1917 / diamond
                                    :quant 376)
                      :op13 (u_1919 / bomb
                                    :quant 235)
                      :op14 (u_1899 / barrel
                                    :quant 98)
                      :op15 (u_1903 / tank
                                    :quant 4)
                      :op16 (u_1911 / cat
                                    :quant 71)
                      :op17 (u_1897 / bike
                                    :quant 122)
                      :op18 (u_1893 / bus
                                    :quant 7)
                      :op19 (m / mosque
                               :quant 513)
                      :op20 (u_1890 / museum
                                    :quant 9)))

# ::snt I saw seven lions, twelve universities, many weapons, three children, 37 schools, 343 mosques, 765 boats, eight museums, 107 rockets, five cars, 71 buses, four tanks, six astronauts, ten airplanes, 15 trucks, two dogs, a few dinosaurs, 1487 roads, 29 bombs, 25 boxes and 122 ships.
# ::tree template(coord_21(combine(lions,seven),combine(universities,twelve),combine(weapons,many),combine(children,three),combine(schools,n37),combine(mosques,n343),combine(boats,n765),combine(museums,eight),combine(rockets,n107),combine(cars,five),combine(buses,n71),combine(tanks,four),combine(astronauts,six),combine(airplanes,ten),combine(trucks,n15),combine(dogs,two),combine(dinosaurs,few),combine(roads,n1487),combine(bombs,n29),combine(boxes,n25),combine(ships,n122)))
# ::id long_lists_17
# ::suppl long_lists_17
(u_1953 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1926 / and
                      :op1 (l / lion
                              :quant 7)
                      :op2 (u / university
                              :quant 12)
                      :op3 (w / weapon
                              :quant (u_1951 / many))
                      :op4 (c / child
                              :quant 3)
                      :op5 (s / school
                              :quant 37)
                      :op6 (m / mosque
                              :quant 343)
                      :op7 (b / boat
                              :quant 765)
                      :op8 (u_1944 / museum
                                   :quant 8)
                      :op9 (r / rocket
                              :quant 107)
                      :op10 (u_1948 / car
                                    :quant 5)
                      :op11 (u_1942 / bus
                                    :quant 71)
                      :op12 (t / tank
                               :quant 4)
                      :op13 (a / astronaut
                               :quant 6)
                      :op14 (u_1932 / airplane
                                    :quant 10)
                      :op15 (u_1935 / truck
                                    :quant 15)
                      :op16 (d / dog
                               :quant 2)
                      :op17 (u_1928 / dinosaur
                                    :quant (u_1929 / few))
                      :op18 (u_1940 / road
                                    :quant 1487)
                      :op19 (u_1936 / bomb
                                    :quant 29)
                      :op20 (u_1923 / box
                                    :quant 25)
                      :op21 (u_1947 / ship
                                    :quant 122)))

# ::snt I saw 13 airports, a few cars, 107 tanks, many rats, 376 museums, 37 bikes, 15 ships, 3874 submarines, 18 clouds, ten churches, 21 rockets, twelve soldiers, 98 mosques, 513 trucks, 71 airplanes, eleven barrels, 44 bombs, nine foxes, 25 cats, five children, three schools and six universities.
# ::tree template(coord_22(combine(airports,n13),combine(cars,few),combine(tanks,n107),combine(rats,many),combine(museums,n376),combine(bikes,n37),combine(ships,n15),combine(submarines,n3874),combine(clouds,n18),combine(churches,ten),combine(rockets,n21),combine(soldiers,twelve),combine(mosques,n98),combine(trucks,n513),combine(airplanes,n71),combine(barrels,eleven),combine(bombs,n44),combine(foxes,nine),combine(cats,n25),combine(children,five),combine(schools,three),combine(universities,six)))
# ::id long_lists_18
# ::suppl long_lists_18
(u_1989 / see-01
        :ARG0 (i / i)
        :ARG1 (u_1968 / and
                      :op1 (a / airport
                              :quant 13)
                      :op2 (c / car
                              :quant (u_1988 / few))
                      :op3 (t / tank
                              :quant 107)
                      :op4 (r / rat
                              :quant (u_1983 / many))
                      :op5 (m / museum
                              :quant 376)
                      :op6 (b / bike
                              :quant 37)
                      :op7 (s / ship
                              :quant 15)
                      :op8 (u_1976 / submarine
                                   :quant 3874)
                      :op9 (u_1985 / cloud
                                   :quant 18)
                      :op10 (u_1971 / church
                                    :quant 10)
                      :op11 (u_1982 / rocket
                                    :quant 21)
                      :op12 (u_1974 / soldier
                                    :quant 12)
                      :op13 (u_1979 / mosque
                                    :quant 98)
                      :op14 (u_1984 / truck
                                    :quant 513)
                      :op15 (u_1987 / airplane
                                    :quant 71)
                      :op16 (u_1977 / barrel
                                    :quant 11)
                      :op17 (u_1960 / bomb
                                    :quant 44)
                      :op18 (f / fox
                               :quant 9)
                      :op19 (u_1969 / cat
                                    :quant 25)
                      :op20 (u_1956 / child
                                    :quant 5)
                      :op21 (u_1966 / school
                                    :quant 3)
                      :op22 (u / university
                               :quant 6)))

# ::snt I saw twelve submarines, 98 dogs, ten cars, a few veterinarians, 15 astronauts, 25 diamonds, two rats, 44 bombs, 37 dinosaurs, eleven bikes, 235 women, 3874 barrels, seven airplanes, 765 schools, many museums, 21 boats, 513 mosques, 51 boxes, 376 weapons, 20 cats, 343 ships, 18 buses and 71 churches.
# ::tree template(coord_23(combine(submarines,twelve),combine(dogs,n98),combine(cars,ten),combine(veterinarians,few),combine(astronauts,n15),combine(diamonds,n25),combine(rats,two),combine(bombs,n44),combine(dinosaurs,n37),combine(bikes,eleven),combine(women,n235),combine(barrels,n3874),combine(airplanes,seven),combine(schools,n765),combine(museums,many),combine(boats,n21),combine(mosques,n513),combine(boxes,n51),combine(weapons,n376),combine(cats,n20),combine(ships,n343),combine(buses,n18),combine(churches,n71)))
# ::id long_lists_19
# ::suppl long_lists_19
(u_2027 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2015 / and
                      :op1 (s / submarine
                              :quant 12)
                      :op2 (d / dog
                              :quant 98)
                      :op3 (c / car
                              :quant 10)
                      :op4 (v / veterinarian
                              :quant (u_2022 / few))
                      :op5 (a / astronaut
                              :quant 15)
                      :op6 (u_2023 / diamond
                                   :quant 25)
                      :op7 (r / rat
                              :quant 2)
                      :op8 (b / bomb
                              :quant 44)
                      :op9 (u_2016 / dinosaur
                                   :quant 37)
                      :op10 (u_2012 / bike
                                    :quant 11)
                      :op11 (w / woman
                               :quant 235)
                      :op12 (u_2009 / barrel
                                    :quant 3874)
                      :op13 (u_2018 / airplane
                                    :quant 7)
                      :op14 (u_2026 / school
                                    :quant 765)
                      :op15 (m / museum
                               :quant (u_2002 / many))
                      :op16 (u_2005 / boat
                                    :quant 21)
                      :op17 (u_2000 / mosque
                                    :quant 513)
                      :op18 (u_1998 / box
                                    :quant 51)
                      :op19 (u_2008 / weapon
                                    :quant 376)
                      :op20 (u_2021 / cat
                                    :quant 20)
                      :op21 (u_2003 / ship
                                    :quant 343)
                      :op22 (u_1995 / bus
                                    :quant 18)
                      :op23 (u_1992 / church
                                    :quant 71)))

# ::snt I saw three schools, four boats, 29 tanks, 3874 bombs, 25 diamonds, 14 women, 376 rockets, 98 clouds, five children, six airplanes, 44 airports, 107 dinosaurs, 1487 roads, 13 mosques, 20 cars, 765 barrels, 21 bikes, 122 trees, twelve cats, nine rats, two submarines, eight buses, seven veterinarians and 235 foxes.
# ::tree template(coord_24(combine(schools,three),combine(boats,four),combine(tanks,n29),combine(bombs,n3874),combine(diamonds,n25),combine(women,n14),combine(rockets,n376),combine(clouds,n98),combine(children,five),combine(airplanes,six),combine(airports,n44),combine(dinosaurs,n107),combine(roads,n1487),combine(mosques,n13),combine(cars,n20),combine(barrels,n765),combine(bikes,n21),combine(trees,n122),combine(cats,twelve),combine(rats,nine),combine(submarines,two),combine(buses,eight),combine(veterinarians,seven),combine(foxes,n235)))
# ::id long_lists_20
# ::suppl long_lists_20
(u_2065 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2032 / and
                      :op1 (s / school
                              :quant 3)
                      :op2 (b / boat
                              :quant 4)
                      :op3 (t / tank
                              :quant 29)
                      :op4 (u_2061 / bomb
                                   :quant 3874)
                      :op5 (d / diamond
                              :quant 25)
                      :op6 (w / woman
                              :quant 14)
                      :op7 (r / rocket
                              :quant 376)
                      :op8 (c / cloud
                              :quant 98)
                      :op9 (u_2050 / child
                                   :quant 5)
                      :op10 (a / airplane
                               :quant 6)
                      :op11 (u_2046 / airport
                                    :quant 44)
                      :op12 (u_2055 / dinosaur
                                    :quant 107)
                      :op13 (u_2053 / road
                                    :quant 1487)
                      :op14 (m / mosque
                               :quant 13)
                      :op15 (u_2048 / car
                                    :quant 20)
                      :op16 (u_2057 / barrel
                                    :quant 765)
                      :op17 (u_2037 / bike
                                    :quant 21)
                      :op18 (u_2060 / tree
                                    :quant 122)
                      :op19 (u_2039 / cat
                                    :quant 12)
                      :op20 (u_2043 / rat
                                    :quant 9)
                      :op21 (u_2064 / submarine
                                    :quant 2)
                      :op22 (u_2035 / bus
                                    :quant 8)
                      :op23 (v / veterinarian
                               :quant 7)
                      :op24 (f / fox
                               :quant 235)))

# ::snt I saw twelve lions, many rockets, a few museums, 15 clouds, 18 schools, 235 trees, 37 buses, 21 children, nine barrels, 3874 dogs, 25 submarines, 1487 airplanes, 14 soldiers, seven churches, six cats, 765 trucks, three tanks, 107 foxes, 71 ships, five weapons, 44 diamonds, 98 airports, 376 cars, eight roads and 513 boats.
# ::tree template(coord_25(combine(lions,twelve),combine(rockets,many),combine(museums,few),combine(clouds,n15),combine(schools,n18),combine(trees,n235),combine(buses,n37),combine(children,n21),combine(barrels,nine),combine(dogs,n3874),combine(submarines,n25),combine(airplanes,n1487),combine(soldiers,n14),combine(churches,seven),combine(cats,six),combine(trucks,n765),combine(tanks,three),combine(foxes,n107),combine(ships,n71),combine(weapons,five),combine(diamonds,n44),combine(airports,n98),combine(cars,n376),combine(roads,eight),combine(boats,n513)))
# ::id long_lists_21
# ::suppl long_lists_21
(u_2105 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2067 / and
                      :op1 (l / lion
                              :quant 12)
                      :op2 (r / rocket
                              :quant (u_2104 / many))
                      :op3 (m / museum
                              :quant (u_2102 / few))
                      :op4 (c / cloud
                              :quant 15)
                      :op5 (s / school
                              :quant 18)
                      :op6 (t / tree
                              :quant 235)
                      :op7 (b / bus
                              :quant 37)
                      :op8 (u_2099 / child
                                   :quant 21)
                      :op9 (u_2093 / barrel
                                   :quant 9)
                      :op10 (d / dog
                               :quant 3874)
                      :op11 (u_2098 / submarine
                                    :quant 25)
                      :op12 (a / airplane
                               :quant 1487)
                      :op13 (u_2086 / soldier
                                    :quant 14)
                      :op14 (u_2091 / church
                                    :quant 7)
                      :op15 (u_2079 / cat
                                    :quant 6)
                      :op16 (u_2096 / truck
                                    :quant 765)
                      :op17 (u_2076 / tank
                                    :quant 3)
                      :op18 (f / fox
                               :quant 107)
                      :op19 (u_2082 / ship
                                    :quant 71)
                      :op20 (w / weapon
                               :quant 5)
                      :op21 (u_2087 / diamond
                                    :quant 44)
                      :op22 (u_2083 / airport
                                    :quant 98)
                      :op23 (u_2077 / car
                                    :quant 376)
                      :op24 (u_2103 / road
                                    :quant 8)
                      :op25 (u_2089 / boat
                                    :quant 513)))

# ::snt I saw three museums, 1487 dogs, eleven astronauts, 44 spaceships, 376 women, 122 dinosaurs, 765 rockets, 513 airports, two clouds, 3874 boxes, 13 rats, 21 universities, 15 diamonds, many churches, 37 tanks, four foxes, 18 boats, 14 roads, a few bombs, 107 buses, 98 schools, six cats, seven lions, 29 mosques, 51 veterinarians and nine submarines.
# ::tree template(coord_26(combine(museums,three),combine(dogs,n1487),combine(astronauts,eleven),combine(spaceships,n44),combine(women,n376),combine(dinosaurs,n122),combine(rockets,n765),combine(airports,n513),combine(clouds,two),combine(boxes,n3874),combine(rats,n13),combine(universities,n21),combine(diamonds,n15),combine(churches,many),combine(tanks,n37),combine(foxes,four),combine(boats,n18),combine(roads,n14),combine(bombs,few),combine(buses,n107),combine(schools,n98),combine(cats,six),combine(lions,seven),combine(mosques,n29),combine(veterinarians,n51),combine(submarines,nine)))
# ::id long_lists_22
# ::suppl long_lists_22
(u_2145 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2116 / and
                      :op1 (m / museum
                              :quant 3)
                      :op2 (d / dog
                              :quant 1487)
                      :op3 (a / astronaut
                              :quant 11)
                      :op4 (s / spaceship
                              :quant 44)
                      :op5 (w / woman
                              :quant 376)
                      :op6 (u_2141 / dinosaur
                                   :quant 122)
                      :op7 (r / rocket
                              :quant 765)
                      :op8 (u_2139 / airport
                                   :quant 513)
                      :op9 (c / cloud
                              :quant 2)
                      :op10 (b / box
                               :quant 3874)
                      :op11 (u_2133 / rat
                                    :quant 13)
                      :op12 (u / university
                               :quant 21)
                      :op13 (u_2134 / diamond
                                    :quant 15)
                      :op14 (u_2129 / church
                                    :quant (u_2123 / many))
                      :op15 (t / tank
                               :quant 37)
                      :op16 (f / fox
                               :quant 4)
                      :op17 (u_2127 / boat
                                    :quant 18)
                      :op18 (u_2126 / road
                                    :quant 14)
                      :op19 (u_2117 / bomb
                                    :quant (u_2115 / few))
                      :op20 (u_2113 / bus
                                    :quant 107)
                      :op21 (u_2138 / school
                                    :quant 98)
                      :op22 (u_2121 / cat
                                    :quant 6)
                      :op23 (l / lion
                               :quant 7)
                      :op24 (u_2143 / mosque
                                    :quant 29)
                      :op25 (v / veterinarian
                               :quant 51)
                      :op26 (u_2111 / submarine
                                    :quant 9)))

# ::snt I saw 18 women, 122 dogs, eleven trucks, 20 weapons, 29 boxes, 44 airports, five universities, 3874 cars, many museums, 235 diamonds, nine bombs, 1487 barrels, twelve tanks, 51 mosques, 765 churches, 71 dinosaurs, 37 rockets, a few submarines, 14 trees, 98 astronauts, four spaceships, 376 boats, 13 airplanes, eight lions, 25 roads, ten clouds and seven ships.
# ::tree template(coord_27(combine(women,n18),combine(dogs,n122),combine(trucks,eleven),combine(weapons,n20),combine(boxes,n29),combine(airports,n44),combine(universities,five),combine(cars,n3874),combine(museums,many),combine(diamonds,n235),combine(bombs,nine),combine(barrels,n1487),combine(tanks,twelve),combine(mosques,n51),combine(churches,n765),combine(dinosaurs,n71),combine(rockets,n37),combine(submarines,few),combine(trees,n14),combine(astronauts,n98),combine(spaceships,four),combine(boats,n376),combine(airplanes,n13),combine(lions,eight),combine(roads,n25),combine(clouds,ten),combine(ships,seven)))
# ::id long_lists_23
# ::suppl long_lists_23
(u_2189 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2148 / and
                      :op1 (w / woman
                              :quant 18)
                      :op2 (d / dog
                              :quant 122)
                      :op3 (t / truck
                              :quant 11)
                      :op4 (u_2188 / weapon
                                   :quant 20)
                      :op5 (b / box
                              :quant 29)
                      :op6 (a / airport
                              :quant 44)
                      :op7 (u / university
                              :quant 5)
                      :op8 (c / car
                              :quant 3874)
                      :op9 (m / museum
                              :quant (u_2176 / many))
                      :op10 (u_2185 / diamond
                                    :quant 235)
                      :op11 (u_2180 / bomb
                                    :quant 9)
                      :op12 (u_2169 / barrel
                                    :quant 1487)
                      :op13 (u_2184 / tank
                                    :quant 12)
                      :op14 (u_2173 / mosque
                                    :quant 51)
                      :op15 (u_2175 / church
                                    :quant 765)
                      :op16 (u_2171 / dinosaur
                                    :quant 71)
                      :op17 (r / rocket
                               :quant 37)
                      :op18 (s / submarine
                               :quant (u_2159 / few))
                      :op19 (u_2166 / tree
                                    :quant 14)
                      :op20 (u_2178 / astronaut
                                    :quant 98)
                      :op21 (u_2158 / spaceship
                                    :quant 4)
                      :op22 (u_2167 / boat
                                    :quant 376)
                      :op23 (u_2154 / airplane
                                    :quant 13)
                      :op24 (l / lion
                               :quant 8)
                      :op25 (u_2160 / road
                                    :quant 25)
                      :op26 (u_2162 / cloud
                                    :quant 10)
                      :op27 (u_2153 / ship
                                    :quant 7)))

# ::snt I saw 98 lions, ten dogs, 235 ships, 21 rockets, a few foxes, 25 trees, twelve trucks, 13 dinosaurs, 765 boxes, two soldiers, 14 universities, three women, four tanks, 343 airports, 20 astronauts, 15 mosques, 376 schools, 122 diamonds, seven clouds, 37 weapons, eight veterinarians, 44 children, 51 cats, 1487 buses, six airplanes, 513 roads, 18 spaceships and eleven bombs.
# ::tree template(coord_28(combine(lions,n98),combine(dogs,ten),combine(ships,n235),combine(rockets,n21),combine(foxes,few),combine(trees,n25),combine(trucks,twelve),combine(dinosaurs,n13),combine(boxes,n765),combine(soldiers,two),combine(universities,n14),combine(women,three),combine(tanks,four),combine(airports,n343),combine(astronauts,n20),combine(mosques,n15),combine(schools,n376),combine(diamonds,n122),combine(clouds,seven),combine(weapons,n37),combine(veterinarians,eight),combine(children,n44),combine(cats,n51),combine(buses,n1487),combine(airplanes,six),combine(roads,n513),combine(spaceships,n18),combine(bombs,eleven)))
# ::id long_lists_24
# ::suppl long_lists_24
(u_2233 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2192 / and
                      :op1 (l / lion
                              :quant 98)
                      :op2 (d / dog
                              :quant 10)
                      :op3 (s / ship
                              :quant 235)
                      :op4 (r / rocket
                              :quant 21)
                      :op5 (f / fox
                              :quant (u_2226 / few))
                      :op6 (t / tree
                              :quant 25)
                      :op7 (u_2224 / truck
                                   :quant 12)
                      :op8 (u_2230 / dinosaur
                                   :quant 13)
                      :op9 (b / box
                              :quant 765)
                      :op10 (u_2229 / soldier
                                    :quant 2)
                      :op11 (u / university
                               :quant 14)
                      :op12 (w / woman
                               :quant 3)
                      :op13 (u_2222 / tank
                                    :quant 4)
                      :op14 (a / airport
                               :quant 343)
                      :op15 (u_2209 / astronaut
                                    :quant 20)
                      :op16 (m / mosque
                               :quant 15)
                      :op17 (u_2216 / school
                                    :quant 376)
                      :op18 (u_2219 / diamond
                                    :quant 122)
                      :op19 (c / cloud
                               :quant 7)
                      :op20 (u_2213 / weapon
                                    :quant 37)
                      :op21 (v / veterinarian
                               :quant 8)
                      :op22 (u_2201 / child
                                    :quant 44)
                      :op23 (u_2197 / cat
                                    :quant 51)
                      :op24 (u_2217 / bus
                                    :quant 1487)
                      :op25 (u_2207 / airplane
                                    :quant 6)
                      :op26 (u_2227 / road
                                    :quant 513)
                      :op27 (u_2205 / spaceship
                                    :quant 18)
                      :op28 (u_2194 / bomb
                                    :quant 11)))

# ::snt I saw three schools, many astronauts, 25 dinosaurs, 71 diamonds, 1487 weapons, 3874 airports, 51 tanks, 107 veterinarians, 44 boats, four lions, 343 bombs, nine dogs, 513 cars, 18 roads, 20 foxes, six rats, 14 clouds, 235 airplanes, 765 mosques, eleven buses, 37 spaceships, two universities, twelve museums, 15 soldiers, 122 churches, five trucks, 21 rockets, 13 trees and 29 boxes.
# ::tree template(coord_29(combine(schools,three),combine(astronauts,many),combine(dinosaurs,n25),combine(diamonds,n71),combine(weapons,n1487),combine(airports,n3874),combine(tanks,n51),combine(veterinarians,n107),combine(boats,n44),combine(lions,four),combine(bombs,n343),combine(dogs,nine),combine(cars,n513),combine(roads,n18),combine(foxes,n20),combine(rats,six),combine(clouds,n14),combine(airplanes,n235),combine(mosques,n765),combine(buses,eleven),combine(spaceships,n37),combine(universities,two),combine(museums,twelve),combine(soldiers,n15),combine(churches,n122),combine(trucks,five),combine(rockets,n21),combine(trees,n13),combine(boxes,n29)))
# ::id long_lists_25
# ::suppl long_lists_25
(u_2279 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2236 / and
                      :op1 (s / school
                              :quant 3)
                      :op2 (a / astronaut
                              :quant (u_2277 / many))
                      :op3 (d / dinosaur
                              :quant 25)
                      :op4 (u_2273 / diamond
                                   :quant 71)
                      :op5 (w / weapon
                              :quant 1487)
                      :op6 (u_2275 / airport
                                   :quant 3874)
                      :op7 (t / tank
                              :quant 51)
                      :op8 (v / veterinarian
                              :quant 107)
                      :op9 (b / boat
                              :quant 44)
                      :op10 (l / lion
                               :quant 4)
                      :op11 (u_2263 / bomb
                                    :quant 343)
                      :op12 (u_2271 / dog
                                    :quant 9)
                      :op13 (c / car
                               :quant 513)
                      :op14 (r / road
                               :quant 18)
                      :op15 (f / fox
                               :quant 20)
                      :op16 (u_2256 / rat
                                    :quant 6)
                      :op17 (u_2257 / cloud
                                    :quant 14)
                      :op18 (u_2268 / airplane
                                    :quant 235)
                      :op19 (m / mosque
                               :quant 765)
                      :op20 (u_2260 / bus
                                    :quant 11)
                      :op21 (u_2278 / spaceship
                                    :quant 37)
                      :op22 (u / university
                               :quant 2)
                      :op23 (u_2247 / museum
                                    :quant 12)
                      :op24 (u_2244 / soldier
                                    :quant 15)
                      :op25 (u_2250 / church
                                    :quant 122)
                      :op26 (u_2267 / truck
                                    :quant 5)
                      :op27 (u_2253 / rocket
                                    :quant 21)
                      :op28 (u_2238 / tree
                                    :quant 13)
                      :op29 (u_2245 / box
                                    :quant 29)))

# ::snt I saw eight roads, 235 boxes, 513 museums, four weapons, 29 children, 25 submarines, 51 mosques, two astronauts, eleven airports, three rockets, seven spaceships, many trees, 122 veterinarians, 1487 foxes, 765 barrels, 98 dogs, 107 schools, 376 airplanes, 13 clouds, 44 boats, 15 cats, 21 trucks, ten dinosaurs, 3874 soldiers, 343 bombs, six diamonds, 14 lions, 18 buses, twelve rats and nine ships.
# ::tree template(coord_30(combine(roads,eight),combine(boxes,n235),combine(museums,n513),combine(weapons,four),combine(children,n29),combine(submarines,n25),combine(mosques,n51),combine(astronauts,two),combine(airports,eleven),combine(rockets,three),combine(spaceships,seven),combine(trees,many),combine(veterinarians,n122),combine(foxes,n1487),combine(barrels,n765),combine(dogs,n98),combine(schools,n107),combine(airplanes,n376),combine(clouds,n13),combine(boats,n44),combine(cats,n15),combine(trucks,n21),combine(dinosaurs,ten),combine(soldiers,n3874),combine(bombs,n343),combine(diamonds,six),combine(lions,n14),combine(buses,n18),combine(rats,twelve),combine(ships,nine)))
# ::id long_lists_26
# ::suppl long_lists_26
(u_2328 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2281 / and
                      :op1 (r / road
                              :quant 8)
                      :op2 (b / box
                              :quant 235)
                      :op3 (m / museum
                              :quant 513)
                      :op4 (w / weapon
                              :quant 4)
                      :op5 (c / child
                              :quant 29)
                      :op6 (s / submarine
                              :quant 25)
                      :op7 (u_2322 / mosque
                                   :quant 51)
                      :op8 (a / astronaut
                              :quant 2)
                      :op9 (u_2314 / airport
                                   :quant 11)
                      :op10 (u_2327 / rocket
                                    :quant 3)
                      :op11 (u_2318 / spaceship
                                    :quant 7)
                      :op12 (t / tree
                               :quant (u_2308 / many))
                      :op13 (v / veterinarian
                               :quant 122)
                      :op14 (f / fox
                               :quant 1487)
                      :op15 (u_2324 / barrel
                                    :quant 765)
                      :op16 (d / dog
                               :quant 98)
                      :op17 (u_2309 / school
                                    :quant 107)
                      :op18 (u_2312 / airplane
                                    :quant 376)
                      :op19 (u_2319 / cloud
                                    :quant 13)
                      :op20 (u_2302 / boat
                                    :quant 44)
                      :op21 (u_2295 / cat
                                    :quant 15)
                      :op22 (u_2307 / truck
                                    :quant 21)
                      :op23 (u_2300 / dinosaur
                                    :quant 10)
                      :op24 (u_2299 / soldier
                                    :quant 3874)
                      :op25 (u_2293 / bomb
                                    :quant 343)
                      :op26 (u_2289 / diamond
                                    :quant 6)
                      :op27 (l / lion
                               :quant 14)
                      :op28 (u_2285 / bus
                                    :quant 18)
                      :op29 (u_2311 / rat
                                    :quant 12)
                      :op30 (u_2288 / ship
                                    :quant 9)))

# ::snt I saw six foxes, twelve clouds, 122 boats, 71 trees, 37 barrels, two lions, three soldiers, 14 astronauts, 51 dogs, 18 ships, 107 rats, 13 diamonds, 3874 airports, 25 bombs, 376 churches, 44 trucks, 343 universities, 15 boxes, eleven dinosaurs, many weapons, 765 roads, 513 women, 235 rockets, 29 bikes, 98 airplanes, ten cars, seven cats, five buses, a few veterinarians, nine submarines and 21 tanks.
# ::tree template(coord_31(combine(foxes,six),combine(clouds,twelve),combine(boats,n122),combine(trees,n71),combine(barrels,n37),combine(lions,two),combine(soldiers,three),combine(astronauts,n14),combine(dogs,n51),combine(ships,n18),combine(rats,n107),combine(diamonds,n13),combine(airports,n3874),combine(bombs,n25),combine(churches,n376),combine(trucks,n44),combine(universities,n343),combine(boxes,n15),combine(dinosaurs,eleven),combine(weapons,many),combine(roads,n765),combine(women,n513),combine(rockets,n235),combine(bikes,n29),combine(airplanes,n98),combine(cars,ten),combine(cats,seven),combine(buses,five),combine(veterinarians,few),combine(submarines,nine),combine(tanks,n21)))
# ::id long_lists_27
# ::suppl long_lists_27
(u_2379 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2339 / and
                      :op1 (f / fox
                              :quant 6)
                      :op2 (c / cloud
                              :quant 12)
                      :op3 (b / boat
                              :quant 122)
                      :op4 (t / tree
                              :quant 71)
                      :op5 (u_2374 / barrel
                                   :quant 37)
                      :op6 (l / lion
                              :quant 2)
                      :op7 (s / soldier
                              :quant 3)
                      :op8 (a / astronaut
                              :quant 14)
                      :op9 (d / dog
                              :quant 51)
                      :op10 (u_2368 / ship
                                    :quant 18)
                      :op11 (r / rat
                               :quant 107)
                      :op12 (u_2363 / diamond
                                    :quant 13)
                      :op13 (u_2365 / airport
                                    :quant 3874)
                      :op14 (u_2370 / bomb
                                    :quant 25)
                      :op15 (u_2376 / church
                                    :quant 376)
                      :op16 (u_2373 / truck
                                    :quant 44)
                      :op17 (u / university
                               :quant 343)
                      :op18 (u_2353 / box
                                    :quant 15)
                      :op19 (u_2357 / dinosaur
                                    :quant 11)
                      :op20 (w / weapon
                               :quant (u_2345 / many))
                      :op21 (u_2360 / road
                                    :quant 765)
                      :op22 (u_2344 / woman
                                    :quant 513)
                      :op23 (u_2342 / rocket
                                    :quant 235)
                      :op24 (u_2346 / bike
                                    :quant 29)
                      :op25 (u_2355 / airplane
                                    :quant 98)
                      :op26 (u_2351 / car
                                    :quant 10)
                      :op27 (u_2333 / cat
                                    :quant 7)
                      :op28 (u_2336 / bus
                                    :quant 5)
                      :op29 (v / veterinarian
                               :quant (u_2331 / few))
                      :op30 (u_2362 / submarine
                                    :quant 9)
                      :op31 (u_2350 / tank
                                    :quant 21)))

# ::snt I saw 98 lions, nine bikes, 765 bombs, 37 cars, 14 dogs, 44 weapons, 20 trucks, 3874 barrels, many universities, 18 boats, 107 museums, 235 churches, 21 rockets, four children, 1487 airports, 29 soldiers, a few veterinarians, five tanks, two spaceships, six women, 51 clouds, 122 mosques, 513 ships, three diamonds, twelve submarines, 15 astronauts, ten buses, 376 trees, eight foxes, seven schools, 71 airplanes and eleven roads.
# ::tree template(coord_32(combine(lions,n98),combine(bikes,nine),combine(bombs,n765),combine(cars,n37),combine(dogs,n14),combine(weapons,n44),combine(trucks,n20),combine(barrels,n3874),combine(universities,many),combine(boats,n18),combine(museums,n107),combine(churches,n235),combine(rockets,n21),combine(children,four),combine(airports,n1487),combine(soldiers,n29),combine(veterinarians,few),combine(tanks,five),combine(spaceships,two),combine(women,six),combine(clouds,n51),combine(mosques,n122),combine(ships,n513),combine(diamonds,three),combine(submarines,twelve),combine(astronauts,n15),combine(buses,ten),combine(trees,n376),combine(foxes,eight),combine(schools,seven),combine(airplanes,n71),combine(roads,eleven)))
# ::id long_lists_28
# ::suppl long_lists_28
(u_2431 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2380 / and
                      :op1 (l / lion
                              :quant 98)
                      :op2 (b / bike
                              :quant 9)
                      :op3 (u_2428 / bomb
                                   :quant 765)
                      :op4 (c / car
                              :quant 37)
                      :op5 (d / dog
                              :quant 14)
                      :op6 (w / weapon
                              :quant 44)
                      :op7 (t / truck
                              :quant 20)
                      :op8 (u_2426 / barrel
                                   :quant 3874)
                      :op9 (u / university
                              :quant (u_2417 / many))
                      :op10 (u_2416 / boat
                                    :quant 18)
                      :op11 (m / museum
                               :quant 107)
                      :op12 (u_2424 / church
                                    :quant 235)
                      :op13 (r / rocket
                               :quant 21)
                      :op14 (u_2409 / child
                                    :quant 4)
                      :op15 (a / airport
                               :quant 1487)
                      :op16 (s / soldier
                               :quant 29)
                      :op17 (v / veterinarian
                               :quant (u_2401 / few))
                      :op18 (u_2419 / tank
                                    :quant 5)
                      :op19 (u_2402 / spaceship
                                    :quant 2)
                      :op20 (u_2421 / woman
                                    :quant 6)
                      :op21 (u_2405 / cloud
                                    :quant 51)
                      :op22 (u_2411 / mosque
                                    :quant 122)
                      :op23 (u_2397 / ship
                                    :quant 513)
                      :op24 (u_2422 / diamond
                                    :quant 3)
                      :op25 (u_2392 / submarine
                                    :quant 12)
                      :op26 (u_2403 / astronaut
                                    :quant 15)
                      :op27 (u_2413 / bus
                                    :quant 10)
                      :op28 (u_2399 / tree
                                    :quant 376)
                      :op29 (f / fox
                               :quant 8)
                      :op30 (u_2389 / school
                                    :quant 7)
                      :op31 (u_2386 / airplane
                                    :quant 71)
                      :op32 (u_2408 / road
                                    :quant 11)))

# ::snt I saw ten diamonds, 1487 dinosaurs, three barrels, 18 submarines, four cats, 21 ships, 765 trucks, eight rockets, 44 roads, six lions, nine bikes, 122 bombs, 37 children, 51 museums, 14 astronauts, 107 boats, two foxes, 3874 cars, 25 airports, 343 boxes, 29 dogs, 235 rats, 376 tanks, 71 clouds, seven buses, five veterinarians, 13 churches, twelve weapons, 513 spaceships, many schools, 15 trees, 98 airplanes and a few women.
# ::tree template(coord_33(combine(diamonds,ten),combine(dinosaurs,n1487),combine(barrels,three),combine(submarines,n18),combine(cats,four),combine(ships,n21),combine(trucks,n765),combine(rockets,eight),combine(roads,n44),combine(lions,six),combine(bikes,nine),combine(bombs,n122),combine(children,n37),combine(museums,n51),combine(astronauts,n14),combine(boats,n107),combine(foxes,two),combine(cars,n3874),combine(airports,n25),combine(boxes,n343),combine(dogs,n29),combine(rats,n235),combine(tanks,n376),combine(clouds,n71),combine(buses,seven),combine(veterinarians,five),combine(churches,n13),combine(weapons,twelve),combine(spaceships,n513),combine(schools,many),combine(trees,n15),combine(airplanes,n98),combine(women,few)))
# ::id long_lists_29
# ::suppl long_lists_29
(u_2486 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2447 / and
                      :op1 (d / diamond
                              :quant 10)
                      :op2 (u_2484 / dinosaur
                                   :quant 1487)
                      :op3 (b / barrel
                              :quant 3)
                      :op4 (s / submarine
                              :quant 18)
                      :op5 (c / cat
                              :quant 4)
                      :op6 (u_2479 / ship
                                   :quant 21)
                      :op7 (t / truck
                              :quant 765)
                      :op8 (r / rocket
                              :quant 8)
                      :op9 (u_2471 / road
                                   :quant 44)
                      :op10 (l / lion
                               :quant 6)
                      :op11 (u_2480 / bike
                                    :quant 9)
                      :op12 (u_2465 / bomb
                                    :quant 122)
                      :op13 (u_2476 / child
                                    :quant 37)
                      :op14 (m / museum
                               :quant 51)
                      :op15 (a / astronaut
                               :quant 14)
                      :op16 (u_2463 / boat
                                    :quant 107)
                      :op17 (f / fox
                               :quant 2)
                      :op18 (u_2461 / car
                                    :quant 3874)
                      :op19 (u_2458 / airport
                                    :quant 25)
                      :op20 (u_2456 / box
                                    :quant 343)
                      :op21 (u_2482 / dog
                                    :quant 29)
                      :op22 (u_2469 / rat
                                    :quant 235)
                      :op23 (u_2473 / tank
                                    :quant 376)
                      :op24 (u_2453 / cloud
                                    :quant 71)
                      :op25 (u_2449 / bus
                                    :quant 7)
                      :op26 (v / veterinarian
                               :quant 5)
                      :op27 (u_2442 / church
                                    :quant 13)
                      :op28 (w / weapon
                               :quant 12)
                      :op29 (u_2475 / spaceship
                                    :quant 513)
                      :op30 (u_2436 / school
                                    :quant (u_2435 / many))
                      :op31 (u_2445 / tree
                                    :quant 15)
                      :op32 (u_2451 / airplane
                                    :quant 98)
                      :op33 (u_2438 / woman
                                    :quant (u_2432 / few))))

# ::snt I saw 3874 boxes, 107 roads, eight barrels, 765 dogs, 25 dinosaurs, 44 cars, four rats, eleven bombs, 343 mosques, 376 diamonds, 98 children, 15 soldiers, 513 airplanes, two universities, seven schools, 21 airports, 71 spaceships, many trucks, twelve boats, 1487 cats, 14 foxes, 51 weapons, 29 museums, 18 submarines, six ships, ten tanks, five buses, three rockets, 20 veterinarians, 13 lions, 235 trees, a few churches, nine bikes and 37 women.
# ::tree template(coord_34(combine(boxes,n3874),combine(roads,n107),combine(barrels,eight),combine(dogs,n765),combine(dinosaurs,n25),combine(cars,n44),combine(rats,four),combine(bombs,eleven),combine(mosques,n343),combine(diamonds,n376),combine(children,n98),combine(soldiers,n15),combine(airplanes,n513),combine(universities,two),combine(schools,seven),combine(airports,n21),combine(spaceships,n71),combine(trucks,many),combine(boats,twelve),combine(cats,n1487),combine(foxes,n14),combine(weapons,n51),combine(museums,n29),combine(submarines,n18),combine(ships,six),combine(tanks,ten),combine(buses,five),combine(rockets,three),combine(veterinarians,n20),combine(lions,n13),combine(trees,n235),combine(churches,few),combine(bikes,nine),combine(women,n37)))
# ::id long_lists_30
# ::suppl long_lists_30
(u_2542 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2493 / and
                      :op1 (b / box
                              :quant 3874)
                      :op2 (r / road
                              :quant 107)
                      :op3 (u_2540 / barrel
                                   :quant 8)
                      :op4 (d / dog
                              :quant 765)
                      :op5 (u_2534 / dinosaur
                                   :quant 25)
                      :op6 (c / car
                              :quant 44)
                      :op7 (u_2539 / rat
                                   :quant 4)
                      :op8 (u_2536 / bomb
                                   :quant 11)
                      :op9 (m / mosque
                              :quant 343)
                      :op10 (u_2532 / diamond
                                    :quant 376)
                      :op11 (u_2530 / child
                                    :quant 98)
                      :op12 (s / soldier
                               :quant 15)
                      :op13 (a / airplane
                               :quant 513)
                      :op14 (u / university
                               :quant 2)
                      :op15 (u_2520 / school
                                    :quant 7)
                      :op16 (u_2517 / airport
                                    :quant 21)
                      :op17 (u_2515 / spaceship
                                    :quant 71)
                      :op18 (t / truck
                               :quant (u_2511 / many))
                      :op19 (u_2526 / boat
                                    :quant 12)
                      :op20 (u_2521 / cat
                                    :quant 1487)
                      :op21 (f / fox
                               :quant 14)
                      :op22 (w / weapon
                               :quant 51)
                      :op23 (u_2524 / museum
                                    :quant 29)
                      :op24 (u_2512 / submarine
                                    :quant 18)
                      :op25 (u_2500 / ship
                                    :quant 6)
                      :op26 (u_2510 / tank
                                    :quant 10)
                      :op27 (u_2507 / bus
                                    :quant 5)
                      :op28 (u_2529 / rocket
                                    :quant 3)
                      :op29 (v / veterinarian
                               :quant 20)
                      :op30 (l / lion
                               :quant 13)
                      :op31 (u_2497 / tree
                                    :quant 235)
                      :op32 (u_2505 / church
                                    :quant (u_2489 / few))
                      :op33 (u_2494 / bike
                                    :quant 9)
                      :op34 (u_2503 / woman
                                    :quant 37)))

# ::snt I saw 13 churches, four lions, 29 foxes, 376 veterinarians, 18 cats, 343 ships, seven bombs, many airplanes, 37 submarines, a few cars, 765 children, 14 rats, ten airports, three soldiers, two women, 21 mosques, 15 schools, 1487 boats, eleven dogs, six trees, twelve barrels, 513 weapons, 44 astronauts, 25 spaceships, 20 universities, eight boxes, 71 museums, 98 rockets, five clouds, 107 trucks, 235 roads, 51 bikes, 3874 dinosaurs, 122 diamonds and nine buses.
# ::tree template(coord_35(combine(churches,n13),combine(lions,four),combine(foxes,n29),combine(veterinarians,n376),combine(cats,n18),combine(ships,n343),combine(bombs,seven),combine(airplanes,many),combine(submarines,n37),combine(cars,few),combine(children,n765),combine(rats,n14),combine(airports,ten),combine(soldiers,three),combine(women,two),combine(mosques,n21),combine(schools,n15),combine(boats,n1487),combine(dogs,eleven),combine(trees,six),combine(barrels,twelve),combine(weapons,n513),combine(astronauts,n44),combine(spaceships,n25),combine(universities,n20),combine(boxes,eight),combine(museums,n71),combine(rockets,n98),combine(clouds,five),combine(trucks,n107),combine(roads,n235),combine(bikes,n51),combine(dinosaurs,n3874),combine(diamonds,n122),combine(buses,nine)))
# ::id long_lists_31
# ::suppl long_lists_31
(u_2600 / see-01
        :ARG0 (i / i)
        :ARG1 (u_2549 / and
                      :op1 (c / church
                              :quant 13)
                      :op2 (l / lion
                              :quant 4)
                      :op3 (f / fox
                              :quant 29)
                      :op4 (v / veterinarian
                              :quant 376)
                      :op5 (u_2598 / cat
                                   :quant 18)
                      :op6 (s / ship
                              :quant 343)
                      :op7 (b / bomb
                              :quant 7)
                      :op8 (a / airplane
                              :quant (u_2590 / many))
                      :op9 (u_2592 / submarine
                                   :quant 37)
                      :op10 (u_2593 / car
                                    :quant (u_2585 / few))
                      :op11 (u_2583 / child
                                    :quant 765)
                      :op12 (r / rat
                               :quant 14)
                      :op13 (u_2587 / airport
                                    :quant 10)
                      :op14 (u_2586 / soldier
                                    :quant 3)
                      :op15 (w / woman
                               :quant 2)
                      :op16 (m / mosque
                               :quant 21)
                      :op17 (u_2576 / school
                                    :quant 15)
                      :op18 (u_2589 / boat
                                    :quant 1487)
                      :op19 (d / dog
                               :quant 11)
                      :op20 (t / tree
                               :quant 6)
                      :op21 (u_2567 / barrel
                                    :quant 12)
                      :op22 (u_2574 / weapon
                                    :quant 513)
                      :op23 (u_2577 / astronaut
                                    :quant 44)
                      :op24 (u_2570 / spaceship
                                    :quant 25)
                      :op25 (u / university
                               :quant 20)
                      :op26 (u_2561 / box
                                    :quant 8)
                      :op27 (u_2571 / museum
                                    :quant 71)
                      :op28 (u_2580 / rocket
                                    :quant 98)
                      :op29 (u_2581 / cloud
                                    :quant 5)
                      :op30 (u_2564 / truck
                                    :quant 107)
                      :op31 (u_2553 / road
                                    :quant 235)
                      :op32 (u_2555 / bike
                                    :quant 51)
                      :op33 (u_2565 / dinosaur
                                    :quant 3874)
                      :op34 (u_2544 / diamond
                                    :quant 122)
                      :op35 (u_2546 / bus
                                    :quant 9)))

# ::snt Please buy chips, a knife, beer and expensive food.
# ::tree template(coord_4(chips,knife,beer,expensive_food))
# ::id long_lists_32
# ::suppl long_lists_32
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (c / chip)
            :op2 (k / knife)
            :op3 (b / beer)
            :op4 (f / food
                    :mod (e / expensive))))

# ::snt Please buy tools, a chicken, a movie, coffee and plates.
# ::tree template(coord_5(tools,chicken,movie,coffee,plates))
# ::id long_lists_33
# ::suppl long_lists_33
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (t / tool)
            :op2 (n / chicken)
            :op3 (m / movie)
            :op4 (c / coffee)
            :op5 (p / plate)))

# ::snt Please buy coffee, plates, a chicken, a book, apples and beer.
# ::tree template(coord_6(coffee,plates,chicken,book,apples,beer))
# ::id long_lists_34
# ::suppl long_lists_34
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (c / coffee)
            :op2 (p / plate)
            :op3 (n / chicken)
            :op4 (b / book)
            :op5 (a / apple)
            :op6 (u_342 / beer)))

# ::snt Please buy apples, water, a light bulb, oranges, chips, a knife and fish.
# ::tree template(coord_7(apples,water,light_bulb,oranges,chips,knife,fish))
# ::id long_lists_35
# ::suppl long_lists_35
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (a / apple)
            :op2 (w / water)
            :op3 (b / bulb
                    :ARG0-of (l / light-04))
            :op4 (o / orange)
            :op5 (c / chip)
            :op6 (k / knife)
            :op7 (f / fish)))

# ::snt Please buy apples, tape, beer, paper, bags, bananas, a book and plates.
# ::tree template(coord_8(apples,tape,beer,paper,bags,bananas,book,plates))
# ::id long_lists_36
# ::suppl long_lists_36
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (a / apple)
            :op2 (t / tape)
            :op3 (b / beer)
            :op4 (p / paper)
            :op5 (u_350 / bag)
            :op6 (u_348 / banana)
            :op7 (u_347 / book)
            :op8 (u_349 / plate)))

# ::snt Please buy a book, gasoline, fish, expensive food, beer, soap, a map, a phone and coal.
# ::tree template(coord_9(book,gasoline,fish,expensive_food,beer,soap,map,phone,coal))
# ::id long_lists_37
# ::suppl long_lists_37
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (b / book)
            :op2 (g / gasoline)
            :op3 (f / fish)
            :op4 (u_353 / food
                        :mod (e / expensive))
            :op5 (u_354 / beer)
            :op6 (s / soap)
            :op7 (m / map)
            :op8 (p / phone)
            :op9 (c / coal)))

# ::snt Please buy gasoline, a cup, alcohol, fish, cigarettes, tools, water, batteries, meat and a phone.
# ::tree template(coord_10(gasoline,cup,alcohol,fish,cigarettes,tools,water,batteries,meat,phone))
# ::id long_lists_38
# ::suppl long_lists_38
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (g / gasoline)
            :op2 (c / cup)
            :op3 (a / alcohol)
            :op4 (f / fish)
            :op5 (u_357 / cigarette)
            :op6 (t / tool)
            :op7 (w / water)
            :op8 (b / battery)
            :op9 (m / meat)
            :op10 (p / phone)))

# ::snt Please buy oranges, expensive food, a hat, wine, rice, water, plates, apples, milk, meat and fish.
# ::tree template(coord_11(oranges,expensive_food,hat,wine,rice,water,plates,apples,milk,meat,fish))
# ::id long_lists_39
# ::suppl long_lists_39
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_361 / and
                :op1 (o / orange)
                :op2 (f / food
                        :mod (e / expensive))
                :op3 (h / hat)
                :op4 (w / wine)
                :op5 (r / rice)
                :op6 (u_362 / water)
                :op7 (p / plate)
                :op8 (a / apple)
                :op9 (m / milk)
                :op10 (u_360 / meat)
                :op11 (u_363 / fish)))

# ::snt Please buy coffee, bags, bananas, rice, expensive food, ice, gasoline, fish, soap, a map, paper and a hat.
# ::tree template(coord_12(coffee,bags,bananas,rice,expensive_food,ice,gasoline,fish,soap,map,paper,hat))
# ::id long_lists_40
# ::suppl long_lists_40
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_367 / and
                :op1 (c / coffee)
                :op2 (b / bag)
                :op3 (u_368 / banana)
                :op4 (r / rice)
                :op5 (f / food
                        :mod (e / expensive))
                :op6 (i / ice)
                :op7 (g / gasoline)
                :op8 (u_366 / fish)
                :op9 (s / soap)
                :op10 (m / map)
                :op11 (p / paper)
                :op12 (h / hat)))

# ::snt Please buy oranges, expensive food, apples, ice, bananas, a cup, a knife, bags, wine, tools, paper, milk and salt.
# ::tree template(coord_13(oranges,expensive_food,apples,ice,bananas,cup,knife,bags,wine,tools,paper,milk,salt))
# ::id long_lists_41
# ::suppl long_lists_41
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (o / orange)
            :op2 (f / food
                    :mod (e / expensive))
            :op3 (a / apple)
            :op4 (i / ice)
            :op5 (b / banana)
            :op6 (c / cup)
            :op7 (k / knife)
            :op8 (u_371 / bag)
            :op9 (w / wine)
            :op10 (t / tool)
            :op11 (p / paper)
            :op12 (m / milk)
            :op13 (s / salt)))

# ::snt Please buy tape, expensive food, a light bulb, wine, soap, apples, fish, plates, juice, coal, a knife, batteries, a movie and a phone.
# ::tree template(coord_14(tape,expensive_food,light_bulb,wine,soap,apples,fish,plates,juice,coal,knife,batteries,movie,phone))
# ::id long_lists_42
# ::suppl long_lists_42
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (t / tape)
            :op2 (f / food
                    :mod (e / expensive))
            :op3 (b / bulb
                    :ARG0-of (l / light-04))
            :op4 (w / wine)
            :op5 (s / soap)
            :op6 (a / apple)
            :op7 (u_376 / fish)
            :op8 (p / plate)
            :op9 (j / juice)
            :op10 (c / coal)
            :op11 (k / knife)
            :op12 (u_375 / battery)
            :op13 (m / movie)
            :op14 (u_374 / phone)))

# ::snt Please buy a movie, coffee, plates, wine, rice, expensive food, water, a book, oranges, bags, tape, bananas, paper, beer and fish.
# ::tree template(coord_15(movie,coffee,plates,wine,rice,expensive_food,water,book,oranges,bags,tape,bananas,paper,beer,fish))
# ::id long_lists_43
# ::suppl long_lists_43
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_383 / and
                :op1 (m / movie)
                :op2 (c / coffee)
                :op3 (p / plate)
                :op4 (w / wine)
                :op5 (r / rice)
                :op6 (f / food
                        :mod (e / expensive))
                :op7 (u_384 / water)
                :op8 (b / book)
                :op9 (o / orange)
                :op10 (u_381 / bag)
                :op11 (t / tape)
                :op12 (u_380 / banana)
                :op13 (u_385 / paper)
                :op14 (u_379 / beer)
                :op15 (u_382 / fish)))

# ::snt Please buy water, oranges, a chicken, gasoline, paper, alcohol, bananas, expensive food, a phone, coal, meat, salt, a movie, milk, chips and fish.
# ::tree template(coord_16(water,oranges,chicken,gasoline,paper,alcohol,bananas,expensive_food,phone,coal,meat,salt,movie,milk,chips,fish))
# ::id long_lists_44
# ::suppl long_lists_44
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (w / water)
            :op2 (o / orange)
            :op3 (n / chicken)
            :op4 (g / gasoline)
            :op5 (p / paper)
            :op6 (a / alcohol)
            :op7 (b / banana)
            :op8 (f / food
                    :mod (e / expensive))
            :op9 (u_392 / phone)
            :op10 (c / coal)
            :op11 (m / meat)
            :op12 (s / salt)
            :op13 (u_389 / movie)
            :op14 (u_388 / milk)
            :op15 (u_390 / chip)
            :op16 (u_391 / fish)))

# ::snt Please buy a phone, rice, milk, coal, fish, salt, plates, wine, beer, expensive food, juice, a map, alcohol, tools, chips, oranges and apples.
# ::tree template(coord_17(phone,rice,milk,coal,fish,salt,plates,wine,beer,expensive_food,juice,map,alcohol,tools,chips,oranges,apples))
# ::id long_lists_45
# ::suppl long_lists_45
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_399 / and
                :op1 (p / phone)
                :op2 (r / rice)
                :op3 (m / milk)
                :op4 (c / coal)
                :op5 (f / fish)
                :op6 (s / salt)
                :op7 (u_400 / plate)
                :op8 (w / wine)
                :op9 (b / beer)
                :op10 (u_396 / food
                             :mod (e / expensive))
                :op11 (j / juice)
                :op12 (u_398 / map)
                :op13 (a / alcohol)
                :op14 (t / tool)
                :op15 (u_397 / chip)
                :op16 (o / orange)
                :op17 (u_395 / apple)))

# ::snt Please buy beer, wine, coffee, a movie, batteries, apples, oranges, soap, fish, expensive food, gasoline, a book, tape, a phone, water, coal, a hat and juice.
# ::tree template(coord_18(beer,wine,coffee,movie,batteries,apples,oranges,soap,fish,expensive_food,gasoline,book,tape,phone,water,coal,hat,juice))
# ::id long_lists_46
# ::suppl long_lists_46
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (b / beer)
            :op2 (w / wine)
            :op3 (c / coffee)
            :op4 (m / movie)
            :op5 (u_407 / battery)
            :op6 (a / apple)
            :op7 (o / orange)
            :op8 (s / soap)
            :op9 (f / fish)
            :op10 (u_403 / food
                         :mod (e / expensive))
            :op11 (g / gasoline)
            :op12 (u_404 / book)
            :op13 (t / tape)
            :op14 (p / phone)
            :op15 (u_406 / water)
            :op16 (u_405 / coal)
            :op17 (h / hat)
            :op18 (j / juice)))

# ::snt Please buy a light bulb, tape, oranges, batteries, a chicken, meat, a map, bananas, beer, a movie, rice, chips, paper, juice, cigarettes, expensive food, gasoline, plates and a hat.
# ::tree template(coord_19(light_bulb,tape,oranges,batteries,chicken,meat,map,bananas,beer,movie,rice,chips,paper,juice,cigarettes,expensive_food,gasoline,plates,hat))
# ::id long_lists_47
# ::suppl long_lists_47
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_412 / and
                :op1 (b / bulb
                        :ARG0-of (l / light-04))
                :op2 (t / tape)
                :op3 (o / orange)
                :op4 (u_417 / battery)
                :op5 (n / chicken)
                :op6 (m / meat)
                :op7 (u_415 / map)
                :op8 (u_416 / banana)
                :op9 (u_413 / beer)
                :op10 (u_414 / movie)
                :op11 (r / rice)
                :op12 (c / chip)
                :op13 (p / paper)
                :op14 (j / juice)
                :op15 (u_411 / cigarette)
                :op16 (f / food
                         :mod (e / expensive))
                :op17 (g / gasoline)
                :op18 (u_410 / plate)
                :op19 (h / hat)))

# ::snt Please buy paper, soap, chips, tape, a map, beer, fish, a cup, wine, meat, coal, alcohol, rice, oranges, a movie, water, a phone, tools, a light bulb and a hat.
# ::tree template(coord_20(paper,soap,chips,tape,map,beer,fish,cup,wine,meat,coal,alcohol,rice,oranges,movie,water,phone,tools,light_bulb,hat))
# ::id long_lists_48
# ::suppl long_lists_48
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_420 / and
                :op1 (p / paper)
                :op2 (s / soap)
                :op3 (c / chip)
                :op4 (t / tape)
                :op5 (m / map)
                :op6 (b / beer)
                :op7 (f / fish)
                :op8 (u_427 / cup)
                :op9 (w / wine)
                :op10 (u_425 / meat)
                :op11 (u_423 / coal)
                :op12 (a / alcohol)
                :op13 (r / rice)
                :op14 (o / orange)
                :op15 (u_421 / movie)
                :op16 (u_422 / water)
                :op17 (u_428 / phone)
                :op18 (u_426 / tool)
                :op19 (u_424 / bulb
                             :ARG0-of (l / light-04))
                :op20 (h / hat)))

# ::snt Please buy meat, alcohol, gasoline, a light bulb, paper, cigarettes, a knife, salt, a hat, bags, tape, milk, a book, water, coal, a movie, a chicken, beer, chips, fish and batteries.
# ::tree template(coord_21(meat,alcohol,gasoline,light_bulb,paper,cigarettes,knife,salt,hat,bags,tape,milk,book,water,coal,movie,chicken,beer,chips,fish,batteries))
# ::id long_lists_49
# ::suppl long_lists_49
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (m / meat)
            :op2 (a / alcohol)
            :op3 (g / gasoline)
            :op4 (b / bulb
                    :ARG0-of (l / light-04))
            :op5 (p / paper)
            :op6 (c / cigarette)
            :op7 (k / knife)
            :op8 (s / salt)
            :op9 (h / hat)
            :op10 (u_437 / bag)
            :op11 (t / tape)
            :op12 (u_438 / milk)
            :op13 (u_435 / book)
            :op14 (w / water)
            :op15 (u_436 / coal)
            :op16 (u_434 / movie)
            :op17 (n / chicken)
            :op18 (u_433 / beer)
            :op19 (u_432 / chip)
            :op20 (f / fish)
            :op21 (u_431 / battery)))

# ::snt Please buy bananas, tools, a map, plates, chips, a movie, soap, cigarettes, water, a hat, batteries, oranges, a chicken, alcohol, a cup, milk, a phone, coal, a knife, juice, meat and rice.
# ::tree template(coord_22(bananas,tools,map,plates,chips,movie,soap,cigarettes,water,hat,batteries,oranges,chicken,alcohol,cup,milk,phone,coal,knife,juice,meat,rice))
# ::id long_lists_50
# ::suppl long_lists_50
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_441 / and
                :op1 (b / banana)
                :op2 (t / tool)
                :op3 (m / map)
                :op4 (p / plate)
                :op5 (c / chip)
                :op6 (u_448 / movie)
                :op7 (s / soap)
                :op8 (u_446 / cigarette)
                :op9 (w / water)
                :op10 (h / hat)
                :op11 (u_449 / battery)
                :op12 (o / orange)
                :op13 (n / chicken)
                :op14 (a / alcohol)
                :op15 (u_444 / cup)
                :op16 (u_445 / milk)
                :op17 (u_447 / phone)
                :op18 (u_443 / coal)
                :op19 (k / knife)
                :op20 (j / juice)
                :op21 (u_442 / meat)
                :op22 (r / rice)))

# ::snt Please buy rice, a knife, bananas, a movie, plates, bags, alcohol, salt, a light bulb, milk, soap, a book, chips, wine, juice, ice, paper, a hat, coffee, batteries, a phone, coal and expensive food.
# ::tree template(coord_23(rice,knife,bananas,movie,plates,bags,alcohol,salt,light_bulb,milk,soap,book,chips,wine,juice,ice,paper,hat,coffee,batteries,phone,coal,expensive_food))
# ::id long_lists_51
# ::suppl long_lists_51
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_462 / and
                :op1 (r / rice)
                :op2 (k / knife)
                :op3 (b / banana)
                :op4 (m / movie)
                :op5 (p / plate)
                :op6 (u_461 / bag)
                :op7 (a / alcohol)
                :op8 (s / salt)
                :op9 (u_458 / bulb
                            :ARG0-of (l / light-04))
                :op10 (u_460 / milk)
                :op11 (u_457 / soap)
                :op12 (u_456 / book)
                :op13 (c / chip)
                :op14 (w / wine)
                :op15 (j / juice)
                :op16 (i / ice)
                :op17 (u_459 / paper)
                :op18 (h / hat)
                :op19 (u_454 / coffee)
                :op20 (u_455 / battery)
                :op21 (u_453 / phone)
                :op22 (u_452 / coal)
                :op23 (f / food
                         :mod (e / expensive))))

# ::snt Please buy rice, a phone, a knife, paper, a movie, meat, batteries, bananas, chips, wine, bags, a map, coffee, fish, beer, a book, ice, gasoline, salt, tools, cigarettes, coal, oranges and plates.
# ::tree template(coord_24(rice,phone,knife,paper,movie,meat,batteries,bananas,chips,wine,bags,map,coffee,fish,beer,book,ice,gasoline,salt,tools,cigarettes,coal,oranges,plates))
# ::id long_lists_52
# ::suppl long_lists_52
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_476 / and
                :op1 (r / rice)
                :op2 (p / phone)
                :op3 (k / knife)
                :op4 (u_475 / paper)
                :op5 (m / movie)
                :op6 (u_473 / meat)
                :op7 (b / battery)
                :op8 (u_471 / banana)
                :op9 (c / chip)
                :op10 (w / wine)
                :op11 (u_470 / bag)
                :op12 (u_472 / map)
                :op13 (u_469 / coffee)
                :op14 (f / fish)
                :op15 (u_468 / beer)
                :op16 (u_466 / book)
                :op17 (i / ice)
                :op18 (g / gasoline)
                :op19 (s / salt)
                :op20 (t / tool)
                :op21 (u_467 / cigarette)
                :op22 (u_465 / coal)
                :op23 (o / orange)
                :op24 (u_474 / plate)))

# ::snt Please buy batteries, apples, ice, a cup, alcohol, bananas, expensive food, soap, tape, juice, a light bulb, a phone, a book, plates, bags, salt, water, cigarettes, wine, tools, chips, a movie, paper, a chicken and coffee.
# ::tree template(coord_25(batteries,apples,ice,cup,alcohol,bananas,expensive_food,soap,tape,juice,light_bulb,phone,book,plates,bags,salt,water,cigarettes,wine,tools,chips,movie,paper,chicken,coffee))
# ::id long_lists_53
# ::suppl long_lists_53
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (b / battery)
            :op2 (a / apple)
            :op3 (i / ice)
            :op4 (c / cup)
            :op5 (u_490 / alcohol)
            :op6 (u_491 / banana)
            :op7 (f / food
                    :mod (e / expensive))
            :op8 (s / soap)
            :op9 (t / tape)
            :op10 (j / juice)
            :op11 (u_488 / bulb
                         :ARG0-of (l / light-04))
            :op12 (p / phone)
            :op13 (u_485 / book)
            :op14 (u_484 / plate)
            :op15 (u_483 / bag)
            :op16 (u_487 / salt)
            :op17 (w / water)
            :op18 (u_489 / cigarette)
            :op19 (u_481 / wine)
            :op20 (u_486 / tool)
            :op21 (u_480 / chip)
            :op22 (m / movie)
            :op23 (u_482 / paper)
            :op24 (n / chicken)
            :op25 (u_479 / coffee)))

# ::snt Please buy a cup, ice, gasoline, milk, meat, a book, apples, chips, a knife, tools, alcohol, a phone, juice, a map, cigarettes, plates, fish, coffee, paper, coal, a chicken, beer, soap, batteries, wine and bags.
# ::tree template(coord_26(cup,ice,gasoline,milk,meat,book,apples,chips,knife,tools,alcohol,phone,juice,map,cigarettes,plates,fish,coffee,paper,coal,chicken,beer,soap,batteries,wine,bags))
# ::id long_lists_54
# ::suppl long_lists_54
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (c / cup)
            :op2 (i / ice)
            :op3 (g / gasoline)
            :op4 (m / milk)
            :op5 (u_504 / meat)
            :op6 (b / book)
            :op7 (a / apple)
            :op8 (u_505 / chip)
            :op9 (k / knife)
            :op10 (t / tool)
            :op11 (u_501 / alcohol)
            :op12 (p / phone)
            :op13 (j / juice)
            :op14 (u_503 / map)
            :op15 (u_500 / cigarette)
            :op16 (u_499 / plate)
            :op17 (f / fish)
            :op18 (u_498 / coffee)
            :op19 (u_497 / paper)
            :op20 (u_496 / coal)
            :op21 (n / chicken)
            :op22 (u_502 / beer)
            :op23 (s / soap)
            :op24 (u_495 / battery)
            :op25 (w / wine)
            :op26 (u_494 / bag)))

# ::snt Please buy alcohol, a knife, a hat, fish, milk, tape, a map, wine, oranges, rice, juice, plates, coal, apples, salt, chips, a book, gasoline, a movie, bananas, meat, soap, batteries, a chicken, ice, paper and a phone.
# ::tree template(coord_27(alcohol,knife,hat,fish,milk,tape,map,wine,oranges,rice,juice,plates,coal,apples,salt,chips,book,gasoline,movie,bananas,meat,soap,batteries,chicken,ice,paper,phone))
# ::id long_lists_55
# ::suppl long_lists_55
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_515 / and
                :op1 (a / alcohol)
                :op2 (k / knife)
                :op3 (h / hat)
                :op4 (f / fish)
                :op5 (m / milk)
                :op6 (t / tape)
                :op7 (u_517 / map)
                :op8 (w / wine)
                :op9 (o / orange)
                :op10 (r / rice)
                :op11 (j / juice)
                :op12 (p / plate)
                :op13 (c / coal)
                :op14 (u_518 / apple)
                :op15 (s / salt)
                :op16 (u_513 / chip)
                :op17 (b / book)
                :op18 (g / gasoline)
                :op19 (u_516 / movie)
                :op20 (u_511 / banana)
                :op21 (u_510 / meat)
                :op22 (u_512 / soap)
                :op23 (u_509 / battery)
                :op24 (n / chicken)
                :op25 (i / ice)
                :op26 (u_514 / paper)
                :op27 (u_508 / phone)))

# ::snt Please buy juice, soap, gasoline, a hat, wine, a movie, tools, water, beer, batteries, expensive food, milk, bags, plates, a phone, paper, tape, a book, alcohol, salt, rice, cigarettes, apples, chips, meat, fish, a light bulb and coal.
# ::tree template(coord_28(juice,soap,gasoline,hat,wine,movie,tools,water,beer,batteries,expensive_food,milk,bags,plates,phone,paper,tape,book,alcohol,salt,rice,cigarettes,apples,chips,meat,fish,light_bulb,coal))
# ::id long_lists_56
# ::suppl long_lists_56
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_523 / and
                :op1 (j / juice)
                :op2 (s / soap)
                :op3 (g / gasoline)
                :op4 (h / hat)
                :op5 (w / wine)
                :op6 (m / movie)
                :op7 (t / tool)
                :op8 (u_535 / water)
                :op9 (b / beer)
                :op10 (u_532 / battery)
                :op11 (f / food
                         :mod (e / expensive))
                :op12 (u_534 / milk)
                :op13 (u_531 / bag)
                :op14 (p / plate)
                :op15 (u_527 / phone)
                :op16 (u_526 / paper)
                :op17 (u_533 / tape)
                :op18 (u_528 / book)
                :op19 (a / alcohol)
                :op20 (u_536 / salt)
                :op21 (r / rice)
                :op22 (c / cigarette)
                :op23 (u_524 / apple)
                :op24 (u_522 / chip)
                :op25 (u_529 / meat)
                :op26 (u_530 / fish)
                :op27 (u_525 / bulb
                             :ARG0-of (l / light-04))
                :op28 (u_521 / coal)))

# ::snt Please buy wine, coffee, expensive food, batteries, plates, a cup, a movie, apples, a hat, milk, a phone, bags, coal, paper, rice, beer, tools, gasoline, bananas, water, cigarettes, tape, ice, salt, juice, alcohol, chips, a chicken and a map.
# ::tree template(coord_29(wine,coffee,expensive_food,batteries,plates,cup,movie,apples,hat,milk,phone,bags,coal,paper,rice,beer,tools,gasoline,bananas,water,cigarettes,tape,ice,salt,juice,alcohol,chips,chicken,map))
# ::id long_lists_57
# ::suppl long_lists_57
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_542 / and
                :op1 (w / wine)
                :op2 (c / coffee)
                :op3 (f / food
                        :mod (e / expensive))
                :op4 (b / battery)
                :op5 (p / plate)
                :op6 (u_552 / cup)
                :op7 (m / movie)
                :op8 (a / apple)
                :op9 (h / hat)
                :op10 (u_548 / milk)
                :op11 (u_550 / phone)
                :op12 (u_551 / bag)
                :op13 (u_549 / coal)
                :op14 (u_545 / paper)
                :op15 (r / rice)
                :op16 (u_544 / beer)
                :op17 (t / tool)
                :op18 (g / gasoline)
                :op19 (u_541 / banana)
                :op20 (u_553 / water)
                :op21 (u_543 / cigarette)
                :op22 (u_540 / tape)
                :op23 (i / ice)
                :op24 (s / salt)
                :op25 (j / juice)
                :op26 (u_547 / alcohol)
                :op27 (u_539 / chip)
                :op28 (n / chicken)
                :op29 (u_546 / map)))

# ::snt Please buy salt, alcohol, batteries, tape, beer, a book, a phone, expensive food, juice, chips, bags, a map, rice, wine, a light bulb, a hat, ice, coal, water, a knife, fish, plates, gasoline, apples, tools, bananas, a cup, oranges, milk and soap.
# ::tree template(coord_30(salt,alcohol,batteries,tape,beer,book,phone,expensive_food,juice,chips,bags,map,rice,wine,light_bulb,hat,ice,coal,water,knife,fish,plates,gasoline,apples,tools,bananas,cup,oranges,milk,soap))
# ::id long_lists_58
# ::suppl long_lists_58
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_559 / and
                :op1 (s / salt)
                :op2 (a / alcohol)
                :op3 (b / battery)
                :op4 (t / tape)
                :op5 (u_568 / beer)
                :op6 (u_566 / book)
                :op7 (p / phone)
                :op8 (f / food
                        :mod (e / expensive))
                :op9 (j / juice)
                :op10 (c / chip)
                :op11 (u_565 / bag)
                :op12 (m / map)
                :op13 (r / rice)
                :op14 (w / wine)
                :op15 (u_561 / bulb
                             :ARG0-of (l / light-04))
                :op16 (h / hat)
                :op17 (i / ice)
                :op18 (u_562 / coal)
                :op19 (u_558 / water)
                :op20 (k / knife)
                :op21 (u_563 / fish)
                :op22 (u_564 / plate)
                :op23 (g / gasoline)
                :op24 (u_569 / apple)
                :op25 (u_567 / tool)
                :op26 (u_557 / banana)
                :op27 (u_556 / cup)
                :op28 (o / orange)
                :op29 (u_560 / milk)
                :op30 (u_570 / soap)))

# ::snt Please buy bananas, coffee, a hat, a knife, a book, ice, a phone, a movie, a cup, water, bags, paper, wine, coal, a light bulb, salt, chips, a chicken, tape, plates, apples, tools, a map, cigarettes, expensive food, milk, soap, alcohol, beer, juice and meat.
# ::tree template(coord_31(bananas,coffee,hat,knife,book,ice,phone,movie,cup,water,bags,paper,wine,coal,light_bulb,salt,chips,chicken,tape,plates,apples,tools,map,cigarettes,expensive_food,milk,soap,alcohol,beer,juice,meat))
# ::id long_lists_59
# ::suppl long_lists_59
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (r / and
            :op1 (b / banana)
            :op2 (c / coffee)
            :op3 (h / hat)
            :op4 (k / knife)
            :op5 (u_589 / book)
            :op6 (i / ice)
            :op7 (p / phone)
            :op8 (m / movie)
            :op9 (u_588 / cup)
            :op10 (w / water)
            :op11 (u_587 / bag)
            :op12 (u_586 / paper)
            :op13 (u_583 / wine)
            :op14 (u_584 / coal)
            :op15 (u_582 / bulb
                         :ARG0-of (l / light-04))
            :op16 (s / salt)
            :op17 (u_580 / chip)
            :op18 (n / chicken)
            :op19 (t / tape)
            :op20 (u_581 / plate)
            :op21 (a / apple)
            :op22 (u_576 / tool)
            :op23 (u_585 / map)
            :op24 (u_577 / cigarette)
            :op25 (f / food
                     :mod (e / expensive))
            :op26 (u_574 / milk)
            :op27 (u_578 / soap)
            :op28 (u_575 / alcohol)
            :op29 (u_579 / beer)
            :op30 (j / juice)
            :op31 (u_573 / meat)))

# ::snt Please buy a cup, a movie, ice, soap, milk, meat, bananas, plates, bags, tape, a hat, coal, a phone, a map, alcohol, beer, paper, a chicken, coffee, a light bulb, a book, fish, cigarettes, rice, apples, a knife, juice, gasoline, batteries, salt, expensive food and wine.
# ::tree template(coord_32(cup,movie,ice,soap,milk,meat,bananas,plates,bags,tape,hat,coal,phone,map,alcohol,beer,paper,chicken,coffee,light_bulb,book,fish,cigarettes,rice,apples,knife,juice,gasoline,batteries,salt,expensive_food,wine))
# ::id long_lists_60
# ::suppl long_lists_60
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_592 / and
                :op1 (c / cup)
                :op2 (m / movie)
                :op3 (i / ice)
                :op4 (s / soap)
                :op5 (u_607 / milk)
                :op6 (u_605 / meat)
                :op7 (b / banana)
                :op8 (p / plate)
                :op9 (u_603 / bag)
                :op10 (t / tape)
                :op11 (h / hat)
                :op12 (u_608 / coal)
                :op13 (u_602 / phone)
                :op14 (u_604 / map)
                :op15 (a / alcohol)
                :op16 (u_601 / beer)
                :op17 (u_599 / paper)
                :op18 (n / chicken)
                :op19 (u_600 / coffee)
                :op20 (u_597 / bulb
                             :ARG0-of (l / light-04))
                :op21 (u_595 / book)
                :op22 (f / fish)
                :op23 (u_596 / cigarette)
                :op24 (r / rice)
                :op25 (u_598 / apple)
                :op26 (k / knife)
                :op27 (j / juice)
                :op28 (g / gasoline)
                :op29 (u_594 / battery)
                :op30 (u_606 / salt)
                :op31 (u_593 / food
                             :mod (e / expensive))
                :op32 (w / wine)))

# ::snt Please buy a cup, bags, a movie, beer, plates, a map, fish, milk, alcohol, expensive food, apples, chips, a phone, coffee, salt, soap, a knife, rice, paper, coal, a light bulb, meat, wine, tools, a chicken, batteries, juice, bananas, cigarettes, a hat, water, ice and oranges.
# ::tree template(coord_33(cup,bags,movie,beer,plates,map,fish,milk,alcohol,expensive_food,apples,chips,phone,coffee,salt,soap,knife,rice,paper,coal,light_bulb,meat,wine,tools,chicken,batteries,juice,bananas,cigarettes,hat,water,ice,oranges))
# ::id long_lists_61
# ::suppl long_lists_61
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_615 / and
                :op1 (c / cup)
                :op2 (b / bag)
                :op3 (m / movie)
                :op4 (u_627 / beer)
                :op5 (p / plate)
                :op6 (u_626 / map)
                :op7 (f / fish)
                :op8 (u_623 / milk)
                :op9 (a / alcohol)
                :op10 (u_622 / food
                             :mod (e / expensive))
                :op11 (u_620 / apple)
                :op12 (u_628 / chip)
                :op13 (u_624 / phone)
                :op14 (u_619 / coffee)
                :op15 (s / salt)
                :op16 (u_616 / soap)
                :op17 (k / knife)
                :op18 (r / rice)
                :op19 (u_618 / paper)
                :op20 (u_617 / coal)
                :op21 (u_625 / bulb
                             :ARG0-of (l / light-04))
                :op22 (u_621 / meat)
                :op23 (w / wine)
                :op24 (t / tool)
                :op25 (n / chicken)
                :op26 (u_613 / battery)
                :op27 (j / juice)
                :op28 (u_611 / banana)
                :op29 (u_614 / cigarette)
                :op30 (h / hat)
                :op31 (u_612 / water)
                :op32 (i / ice)
                :op33 (o / orange)))

# ::snt Please buy tools, fish, coffee, cigarettes, apples, salt, expensive food, bananas, a phone, juice, paper, milk, batteries, a light bulb, wine, ice, plates, a chicken, oranges, a hat, beer, a cup, alcohol, a knife, a book, rice, chips, coal, water, a map, meat, tape, bags and a movie.
# ::tree template(coord_34(tools,fish,coffee,cigarettes,apples,salt,expensive_food,bananas,phone,juice,paper,milk,batteries,light_bulb,wine,ice,plates,chicken,oranges,hat,beer,cup,alcohol,knife,book,rice,chips,coal,water,map,meat,tape,bags,movie))
# ::id long_lists_62
# ::suppl long_lists_62
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_634 / and
                :op1 (t / tool)
                :op2 (f / fish)
                :op3 (c / coffee)
                :op4 (u_647 / cigarette)
                :op5 (a / apple)
                :op6 (s / salt)
                :op7 (u_648 / food
                            :mod (e / expensive))
                :op8 (b / banana)
                :op9 (p / phone)
                :op10 (j / juice)
                :op11 (u_643 / paper)
                :op12 (m / milk)
                :op13 (u_644 / battery)
                :op14 (u_640 / bulb
                             :ARG0-of (l / light-04))
                :op15 (w / wine)
                :op16 (i / ice)
                :op17 (u_642 / plate)
                :op18 (n / chicken)
                :op19 (o / orange)
                :op20 (h / hat)
                :op21 (u_639 / beer)
                :op22 (u_646 / cup)
                :op23 (u_645 / alcohol)
                :op24 (k / knife)
                :op25 (u_637 / book)
                :op26 (r / rice)
                :op27 (u_636 / chip)
                :op28 (u_633 / coal)
                :op29 (u_638 / water)
                :op30 (u_641 / map)
                :op31 (u_632 / meat)
                :op32 (u_649 / tape)
                :op33 (u_635 / bag)
                :op34 (u_631 / movie)))

# ::snt Please buy plates, juice, tools, a map, rice, cigarettes, salt, oranges, bananas, gasoline, a book, a hat, ice, a cup, meat, apples, a light bulb, soap, a phone, wine, tape, batteries, fish, bags, a chicken, alcohol, paper, beer, expensive food, a movie, coffee, milk, water, a knife and coal.
# ::tree template(coord_35(plates,juice,tools,map,rice,cigarettes,salt,oranges,bananas,gasoline,book,hat,ice,cup,meat,apples,light_bulb,soap,phone,wine,tape,batteries,fish,bags,chicken,alcohol,paper,beer,expensive_food,movie,coffee,milk,water,knife,coal))
# ::id long_lists_63
# ::suppl long_lists_63
(v / buy-01
   :mode imperative
   :polite +
   :ARG0 (y / you)
   :ARG1 (u_667 / and
                :op1 (p / plate)
                :op2 (j / juice)
                :op3 (t / tool)
                :op4 (m / map)
                :op5 (r / rice)
                :op6 (c / cigarette)
                :op7 (s / salt)
                :op8 (o / orange)
                :op9 (b / banana)
                :op10 (g / gasoline)
                :op11 (u_664 / book)
                :op12 (h / hat)
                :op13 (i / ice)
                :op14 (u_666 / cup)
                :op15 (u_668 / meat)
                :op16 (a / apple)
                :op17 (u_663 / bulb
                             :ARG0-of (l / light-04))
                :op18 (u_665 / soap)
                :op19 (u_670 / phone)
                :op20 (w / wine)
                :op21 (u_669 / tape)
                :op22 (u_659 / battery)
                :op23 (f / fish)
                :op24 (u_656 / bag)
                :op25 (n / chicken)
                :op26 (u_660 / alcohol)
                :op27 (u_658 / paper)
                :op28 (u_654 / beer)
                :op29 (u_655 / food
                             :mod (e / expensive))
                :op30 (u_661 / movie)
                :op31 (u_662 / coffee)
                :op32 (u_653 / milk)
                :op33 (u_657 / water)
                :op34 (k / knife)
                :op35 (u_652 / coal)))

# ::snt She visited Egypt, South Korea, North Korea and Malaysia.
# ::tree template(coord_4(egypt,south_korea,north_korea,malaysia))
# ::id long_lists_64
# ::suppl long_lists_64
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Egypt"
                    :name (n / name
                             :op1 "Egypt"))
            :op2 (u_5129 / country
                         :wiki "South_Korea"
                         :name (u_5130 / name
                                       :op1 "South"
                                       :op2 "Korea"))
            :op3 (u_5125 / country
                         :wiki "North_Korea"
                         :name (u_5126 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op4 (u_5120 / country
                         :wiki "Malaysia"
                         :name (u_5121 / name
                                       :op1 "Malaysia"))))

# ::snt She visited Australia, Malaysia, the Philippines, Jordan and Zimbabwe.
# ::tree template(coord_5(australia,malaysia,philippines,Jordan,Zimbabwe))
# ::id long_lists_65
# ::suppl long_lists_65
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Australia"
                    :name (n / name
                             :op1 "Australia"))
            :op2 (u_5147 / country
                         :wiki "Malaysia"
                         :name (u_5148 / name
                                       :op1 "Malaysia"))
            :op3 (u_5143 / country
                         :wiki "Philippines"
                         :name (u_5144 / name
                                       :op1 "Philippines"))
            :op4 (u_5139 / country
                         :wiki "Jordan"
                         :name (u_5140 / name
                                       :op1 "Jordan"))
            :op5 (u_5135 / country
                         :wiki "Zimbabwe"
                         :name (u_5136 / name
                                       :op1 "Zimbabwe"))))

# ::snt She visited Israel, the Philippines, Afghanistan, Italy, Japan and France.
# ::tree template(coord_6(israel,philippines,afghanistan,italy,japan,france))
# ::id long_lists_66
# ::suppl long_lists_66
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Israel"
                    :name (n / name
                             :op1 "Israel"))
            :op2 (u_5169 / country
                         :wiki "Philippines"
                         :name (u_5170 / name
                                       :op1 "Philippines"))
            :op3 (u_5165 / country
                         :wiki "Afghanistan"
                         :name (u_5166 / name
                                       :op1 "Afghanistan"))
            :op4 (u_5161 / country
                         :wiki "Italy"
                         :name (u_5162 / name
                                       :op1 "Italy"))
            :op5 (u_5157 / country
                         :wiki "Japan"
                         :name (u_5158 / name
                                       :op1 "Japan"))
            :op6 (u_5153 / country
                         :wiki "France"
                         :name (u_5154 / name
                                       :op1 "France"))))

# ::snt She visited North Korea, Italy, Estonia, Brazil, Iraq, Spain and Afghanistan.
# ::tree template(coord_7(north_korea,italy,Estonia,brazil,iraq,spain,afghanistan))
# ::id long_lists_67
# ::suppl long_lists_67
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "North_Korea"
                    :name (n / name
                             :op1 "North"
                             :op2 "Korea"))
            :op2 (u_5196 / country
                         :wiki "Italy"
                         :name (u_5197 / name
                                       :op1 "Italy"))
            :op3 (u_5191 / country
                         :wiki "Estonia"
                         :name (u_5192 / name
                                       :op1 "Estonia"))
            :op4 (u_5187 / country
                         :wiki "Brazil"
                         :name (u_5188 / name
                                       :op1 "Brazil"))
            :op5 (u_5183 / country
                         :wiki "Iraq"
                         :name (u_5184 / name
                                       :op1 "Iraq"))
            :op6 (u_5179 / country
                         :wiki "Spain"
                         :name (u_5180 / name
                                       :op1 "Spain"))
            :op7 (u_5175 / country
                         :wiki "Afghanistan"
                         :name (u_5176 / name
                                       :op1 "Afghanistan"))))

# ::snt She visited Iraq, Laos, Thailand, Japan, Italy, France, Indonesia and Colombia.
# ::tree template(coord_8(iraq,laos,thailand,japan,italy,france,indonesia,Colombia))
# ::id long_lists_68
# ::suppl long_lists_68
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Iraq"
                    :name (n / name
                             :op1 "Iraq"))
            :op2 (u_5226 / country
                         :wiki "Laos"
                         :name (u_5227 / name
                                       :op1 "Laos"))
            :op3 (u_5222 / country
                         :wiki "Thailand"
                         :name (u_5223 / name
                                       :op1 "Thailand"))
            :op4 (u_5218 / country
                         :wiki "Japan"
                         :name (u_5219 / name
                                       :op1 "Japan"))
            :op5 (u_5214 / country
                         :wiki "Italy"
                         :name (u_5215 / name
                                       :op1 "Italy"))
            :op6 (u_5210 / country
                         :wiki "France"
                         :name (u_5211 / name
                                       :op1 "France"))
            :op7 (u_5206 / country
                         :wiki "Indonesia"
                         :name (u_5207 / name
                                       :op1 "Indonesia"))
            :op8 (u_5202 / country
                         :wiki "Colombia"
                         :name (u_5203 / name
                                       :op1 "Colombia"))))

# ::snt She visited Libya, Iran, Russia, Saudi Arabia, Malaysia, Thailand, the United States, North Korea and Indonesia.
# ::tree template(coord_9(libya,iran,russia,saudi_arabia,malaysia,thailand,united_states,north_korea,indonesia))
# ::id long_lists_69
# ::suppl long_lists_69
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Libya"
                    :name (n / name
                             :op1 "Libya"))
            :op2 (u_5263 / country
                         :wiki "Iran"
                         :name (u_5264 / name
                                       :op1 "Iran"))
            :op3 (u_5259 / country
                         :wiki "Russia"
                         :name (u_5260 / name
                                       :op1 "Russia"))
            :op4 (u_5255 / country
                         :wiki "Saudi_Arabia"
                         :name (u_5256 / name
                                       :op1 "Saudi"
                                       :op2 "Arabia"))
            :op5 (u_5251 / country
                         :wiki "Malaysia"
                         :name (u_5252 / name
                                       :op1 "Malaysia"))
            :op6 (u_5246 / country
                         :wiki "Thailand"
                         :name (u_5247 / name
                                       :op1 "Thailand"))
            :op7 (u_5242 / country
                         :wiki "United_States"
                         :name (u_5243 / name
                                       :op1 "United"
                                       :op2 "States"))
            :op8 (u_5238 / country
                         :wiki "North_Korea"
                         :name (u_5239 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op9 (u_5233 / country
                         :wiki "Indonesia"
                         :name (u_5234 / name
                                       :op1 "Indonesia"))))

# ::snt She visited Zimbabwe, Palestine, Colombia, Vietnam, Japan, North Korea, the Philippines, Singapore, Canada and Australia.
# ::tree template(coord_10(Zimbabwe,palestine,Colombia,vietnam,japan,north_korea,philippines,singapore,canada,australia))
# ::id long_lists_70
# ::suppl long_lists_70
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Zimbabwe"
                    :name (n / name
                             :op1 "Zimbabwe"))
            :op2 (u_5302 / country
                         :wiki "State_of_Palestine"
                         :name (u_5303 / name
                                       :op1 "Palestine"))
            :op3 (u_5298 / country
                         :wiki "Colombia"
                         :name (u_5299 / name
                                       :op1 "Colombia"))
            :op4 (u_5294 / country
                         :wiki "Vietnam"
                         :name (u_5295 / name
                                       :op1 "Vietnam"))
            :op5 (u_5290 / country
                         :wiki "Japan"
                         :name (u_5291 / name
                                       :op1 "Japan"))
            :op6 (u_5286 / country
                         :wiki "North_Korea"
                         :name (u_5287 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op7 (u_5282 / country
                         :wiki "Philippines"
                         :name (u_5283 / name
                                       :op1 "Philippines"))
            :op8 (u_5277 / country
                         :wiki "Singapore"
                         :name (u_5278 / name
                                       :op1 "Singapore"))
            :op9 (u_5273 / country
                         :wiki "Canada"
                         :name (u_5274 / name
                                       :op1 "Canada"))
            :op10 (u_5269 / country
                          :wiki "Australia"
                          :name (u_5270 / name
                                        :op1 "Australia"))))

# ::snt She visited Vietnam, Myanmar, South Korea, Syria, South Africa, Singapore, Israel, India, Pakistan, China and France.
# ::tree template(coord_11(vietnam,myanmar,south_korea,syria,south_africa,singapore,israel,india,pakistan,china,france))
# ::id long_lists_71
# ::suppl long_lists_71
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Vietnam"
                    :name (n / name
                             :op1 "Vietnam"))
            :op2 (u_5346 / country
                         :wiki "Myanmar"
                         :name (u_5347 / name
                                       :op1 "Myanmar"))
            :op3 (u_5342 / country
                         :wiki "South_Korea"
                         :name (u_5343 / name
                                       :op1 "South"
                                       :op2 "Korea"))
            :op4 (u_5338 / country
                         :wiki "Syria"
                         :name (u_5339 / name
                                       :op1 "Syria"))
            :op5 (u_5333 / country
                         :wiki "South_Africa"
                         :name (u_5334 / name
                                       :op1 "South"
                                       :op2 "Africa"))
            :op6 (u_5329 / country
                         :wiki "Singapore"
                         :name (u_5330 / name
                                       :op1 "Singapore"))
            :op7 (u_5324 / country
                         :wiki "Israel"
                         :name (u_5325 / name
                                       :op1 "Israel"))
            :op8 (u_5320 / country
                         :wiki "India"
                         :name (u_5321 / name
                                       :op1 "India"))
            :op9 (u_5316 / country
                         :wiki "Pakistan"
                         :name (u_5317 / name
                                       :op1 "Pakistan"))
            :op10 (u_5312 / country
                          :wiki "China"
                          :name (u_5313 / name
                                        :op1 "China"))
            :op11 (u_5308 / country
                          :wiki "France"
                          :name (u_5309 / name
                                        :op1 "France"))))

# ::snt She visited Thailand, Laos, Australia, China, Syria, Canada, Japan, Brazil, Iraq, Iran, Pakistan and Colombia.
# ::tree template(coord_12(thailand,laos,australia,china,syria,canada,japan,brazil,iraq,iran,pakistan,Colombia))
# ::id long_lists_72
# ::suppl long_lists_72
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Thailand"
                    :name (n / name
                             :op1 "Thailand"))
            :op2 (u_5392 / country
                         :wiki "Laos"
                         :name (u_5393 / name
                                       :op1 "Laos"))
            :op3 (u_5388 / country
                         :wiki "Australia"
                         :name (u_5389 / name
                                       :op1 "Australia"))
            :op4 (u_5384 / country
                         :wiki "China"
                         :name (u_5385 / name
                                       :op1 "China"))
            :op5 (u_5380 / country
                         :wiki "Syria"
                         :name (u_5381 / name
                                       :op1 "Syria"))
            :op6 (u_5376 / country
                         :wiki "Canada"
                         :name (u_5377 / name
                                       :op1 "Canada"))
            :op7 (u_5372 / country
                         :wiki "Japan"
                         :name (u_5373 / name
                                       :op1 "Japan"))
            :op8 (u_5368 / country
                         :wiki "Brazil"
                         :name (u_5369 / name
                                       :op1 "Brazil"))
            :op9 (u_5364 / country
                         :wiki "Iraq"
                         :name (u_5365 / name
                                       :op1 "Iraq"))
            :op10 (u_5360 / country
                          :wiki "Iran"
                          :name (u_5361 / name
                                        :op1 "Iran"))
            :op11 (u_5356 / country
                          :wiki "Pakistan"
                          :name (u_5357 / name
                                        :op1 "Pakistan"))
            :op12 (u_5352 / country
                          :wiki "Colombia"
                          :name (u_5353 / name
                                        :op1 "Colombia"))))

# ::snt She visited Brazil, China, Japan, Vietnam, Pakistan, Russia, Haiti, South Korea, Italy, the Philippines, Palestine, Singapore and Australia.
# ::tree template(coord_13(brazil,china,japan,vietnam,pakistan,russia,Haiti,south_korea,italy,philippines,palestine,singapore,australia))
# ::id long_lists_73
# ::suppl long_lists_73
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Brazil"
                    :name (n / name
                             :op1 "Brazil"))
            :op2 (u_5443 / country
                         :wiki "China"
                         :name (u_5444 / name
                                       :op1 "China"))
            :op3 (u_5439 / country
                         :wiki "Japan"
                         :name (u_5440 / name
                                       :op1 "Japan"))
            :op4 (u_5435 / country
                         :wiki "Vietnam"
                         :name (u_5436 / name
                                       :op1 "Vietnam"))
            :op5 (u_5431 / country
                         :wiki "Pakistan"
                         :name (u_5432 / name
                                       :op1 "Pakistan"))
            :op6 (u_5427 / country
                         :wiki "Russia"
                         :name (u_5428 / name
                                       :op1 "Russia"))
            :op7 (u_5423 / country
                         :wiki "Haiti"
                         :name (u_5424 / name
                                       :op1 "Haiti"))
            :op8 (u_5419 / country
                         :wiki "South_Korea"
                         :name (u_5420 / name
                                       :op1 "South"
                                       :op2 "Korea"))
            :op9 (u_5415 / country
                         :wiki "Italy"
                         :name (u_5416 / name
                                       :op1 "Italy"))
            :op10 (u_5410 / country
                          :wiki "Philippines"
                          :name (u_5411 / name
                                        :op1 "Philippines"))
            :op11 (u_5406 / country
                          :wiki "State_of_Palestine"
                          :name (u_5407 / name
                                        :op1 "Palestine"))
            :op12 (u_5402 / country
                          :wiki "Singapore"
                          :name (u_5403 / name
                                        :op1 "Singapore"))
            :op13 (u_5398 / country
                          :wiki "Australia"
                          :name (u_5399 / name
                                        :op1 "Australia"))))

# ::snt She visited Afghanistan, Australia, Libya, the Philippines, Iran, Palestine, Myanmar, Zimbabwe, Iraq, Laos, Brazil, Japan, Egypt and Saudi Arabia.
# ::tree template(coord_14(afghanistan,australia,libya,philippines,iran,palestine,myanmar,Zimbabwe,iraq,laos,brazil,japan,egypt,saudi_arabia))
# ::id long_lists_74
# ::suppl long_lists_74
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Afghanistan"
                    :name (n / name
                             :op1 "Afghanistan"))
            :op2 (u_5498 / country
                         :wiki "Australia"
                         :name (u_5499 / name
                                       :op1 "Australia"))
            :op3 (u_5494 / country
                         :wiki "Libya"
                         :name (u_5495 / name
                                       :op1 "Libya"))
            :op4 (u_5490 / country
                         :wiki "Philippines"
                         :name (u_5491 / name
                                       :op1 "Philippines"))
            :op5 (u_5486 / country
                         :wiki "Iran"
                         :name (u_5487 / name
                                       :op1 "Iran"))
            :op6 (u_5482 / country
                         :wiki "State_of_Palestine"
                         :name (u_5483 / name
                                       :op1 "Palestine"))
            :op7 (u_5478 / country
                         :wiki "Myanmar"
                         :name (u_5479 / name
                                       :op1 "Myanmar"))
            :op8 (u_5474 / country
                         :wiki "Zimbabwe"
                         :name (u_5475 / name
                                       :op1 "Zimbabwe"))
            :op9 (u_5470 / country
                         :wiki "Iraq"
                         :name (u_5471 / name
                                       :op1 "Iraq"))
            :op10 (u_5466 / country
                          :wiki "Laos"
                          :name (u_5467 / name
                                        :op1 "Laos"))
            :op11 (u_5462 / country
                          :wiki "Brazil"
                          :name (u_5463 / name
                                        :op1 "Brazil"))
            :op12 (u_5458 / country
                          :wiki "Japan"
                          :name (u_5459 / name
                                        :op1 "Japan"))
            :op13 (u_5454 / country
                          :wiki "Egypt"
                          :name (u_5455 / name
                                        :op1 "Egypt"))
            :op14 (u_5450 / country
                          :wiki "Saudi_Arabia"
                          :name (u_5451 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))))

# ::snt She visited Laos, Spain, Australia, Germany, Palestine, Indonesia, Afghanistan, Syria, Israel, Malaysia, Egypt, Vietnam, India, Brazil and Iran.
# ::tree template(coord_15(laos,spain,australia,germany,palestine,indonesia,afghanistan,syria,israel,malaysia,egypt,vietnam,india,brazil,iran))
# ::id long_lists_75
# ::suppl long_lists_75
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Laos"
                    :name (n / name
                             :op1 "Laos"))
            :op2 (u_5556 / country
                         :wiki "Spain"
                         :name (u_5557 / name
                                       :op1 "Spain"))
            :op3 (u_5552 / country
                         :wiki "Australia"
                         :name (u_5553 / name
                                       :op1 "Australia"))
            :op4 (u_5548 / country
                         :wiki "Germany"
                         :name (u_5549 / name
                                       :op1 "Germany"))
            :op5 (u_5544 / country
                         :wiki "State_of_Palestine"
                         :name (u_5545 / name
                                       :op1 "Palestine"))
            :op6 (u_5540 / country
                         :wiki "Indonesia"
                         :name (u_5541 / name
                                       :op1 "Indonesia"))
            :op7 (u_5536 / country
                         :wiki "Afghanistan"
                         :name (u_5537 / name
                                       :op1 "Afghanistan"))
            :op8 (u_5532 / country
                         :wiki "Syria"
                         :name (u_5533 / name
                                       :op1 "Syria"))
            :op9 (u_5528 / country
                         :wiki "Israel"
                         :name (u_5529 / name
                                       :op1 "Israel"))
            :op10 (u_5524 / country
                          :wiki "Malaysia"
                          :name (u_5525 / name
                                        :op1 "Malaysia"))
            :op11 (u_5520 / country
                          :wiki "Egypt"
                          :name (u_5521 / name
                                        :op1 "Egypt"))
            :op12 (u_5516 / country
                          :wiki "Vietnam"
                          :name (u_5517 / name
                                        :op1 "Vietnam"))
            :op13 (u_5512 / country
                          :wiki "India"
                          :name (u_5513 / name
                                        :op1 "India"))
            :op14 (u_5508 / country
                          :wiki "Brazil"
                          :name (u_5509 / name
                                        :op1 "Brazil"))
            :op15 (u_5504 / country
                          :wiki "Iran"
                          :name (u_5505 / name
                                        :op1 "Iran"))))

# ::snt She visited the Philippines, Singapore, Japan, Colombia, Vietnam, North Korea, France, Saudi Arabia, Britain, Jordan, Pakistan, Malaysia, Haiti, Myanmar, Syria and Zimbabwe.
# ::tree template(coord_16(philippines,singapore,japan,Colombia,vietnam,north_korea,france,saudi_arabia,britain,Jordan,pakistan,malaysia,Haiti,myanmar,syria,Zimbabwe))
# ::id long_lists_76
# ::suppl long_lists_76
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Philippines"
                    :name (n / name
                             :op1 "Philippines"))
            :op2 (u_5620 / country
                         :wiki "Singapore"
                         :name (u_5621 / name
                                       :op1 "Singapore"))
            :op3 (u_5616 / country
                         :wiki "Japan"
                         :name (u_5617 / name
                                       :op1 "Japan"))
            :op4 (u_5612 / country
                         :wiki "Colombia"
                         :name (u_5613 / name
                                       :op1 "Colombia"))
            :op5 (u_5608 / country
                         :wiki "Vietnam"
                         :name (u_5609 / name
                                       :op1 "Vietnam"))
            :op6 (u_5604 / country
                         :wiki "North_Korea"
                         :name (u_5605 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op7 (u_5600 / country
                         :wiki "France"
                         :name (u_5601 / name
                                       :op1 "France"))
            :op8 (u_5595 / country
                         :wiki "Saudi_Arabia"
                         :name (u_5596 / name
                                       :op1 "Saudi"
                                       :op2 "Arabia"))
            :op9 (u_5591 / country
                         :wiki "United_Kingdom"
                         :name (u_5592 / name
                                       :op1 "Britain"))
            :op10 (u_5586 / country
                          :wiki "Jordan"
                          :name (u_5587 / name
                                        :op1 "Jordan"))
            :op11 (u_5582 / country
                          :wiki "Pakistan"
                          :name (u_5583 / name
                                        :op1 "Pakistan"))
            :op12 (u_5578 / country
                          :wiki "Malaysia"
                          :name (u_5579 / name
                                        :op1 "Malaysia"))
            :op13 (u_5574 / country
                          :wiki "Haiti"
                          :name (u_5575 / name
                                        :op1 "Haiti"))
            :op14 (u_5570 / country
                          :wiki "Myanmar"
                          :name (u_5571 / name
                                        :op1 "Myanmar"))
            :op15 (u_5566 / country
                          :wiki "Syria"
                          :name (u_5567 / name
                                        :op1 "Syria"))
            :op16 (u_5562 / country
                          :wiki "Zimbabwe"
                          :name (u_5563 / name
                                        :op1 "Zimbabwe"))))

# ::snt She visited Iraq, Japan, Brazil, Australia, Estonia, Afghanistan, Germany, Spain, Britain, Colombia, Palestine, Indonesia, Jordan, South Korea, Malaysia, Haiti and Laos.
# ::tree template(coord_17(iraq,japan,brazil,australia,Estonia,afghanistan,germany,spain,britain,Colombia,palestine,indonesia,Jordan,south_korea,malaysia,Haiti,laos))
# ::id long_lists_77
# ::suppl long_lists_77
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Iraq"
                    :name (n / name
                             :op1 "Iraq"))
            :op2 (u_5687 / country
                         :wiki "Japan"
                         :name (u_5688 / name
                                       :op1 "Japan"))
            :op3 (u_5683 / country
                         :wiki "Brazil"
                         :name (u_5684 / name
                                       :op1 "Brazil"))
            :op4 (u_5679 / country
                         :wiki "Australia"
                         :name (u_5680 / name
                                       :op1 "Australia"))
            :op5 (u_5675 / country
                         :wiki "Estonia"
                         :name (u_5676 / name
                                       :op1 "Estonia"))
            :op6 (u_5671 / country
                         :wiki "Afghanistan"
                         :name (u_5672 / name
                                       :op1 "Afghanistan"))
            :op7 (u_5667 / country
                         :wiki "Germany"
                         :name (u_5668 / name
                                       :op1 "Germany"))
            :op8 (u_5663 / country
                         :wiki "Spain"
                         :name (u_5664 / name
                                       :op1 "Spain"))
            :op9 (u_5659 / country
                         :wiki "United_Kingdom"
                         :name (u_5660 / name
                                       :op1 "Britain"))
            :op10 (u_5655 / country
                          :wiki "Colombia"
                          :name (u_5656 / name
                                        :op1 "Colombia"))
            :op11 (u_5651 / country
                          :wiki "State_of_Palestine"
                          :name (u_5652 / name
                                        :op1 "Palestine"))
            :op12 (u_5647 / country
                          :wiki "Indonesia"
                          :name (u_5648 / name
                                        :op1 "Indonesia"))
            :op13 (u_5643 / country
                          :wiki "Jordan"
                          :name (u_5644 / name
                                        :op1 "Jordan"))
            :op14 (u_5639 / country
                          :wiki "South_Korea"
                          :name (u_5640 / name
                                        :op1 "South"
                                        :op2 "Korea"))
            :op15 (u_5635 / country
                          :wiki "Malaysia"
                          :name (u_5636 / name
                                        :op1 "Malaysia"))
            :op16 (u_5630 / country
                          :wiki "Haiti"
                          :name (u_5631 / name
                                        :op1 "Haiti"))
            :op17 (u_5626 / country
                          :wiki "Laos"
                          :name (u_5627 / name
                                        :op1 "Laos"))))

# ::snt She visited Russia, Malaysia, Haiti, South Korea, Canada, Iraq, Palestine, Iran, Britain, the Philippines, Germany, Jordan, Israel, Japan, Spain, the United States, Vietnam and South Africa.
# ::tree template(coord_18(russia,malaysia,Haiti,south_korea,canada,iraq,palestine,iran,britain,philippines,germany,Jordan,israel,japan,spain,united_states,vietnam,south_africa))
# ::id long_lists_78
# ::suppl long_lists_78
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Russia"
                    :name (n / name
                             :op1 "Russia"))
            :op2 (u_5760 / country
                         :wiki "Malaysia"
                         :name (u_5761 / name
                                       :op1 "Malaysia"))
            :op3 (u_5756 / country
                         :wiki "Haiti"
                         :name (u_5757 / name
                                       :op1 "Haiti"))
            :op4 (u_5752 / country
                         :wiki "South_Korea"
                         :name (u_5753 / name
                                       :op1 "South"
                                       :op2 "Korea"))
            :op5 (u_5748 / country
                         :wiki "Canada"
                         :name (u_5749 / name
                                       :op1 "Canada"))
            :op6 (u_5743 / country
                         :wiki "Iraq"
                         :name (u_5744 / name
                                       :op1 "Iraq"))
            :op7 (u_5739 / country
                         :wiki "State_of_Palestine"
                         :name (u_5740 / name
                                       :op1 "Palestine"))
            :op8 (u_5735 / country
                         :wiki "Iran"
                         :name (u_5736 / name
                                       :op1 "Iran"))
            :op9 (u_5731 / country
                         :wiki "United_Kingdom"
                         :name (u_5732 / name
                                       :op1 "Britain"))
            :op10 (u_5727 / country
                          :wiki "Philippines"
                          :name (u_5728 / name
                                        :op1 "Philippines"))
            :op11 (u_5723 / country
                          :wiki "Germany"
                          :name (u_5724 / name
                                        :op1 "Germany"))
            :op12 (u_5719 / country
                          :wiki "Jordan"
                          :name (u_5720 / name
                                        :op1 "Jordan"))
            :op13 (u_5715 / country
                          :wiki "Israel"
                          :name (u_5716 / name
                                        :op1 "Israel"))
            :op14 (u_5711 / country
                          :wiki "Japan"
                          :name (u_5712 / name
                                        :op1 "Japan"))
            :op15 (u_5707 / country
                          :wiki "Spain"
                          :name (u_5708 / name
                                        :op1 "Spain"))
            :op16 (u_5703 / country
                          :wiki "United_States"
                          :name (u_5704 / name
                                        :op1 "United"
                                        :op2 "States"))
            :op17 (u_5699 / country
                          :wiki "Vietnam"
                          :name (u_5700 / name
                                        :op1 "Vietnam"))
            :op18 (u_5694 / country
                          :wiki "South_Africa"
                          :name (u_5695 / name
                                        :op1 "South"
                                        :op2 "Africa"))))

# ::snt She visited India, North Korea, Brazil, Spain, Thailand, the Philippines, Myanmar, Syria, Italy, Germany, Iran, Israel, Libya, Singapore, Egypt, France, Pakistan, Zimbabwe and Jordan.
# ::tree template(coord_19(india,north_korea,brazil,spain,thailand,philippines,myanmar,syria,italy,germany,iran,israel,libya,singapore,egypt,france,pakistan,Zimbabwe,Jordan))
# ::id long_lists_79
# ::suppl long_lists_79
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "India"
                    :name (n / name
                             :op1 "India"))
            :op2 (u_5835 / country
                         :wiki "North_Korea"
                         :name (u_5836 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op3 (u_5831 / country
                         :wiki "Brazil"
                         :name (u_5832 / name
                                       :op1 "Brazil"))
            :op4 (u_5826 / country
                         :wiki "Spain"
                         :name (u_5827 / name
                                       :op1 "Spain"))
            :op5 (u_5822 / country
                         :wiki "Thailand"
                         :name (u_5823 / name
                                       :op1 "Thailand"))
            :op6 (u_5818 / country
                         :wiki "Philippines"
                         :name (u_5819 / name
                                       :op1 "Philippines"))
            :op7 (u_5814 / country
                         :wiki "Myanmar"
                         :name (u_5815 / name
                                       :op1 "Myanmar"))
            :op8 (u_5810 / country
                         :wiki "Syria"
                         :name (u_5811 / name
                                       :op1 "Syria"))
            :op9 (u_5806 / country
                         :wiki "Italy"
                         :name (u_5807 / name
                                       :op1 "Italy"))
            :op10 (u_5802 / country
                          :wiki "Germany"
                          :name (u_5803 / name
                                        :op1 "Germany"))
            :op11 (u_5798 / country
                          :wiki "Iran"
                          :name (u_5799 / name
                                        :op1 "Iran"))
            :op12 (u_5794 / country
                          :wiki "Israel"
                          :name (u_5795 / name
                                        :op1 "Israel"))
            :op13 (u_5790 / country
                          :wiki "Libya"
                          :name (u_5791 / name
                                        :op1 "Libya"))
            :op14 (u_5786 / country
                          :wiki "Singapore"
                          :name (u_5787 / name
                                        :op1 "Singapore"))
            :op15 (u_5782 / country
                          :wiki "Egypt"
                          :name (u_5783 / name
                                        :op1 "Egypt"))
            :op16 (u_5778 / country
                          :wiki "France"
                          :name (u_5779 / name
                                        :op1 "France"))
            :op17 (u_5774 / country
                          :wiki "Pakistan"
                          :name (u_5775 / name
                                        :op1 "Pakistan"))
            :op18 (u_5770 / country
                          :wiki "Zimbabwe"
                          :name (u_5771 / name
                                        :op1 "Zimbabwe"))
            :op19 (u_5766 / country
                          :wiki "Jordan"
                          :name (u_5767 / name
                                        :op1 "Jordan"))))

# ::snt She visited Britain, Myanmar, Palestine, Egypt, South Korea, the Philippines, North Korea, Syria, Iran, Laos, Germany, Pakistan, Japan, India, China, Israel, Colombia, Estonia, Saudi Arabia and the United States.
# ::tree template(coord_20(britain,myanmar,palestine,egypt,south_korea,philippines,north_korea,syria,iran,laos,germany,pakistan,japan,india,china,israel,Colombia,Estonia,saudi_arabia,united_states))
# ::id long_lists_80
# ::suppl long_lists_80
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "United_Kingdom"
                    :name (n / name
                             :op1 "Britain"))
            :op2 (u_5917 / country
                         :wiki "Myanmar"
                         :name (u_5918 / name
                                       :op1 "Myanmar"))
            :op3 (u_5913 / country
                         :wiki "State_of_Palestine"
                         :name (u_5914 / name
                                       :op1 "Palestine"))
            :op4 (u_5909 / country
                         :wiki "Egypt"
                         :name (u_5910 / name
                                       :op1 "Egypt"))
            :op5 (u_5905 / country
                         :wiki "South_Korea"
                         :name (u_5906 / name
                                       :op1 "South"
                                       :op2 "Korea"))
            :op6 (u_5901 / country
                         :wiki "Philippines"
                         :name (u_5902 / name
                                       :op1 "Philippines"))
            :op7 (u_5896 / country
                         :wiki "North_Korea"
                         :name (u_5897 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op8 (u_5892 / country
                         :wiki "Syria"
                         :name (u_5893 / name
                                       :op1 "Syria"))
            :op9 (u_5887 / country
                         :wiki "Iran"
                         :name (u_5888 / name
                                       :op1 "Iran"))
            :op10 (u_5883 / country
                          :wiki "Laos"
                          :name (u_5884 / name
                                        :op1 "Laos"))
            :op11 (u_5879 / country
                          :wiki "Germany"
                          :name (u_5880 / name
                                        :op1 "Germany"))
            :op12 (u_5875 / country
                          :wiki "Pakistan"
                          :name (u_5876 / name
                                        :op1 "Pakistan"))
            :op13 (u_5871 / country
                          :wiki "Japan"
                          :name (u_5872 / name
                                        :op1 "Japan"))
            :op14 (u_5867 / country
                          :wiki "India"
                          :name (u_5868 / name
                                        :op1 "India"))
            :op15 (u_5863 / country
                          :wiki "China"
                          :name (u_5864 / name
                                        :op1 "China"))
            :op16 (u_5859 / country
                          :wiki "Israel"
                          :name (u_5860 / name
                                        :op1 "Israel"))
            :op17 (u_5855 / country
                          :wiki "Colombia"
                          :name (u_5856 / name
                                        :op1 "Colombia"))
            :op18 (u_5851 / country
                          :wiki "Estonia"
                          :name (u_5852 / name
                                        :op1 "Estonia"))
            :op19 (u_5847 / country
                          :wiki "Saudi_Arabia"
                          :name (u_5848 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op20 (u_5843 / country
                          :wiki "United_States"
                          :name (u_5844 / name
                                        :op1 "United"
                                        :op2 "States"))))

# ::snt She visited Syria, Haiti, Germany, Palestine, North Korea, the United States, Malaysia, India, Laos, Estonia, Brazil, Japan, Myanmar, France, Afghanistan, Iran, Britain, Spain, Pakistan, Thailand and South Africa.
# ::tree template(coord_21(syria,Haiti,germany,palestine,north_korea,united_states,malaysia,india,laos,Estonia,brazil,japan,myanmar,france,afghanistan,iran,britain,spain,pakistan,thailand,south_africa))
# ::id long_lists_81
# ::suppl long_lists_81
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Syria"
                    :name (n / name
                             :op1 "Syria"))
            :op2 (u_6002 / country
                         :wiki "Haiti"
                         :name (u_6003 / name
                                       :op1 "Haiti"))
            :op3 (u_5998 / country
                         :wiki "Germany"
                         :name (u_5999 / name
                                       :op1 "Germany"))
            :op4 (u_5994 / country
                         :wiki "State_of_Palestine"
                         :name (u_5995 / name
                                       :op1 "Palestine"))
            :op5 (u_5990 / country
                         :wiki "North_Korea"
                         :name (u_5991 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op6 (u_5986 / country
                         :wiki "United_States"
                         :name (u_5987 / name
                                       :op1 "United"
                                       :op2 "States"))
            :op7 (u_5981 / country
                         :wiki "Malaysia"
                         :name (u_5982 / name
                                       :op1 "Malaysia"))
            :op8 (u_5976 / country
                         :wiki "India"
                         :name (u_5977 / name
                                       :op1 "India"))
            :op9 (u_5972 / country
                         :wiki "Laos"
                         :name (u_5973 / name
                                       :op1 "Laos"))
            :op10 (u_5968 / country
                          :wiki "Estonia"
                          :name (u_5969 / name
                                        :op1 "Estonia"))
            :op11 (u_5964 / country
                          :wiki "Brazil"
                          :name (u_5965 / name
                                        :op1 "Brazil"))
            :op12 (u_5960 / country
                          :wiki "Japan"
                          :name (u_5961 / name
                                        :op1 "Japan"))
            :op13 (u_5956 / country
                          :wiki "Myanmar"
                          :name (u_5957 / name
                                        :op1 "Myanmar"))
            :op14 (u_5952 / country
                          :wiki "France"
                          :name (u_5953 / name
                                        :op1 "France"))
            :op15 (u_5948 / country
                          :wiki "Afghanistan"
                          :name (u_5949 / name
                                        :op1 "Afghanistan"))
            :op16 (u_5944 / country
                          :wiki "Iran"
                          :name (u_5945 / name
                                        :op1 "Iran"))
            :op17 (u_5940 / country
                          :wiki "United_Kingdom"
                          :name (u_5941 / name
                                        :op1 "Britain"))
            :op18 (u_5936 / country
                          :wiki "Spain"
                          :name (u_5937 / name
                                        :op1 "Spain"))
            :op19 (u_5932 / country
                          :wiki "Pakistan"
                          :name (u_5933 / name
                                        :op1 "Pakistan"))
            :op20 (u_5928 / country
                          :wiki "Thailand"
                          :name (u_5929 / name
                                        :op1 "Thailand"))
            :op21 (u_5924 / country
                          :wiki "South_Africa"
                          :name (u_5925 / name
                                        :op1 "South"
                                        :op2 "Africa"))))

# ::snt She visited Libya, the Philippines, Zimbabwe, Afghanistan, Canada, Britain, Haiti, the United States, Syria, South Africa, China, Saudi Arabia, Malaysia, Palestine, France, Spain, India, Iraq, Thailand, North Korea, Pakistan and Singapore.
# ::tree template(coord_22(libya,philippines,Zimbabwe,afghanistan,canada,britain,Haiti,united_states,syria,south_africa,china,saudi_arabia,malaysia,palestine,france,spain,india,iraq,thailand,north_korea,pakistan,singapore))
# ::id long_lists_82
# ::suppl long_lists_82
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Libya"
                    :name (n / name
                             :op1 "Libya"))
            :op2 (u_6092 / country
                         :wiki "Philippines"
                         :name (u_6093 / name
                                       :op1 "Philippines"))
            :op3 (u_6088 / country
                         :wiki "Zimbabwe"
                         :name (u_6089 / name
                                       :op1 "Zimbabwe"))
            :op4 (u_6084 / country
                         :wiki "Afghanistan"
                         :name (u_6085 / name
                                       :op1 "Afghanistan"))
            :op5 (u_6080 / country
                         :wiki "Canada"
                         :name (u_6081 / name
                                       :op1 "Canada"))
            :op6 (u_6076 / country
                         :wiki "United_Kingdom"
                         :name (u_6077 / name
                                       :op1 "Britain"))
            :op7 (u_6072 / country
                         :wiki "Haiti"
                         :name (u_6073 / name
                                       :op1 "Haiti"))
            :op8 (u_6068 / country
                         :wiki "United_States"
                         :name (u_6069 / name
                                       :op1 "United"
                                       :op2 "States"))
            :op9 (u_6064 / country
                         :wiki "Syria"
                         :name (u_6065 / name
                                       :op1 "Syria"))
            :op10 (u_6059 / country
                          :wiki "South_Africa"
                          :name (u_6060 / name
                                        :op1 "South"
                                        :op2 "Africa"))
            :op11 (u_6055 / country
                          :wiki "China"
                          :name (u_6056 / name
                                        :op1 "China"))
            :op12 (u_6050 / country
                          :wiki "Saudi_Arabia"
                          :name (u_6051 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op13 (u_6046 / country
                          :wiki "Malaysia"
                          :name (u_6047 / name
                                        :op1 "Malaysia"))
            :op14 (u_6041 / country
                          :wiki "State_of_Palestine"
                          :name (u_6042 / name
                                        :op1 "Palestine"))
            :op15 (u_6037 / country
                          :wiki "France"
                          :name (u_6038 / name
                                        :op1 "France"))
            :op16 (u_6033 / country
                          :wiki "Spain"
                          :name (u_6034 / name
                                        :op1 "Spain"))
            :op17 (u_6029 / country
                          :wiki "India"
                          :name (u_6030 / name
                                        :op1 "India"))
            :op18 (u_6025 / country
                          :wiki "Iraq"
                          :name (u_6026 / name
                                        :op1 "Iraq"))
            :op19 (u_6021 / country
                          :wiki "Thailand"
                          :name (u_6022 / name
                                        :op1 "Thailand"))
            :op20 (u_6017 / country
                          :wiki "North_Korea"
                          :name (u_6018 / name
                                        :op1 "North"
                                        :op2 "Korea"))
            :op21 (u_6013 / country
                          :wiki "Pakistan"
                          :name (u_6014 / name
                                        :op1 "Pakistan"))
            :op22 (u_6008 / country
                          :wiki "Singapore"
                          :name (u_6009 / name
                                        :op1 "Singapore"))))

# ::snt She visited Pakistan, Germany, Singapore, Canada, Russia, China, Japan, Jordan, India, Vietnam, Britain, South Korea, South Africa, Estonia, Libya, the Philippines, Colombia, Syria, Afghanistan, Saudi Arabia, the United States, Italy and Myanmar.
# ::tree template(coord_23(pakistan,germany,singapore,canada,russia,china,japan,Jordan,india,vietnam,britain,south_korea,south_africa,Estonia,libya,philippines,Colombia,syria,afghanistan,saudi_arabia,united_states,italy,myanmar))
# ::id long_lists_83
# ::suppl long_lists_83
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Pakistan"
                    :name (n / name
                             :op1 "Pakistan"))
            :op2 (u_6186 / country
                         :wiki "Germany"
                         :name (u_6187 / name
                                       :op1 "Germany"))
            :op3 (u_6182 / country
                         :wiki "Singapore"
                         :name (u_6183 / name
                                       :op1 "Singapore"))
            :op4 (u_6178 / country
                         :wiki "Canada"
                         :name (u_6179 / name
                                       :op1 "Canada"))
            :op5 (u_6174 / country
                         :wiki "Russia"
                         :name (u_6175 / name
                                       :op1 "Russia"))
            :op6 (u_6170 / country
                         :wiki "China"
                         :name (u_6171 / name
                                       :op1 "China"))
            :op7 (u_6166 / country
                         :wiki "Japan"
                         :name (u_6167 / name
                                       :op1 "Japan"))
            :op8 (u_6162 / country
                         :wiki "Jordan"
                         :name (u_6163 / name
                                       :op1 "Jordan"))
            :op9 (u_6158 / country
                         :wiki "India"
                         :name (u_6159 / name
                                       :op1 "India"))
            :op10 (u_6154 / country
                          :wiki "Vietnam"
                          :name (u_6155 / name
                                        :op1 "Vietnam"))
            :op11 (u_6150 / country
                          :wiki "United_Kingdom"
                          :name (u_6151 / name
                                        :op1 "Britain"))
            :op12 (u_6146 / country
                          :wiki "South_Korea"
                          :name (u_6147 / name
                                        :op1 "South"
                                        :op2 "Korea"))
            :op13 (u_6142 / country
                          :wiki "South_Africa"
                          :name (u_6143 / name
                                        :op1 "South"
                                        :op2 "Africa"))
            :op14 (u_6137 / country
                          :wiki "Estonia"
                          :name (u_6138 / name
                                        :op1 "Estonia"))
            :op15 (u_6132 / country
                          :wiki "Libya"
                          :name (u_6133 / name
                                        :op1 "Libya"))
            :op16 (u_6128 / country
                          :wiki "Philippines"
                          :name (u_6129 / name
                                        :op1 "Philippines"))
            :op17 (u_6124 / country
                          :wiki "Colombia"
                          :name (u_6125 / name
                                        :op1 "Colombia"))
            :op18 (u_6120 / country
                          :wiki "Syria"
                          :name (u_6121 / name
                                        :op1 "Syria"))
            :op19 (u_6116 / country
                          :wiki "Afghanistan"
                          :name (u_6117 / name
                                        :op1 "Afghanistan"))
            :op20 (u_6112 / country
                          :wiki "Saudi_Arabia"
                          :name (u_6113 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op21 (u_6108 / country
                          :wiki "United_States"
                          :name (u_6109 / name
                                        :op1 "United"
                                        :op2 "States"))
            :op22 (u_6103 / country
                          :wiki "Italy"
                          :name (u_6104 / name
                                        :op1 "Italy"))
            :op23 (u_6098 / country
                          :wiki "Myanmar"
                          :name (u_6099 / name
                                        :op1 "Myanmar"))))

# ::snt She visited Spain, China, Vietnam, Pakistan, Canada, Palestine, Egypt, Brazil, Myanmar, South Africa, Laos, Italy, Jordan, the United States, India, Saudi Arabia, North Korea, Israel, Afghanistan, Germany, Iran, Thailand, Colombia and Indonesia.
# ::tree template(coord_24(spain,china,vietnam,pakistan,canada,palestine,egypt,brazil,myanmar,south_africa,laos,italy,Jordan,united_states,india,saudi_arabia,north_korea,israel,afghanistan,germany,iran,thailand,Colombia,indonesia))
# ::id long_lists_84
# ::suppl long_lists_84
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Spain"
                    :name (n / name
                             :op1 "Spain"))
            :op2 (u_6284 / country
                         :wiki "China"
                         :name (u_6285 / name
                                       :op1 "China"))
            :op3 (u_6280 / country
                         :wiki "Vietnam"
                         :name (u_6281 / name
                                       :op1 "Vietnam"))
            :op4 (u_6276 / country
                         :wiki "Pakistan"
                         :name (u_6277 / name
                                       :op1 "Pakistan"))
            :op5 (u_6272 / country
                         :wiki "Canada"
                         :name (u_6273 / name
                                       :op1 "Canada"))
            :op6 (u_6268 / country
                         :wiki "State_of_Palestine"
                         :name (u_6269 / name
                                       :op1 "Palestine"))
            :op7 (u_6264 / country
                         :wiki "Egypt"
                         :name (u_6265 / name
                                       :op1 "Egypt"))
            :op8 (u_6260 / country
                         :wiki "Brazil"
                         :name (u_6261 / name
                                       :op1 "Brazil"))
            :op9 (u_6256 / country
                         :wiki "Myanmar"
                         :name (u_6257 / name
                                       :op1 "Myanmar"))
            :op10 (u_6252 / country
                          :wiki "South_Africa"
                          :name (u_6253 / name
                                        :op1 "South"
                                        :op2 "Africa"))
            :op11 (u_6248 / country
                          :wiki "Laos"
                          :name (u_6249 / name
                                        :op1 "Laos"))
            :op12 (u_6243 / country
                          :wiki "Italy"
                          :name (u_6244 / name
                                        :op1 "Italy"))
            :op13 (u_6239 / country
                          :wiki "Jordan"
                          :name (u_6240 / name
                                        :op1 "Jordan"))
            :op14 (u_6235 / country
                          :wiki "United_States"
                          :name (u_6236 / name
                                        :op1 "United"
                                        :op2 "States"))
            :op15 (u_6231 / country
                          :wiki "India"
                          :name (u_6232 / name
                                        :op1 "India"))
            :op16 (u_6226 / country
                          :wiki "Saudi_Arabia"
                          :name (u_6227 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op17 (u_6222 / country
                          :wiki "North_Korea"
                          :name (u_6223 / name
                                        :op1 "North"
                                        :op2 "Korea"))
            :op18 (u_6217 / country
                          :wiki "Israel"
                          :name (u_6218 / name
                                        :op1 "Israel"))
            :op19 (u_6212 / country
                          :wiki "Afghanistan"
                          :name (u_6213 / name
                                        :op1 "Afghanistan"))
            :op20 (u_6208 / country
                          :wiki "Germany"
                          :name (u_6209 / name
                                        :op1 "Germany"))
            :op21 (u_6204 / country
                          :wiki "Iran"
                          :name (u_6205 / name
                                        :op1 "Iran"))
            :op22 (u_6200 / country
                          :wiki "Thailand"
                          :name (u_6201 / name
                                        :op1 "Thailand"))
            :op23 (u_6196 / country
                          :wiki "Colombia"
                          :name (u_6197 / name
                                        :op1 "Colombia"))
            :op24 (u_6192 / country
                          :wiki "Indonesia"
                          :name (u_6193 / name
                                        :op1 "Indonesia"))))

# ::snt She visited Australia, Laos, Russia, Israel, Myanmar, South Africa, Singapore, Japan, Libya, South Korea, Britain, Afghanistan, Canada, Thailand, the Philippines, India, Iraq, Haiti, Syria, Spain, Zimbabwe, Indonesia, France, Palestine and Germany.
# ::tree template(coord_25(australia,laos,russia,israel,myanmar,south_africa,singapore,japan,libya,south_korea,britain,afghanistan,canada,thailand,philippines,india,iraq,Haiti,syria,spain,Zimbabwe,indonesia,france,palestine,germany))
# ::id long_lists_85
# ::suppl long_lists_85
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Australia"
                    :name (n / name
                             :op1 "Australia"))
            :op2 (u_6384 / country
                         :wiki "Laos"
                         :name (u_6385 / name
                                       :op1 "Laos"))
            :op3 (u_6380 / country
                         :wiki "Russia"
                         :name (u_6381 / name
                                       :op1 "Russia"))
            :op4 (u_6376 / country
                         :wiki "Israel"
                         :name (u_6377 / name
                                       :op1 "Israel"))
            :op5 (u_6372 / country
                         :wiki "Myanmar"
                         :name (u_6373 / name
                                       :op1 "Myanmar"))
            :op6 (u_6368 / country
                         :wiki "South_Africa"
                         :name (u_6369 / name
                                       :op1 "South"
                                       :op2 "Africa"))
            :op7 (u_6364 / country
                         :wiki "Singapore"
                         :name (u_6365 / name
                                       :op1 "Singapore"))
            :op8 (u_6359 / country
                         :wiki "Japan"
                         :name (u_6360 / name
                                       :op1 "Japan"))
            :op9 (u_6355 / country
                         :wiki "Libya"
                         :name (u_6356 / name
                                       :op1 "Libya"))
            :op10 (u_6351 / country
                          :wiki "South_Korea"
                          :name (u_6352 / name
                                        :op1 "South"
                                        :op2 "Korea"))
            :op11 (u_6347 / country
                          :wiki "United_Kingdom"
                          :name (u_6348 / name
                                        :op1 "Britain"))
            :op12 (u_6342 / country
                          :wiki "Afghanistan"
                          :name (u_6343 / name
                                        :op1 "Afghanistan"))
            :op13 (u_6338 / country
                          :wiki "Canada"
                          :name (u_6339 / name
                                        :op1 "Canada"))
            :op14 (u_6334 / country
                          :wiki "Thailand"
                          :name (u_6335 / name
                                        :op1 "Thailand"))
            :op15 (u_6330 / country
                          :wiki "Philippines"
                          :name (u_6331 / name
                                        :op1 "Philippines"))
            :op16 (u_6326 / country
                          :wiki "India"
                          :name (u_6327 / name
                                        :op1 "India"))
            :op17 (u_6322 / country
                          :wiki "Iraq"
                          :name (u_6323 / name
                                        :op1 "Iraq"))
            :op18 (u_6318 / country
                          :wiki "Haiti"
                          :name (u_6319 / name
                                        :op1 "Haiti"))
            :op19 (u_6314 / country
                          :wiki "Syria"
                          :name (u_6315 / name
                                        :op1 "Syria"))
            :op20 (u_6310 / country
                          :wiki "Spain"
                          :name (u_6311 / name
                                        :op1 "Spain"))
            :op21 (u_6306 / country
                          :wiki "Zimbabwe"
                          :name (u_6307 / name
                                        :op1 "Zimbabwe"))
            :op22 (u_6302 / country
                          :wiki "Indonesia"
                          :name (u_6303 / name
                                        :op1 "Indonesia"))
            :op23 (u_6298 / country
                          :wiki "France"
                          :name (u_6299 / name
                                        :op1 "France"))
            :op24 (u_6294 / country
                          :wiki "State_of_Palestine"
                          :name (u_6295 / name
                                        :op1 "Palestine"))
            :op25 (u_6290 / country
                          :wiki "Germany"
                          :name (u_6291 / name
                                        :op1 "Germany"))))

# ::snt She visited France, Indonesia, Libya, Vietnam, South Korea, Germany, Spain, Jordan, Colombia, Haiti, Singapore, Thailand, Pakistan, the United States, Russia, Canada, Brazil, Japan, Syria, Myanmar, South Africa, Egypt, Afghanistan, North Korea, Israel and China.
# ::tree template(coord_26(france,indonesia,libya,vietnam,south_korea,germany,spain,Jordan,Colombia,Haiti,singapore,thailand,pakistan,united_states,russia,canada,brazil,japan,syria,myanmar,south_africa,egypt,afghanistan,north_korea,israel,china))
# ::id long_lists_86
# ::suppl long_lists_86
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "France"
                    :name (n / name
                             :op1 "France"))
            :op2 (u_6490 / country
                         :wiki "Indonesia"
                         :name (u_6491 / name
                                       :op1 "Indonesia"))
            :op3 (u_6486 / country
                         :wiki "Libya"
                         :name (u_6487 / name
                                       :op1 "Libya"))
            :op4 (u_6482 / country
                         :wiki "Vietnam"
                         :name (u_6483 / name
                                       :op1 "Vietnam"))
            :op5 (u_6478 / country
                         :wiki "South_Korea"
                         :name (u_6479 / name
                                       :op1 "South"
                                       :op2 "Korea"))
            :op6 (u_6474 / country
                         :wiki "Germany"
                         :name (u_6475 / name
                                       :op1 "Germany"))
            :op7 (u_6469 / country
                         :wiki "Spain"
                         :name (u_6470 / name
                                       :op1 "Spain"))
            :op8 (u_6465 / country
                         :wiki "Jordan"
                         :name (u_6466 / name
                                       :op1 "Jordan"))
            :op9 (u_6461 / country
                         :wiki "Colombia"
                         :name (u_6462 / name
                                       :op1 "Colombia"))
            :op10 (u_6457 / country
                          :wiki "Haiti"
                          :name (u_6458 / name
                                        :op1 "Haiti"))
            :op11 (u_6453 / country
                          :wiki "Singapore"
                          :name (u_6454 / name
                                        :op1 "Singapore"))
            :op12 (u_6449 / country
                          :wiki "Thailand"
                          :name (u_6450 / name
                                        :op1 "Thailand"))
            :op13 (u_6445 / country
                          :wiki "Pakistan"
                          :name (u_6446 / name
                                        :op1 "Pakistan"))
            :op14 (u_6441 / country
                          :wiki "United_States"
                          :name (u_6442 / name
                                        :op1 "United"
                                        :op2 "States"))
            :op15 (u_6437 / country
                          :wiki "Russia"
                          :name (u_6438 / name
                                        :op1 "Russia"))
            :op16 (u_6432 / country
                          :wiki "Canada"
                          :name (u_6433 / name
                                        :op1 "Canada"))
            :op17 (u_6428 / country
                          :wiki "Brazil"
                          :name (u_6429 / name
                                        :op1 "Brazil"))
            :op18 (u_6424 / country
                          :wiki "Japan"
                          :name (u_6425 / name
                                        :op1 "Japan"))
            :op19 (u_6420 / country
                          :wiki "Syria"
                          :name (u_6421 / name
                                        :op1 "Syria"))
            :op20 (u_6416 / country
                          :wiki "Myanmar"
                          :name (u_6417 / name
                                        :op1 "Myanmar"))
            :op21 (u_6412 / country
                          :wiki "South_Africa"
                          :name (u_6413 / name
                                        :op1 "South"
                                        :op2 "Africa"))
            :op22 (u_6408 / country
                          :wiki "Egypt"
                          :name (u_6409 / name
                                        :op1 "Egypt"))
            :op23 (u_6403 / country
                          :wiki "Afghanistan"
                          :name (u_6404 / name
                                        :op1 "Afghanistan"))
            :op24 (u_6399 / country
                          :wiki "North_Korea"
                          :name (u_6400 / name
                                        :op1 "North"
                                        :op2 "Korea"))
            :op25 (u_6395 / country
                          :wiki "Israel"
                          :name (u_6396 / name
                                        :op1 "Israel"))
            :op26 (u_6390 / country
                          :wiki "China"
                          :name (u_6391 / name
                                        :op1 "China"))))

# ::snt She visited Afghanistan, Italy, Jordan, Australia, Haiti, Spain, Palestine, Myanmar, Vietnam, France, Indonesia, Saudi Arabia, India, Estonia, the Philippines, Malaysia, the United States, China, South Korea, Iraq, Libya, Germany, South Africa, Canada, Britain, Brazil and Zimbabwe.
# ::tree template(coord_27(afghanistan,italy,Jordan,australia,Haiti,spain,palestine,myanmar,vietnam,france,indonesia,saudi_arabia,india,Estonia,philippines,malaysia,united_states,china,south_korea,iraq,libya,germany,south_africa,canada,britain,brazil,Zimbabwe))
# ::id long_lists_87
# ::suppl long_lists_87
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Afghanistan"
                    :name (n / name
                             :op1 "Afghanistan"))
            :op2 (u_6600 / country
                         :wiki "Italy"
                         :name (u_6601 / name
                                       :op1 "Italy"))
            :op3 (u_6596 / country
                         :wiki "Jordan"
                         :name (u_6597 / name
                                       :op1 "Jordan"))
            :op4 (u_6592 / country
                         :wiki "Australia"
                         :name (u_6593 / name
                                       :op1 "Australia"))
            :op5 (u_6588 / country
                         :wiki "Haiti"
                         :name (u_6589 / name
                                       :op1 "Haiti"))
            :op6 (u_6584 / country
                         :wiki "Spain"
                         :name (u_6585 / name
                                       :op1 "Spain"))
            :op7 (u_6580 / country
                         :wiki "State_of_Palestine"
                         :name (u_6581 / name
                                       :op1 "Palestine"))
            :op8 (u_6576 / country
                         :wiki "Myanmar"
                         :name (u_6577 / name
                                       :op1 "Myanmar"))
            :op9 (u_6572 / country
                         :wiki "Vietnam"
                         :name (u_6573 / name
                                       :op1 "Vietnam"))
            :op10 (u_6568 / country
                          :wiki "France"
                          :name (u_6569 / name
                                        :op1 "France"))
            :op11 (u_6564 / country
                          :wiki "Indonesia"
                          :name (u_6565 / name
                                        :op1 "Indonesia"))
            :op12 (u_6560 / country
                          :wiki "Saudi_Arabia"
                          :name (u_6561 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op13 (u_6556 / country
                          :wiki "India"
                          :name (u_6557 / name
                                        :op1 "India"))
            :op14 (u_6551 / country
                          :wiki "Estonia"
                          :name (u_6552 / name
                                        :op1 "Estonia"))
            :op15 (u_6547 / country
                          :wiki "Philippines"
                          :name (u_6548 / name
                                        :op1 "Philippines"))
            :op16 (u_6543 / country
                          :wiki "Malaysia"
                          :name (u_6544 / name
                                        :op1 "Malaysia"))
            :op17 (u_6539 / country
                          :wiki "United_States"
                          :name (u_6540 / name
                                        :op1 "United"
                                        :op2 "States"))
            :op18 (u_6535 / country
                          :wiki "China"
                          :name (u_6536 / name
                                        :op1 "China"))
            :op19 (u_6530 / country
                          :wiki "South_Korea"
                          :name (u_6531 / name
                                        :op1 "South"
                                        :op2 "Korea"))
            :op20 (u_6526 / country
                          :wiki "Iraq"
                          :name (u_6527 / name
                                        :op1 "Iraq"))
            :op21 (u_6521 / country
                          :wiki "Libya"
                          :name (u_6522 / name
                                        :op1 "Libya"))
            :op22 (u_6517 / country
                          :wiki "Germany"
                          :name (u_6518 / name
                                        :op1 "Germany"))
            :op23 (u_6513 / country
                          :wiki "South_Africa"
                          :name (u_6514 / name
                                        :op1 "South"
                                        :op2 "Africa"))
            :op24 (u_6509 / country
                          :wiki "Canada"
                          :name (u_6510 / name
                                        :op1 "Canada"))
            :op25 (u_6504 / country
                          :wiki "United_Kingdom"
                          :name (u_6505 / name
                                        :op1 "Britain"))
            :op26 (u_6500 / country
                          :wiki "Brazil"
                          :name (u_6501 / name
                                        :op1 "Brazil"))
            :op27 (u_6496 / country
                          :wiki "Zimbabwe"
                          :name (u_6497 / name
                                        :op1 "Zimbabwe"))))

# ::snt She visited Australia, South Korea, Palestine, Israel, Libya, North Korea, Egypt, India, Syria, Vietnam, Iran, Russia, Laos, Iraq, Spain, Jordan, Japan, Saudi Arabia, Germany, Brazil, Singapore, the United States, Italy, Britain, Zimbabwe, South Africa, France and Haiti.
# ::tree template(coord_28(australia,south_korea,palestine,israel,libya,north_korea,egypt,india,syria,vietnam,iran,russia,laos,iraq,spain,Jordan,japan,saudi_arabia,germany,brazil,singapore,united_states,italy,britain,Zimbabwe,south_africa,france,Haiti))
# ::id long_lists_88
# ::suppl long_lists_88
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Australia"
                    :name (n / name
                             :op1 "Australia"))
            :op2 (u_6715 / country
                         :wiki "South_Korea"
                         :name (u_6716 / name
                                       :op1 "South"
                                       :op2 "Korea"))
            :op3 (u_6711 / country
                         :wiki "State_of_Palestine"
                         :name (u_6712 / name
                                       :op1 "Palestine"))
            :op4 (u_6706 / country
                         :wiki "Israel"
                         :name (u_6707 / name
                                       :op1 "Israel"))
            :op5 (u_6702 / country
                         :wiki "Libya"
                         :name (u_6703 / name
                                       :op1 "Libya"))
            :op6 (u_6698 / country
                         :wiki "North_Korea"
                         :name (u_6699 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op7 (u_6694 / country
                         :wiki "Egypt"
                         :name (u_6695 / name
                                       :op1 "Egypt"))
            :op8 (u_6689 / country
                         :wiki "India"
                         :name (u_6690 / name
                                       :op1 "India"))
            :op9 (u_6685 / country
                         :wiki "Syria"
                         :name (u_6686 / name
                                       :op1 "Syria"))
            :op10 (u_6681 / country
                          :wiki "Vietnam"
                          :name (u_6682 / name
                                        :op1 "Vietnam"))
            :op11 (u_6677 / country
                          :wiki "Iran"
                          :name (u_6678 / name
                                        :op1 "Iran"))
            :op12 (u_6673 / country
                          :wiki "Russia"
                          :name (u_6674 / name
                                        :op1 "Russia"))
            :op13 (u_6669 / country
                          :wiki "Laos"
                          :name (u_6670 / name
                                        :op1 "Laos"))
            :op14 (u_6665 / country
                          :wiki "Iraq"
                          :name (u_6666 / name
                                        :op1 "Iraq"))
            :op15 (u_6661 / country
                          :wiki "Spain"
                          :name (u_6662 / name
                                        :op1 "Spain"))
            :op16 (u_6657 / country
                          :wiki "Jordan"
                          :name (u_6658 / name
                                        :op1 "Jordan"))
            :op17 (u_6653 / country
                          :wiki "Japan"
                          :name (u_6654 / name
                                        :op1 "Japan"))
            :op18 (u_6649 / country
                          :wiki "Saudi_Arabia"
                          :name (u_6650 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op19 (u_6645 / country
                          :wiki "Germany"
                          :name (u_6646 / name
                                        :op1 "Germany"))
            :op20 (u_6640 / country
                          :wiki "Brazil"
                          :name (u_6641 / name
                                        :op1 "Brazil"))
            :op21 (u_6636 / country
                          :wiki "Singapore"
                          :name (u_6637 / name
                                        :op1 "Singapore"))
            :op22 (u_6632 / country
                          :wiki "United_States"
                          :name (u_6633 / name
                                        :op1 "United"
                                        :op2 "States"))
            :op23 (u_6628 / country
                          :wiki "Italy"
                          :name (u_6629 / name
                                        :op1 "Italy"))
            :op24 (u_6623 / country
                          :wiki "United_Kingdom"
                          :name (u_6624 / name
                                        :op1 "Britain"))
            :op25 (u_6619 / country
                          :wiki "Zimbabwe"
                          :name (u_6620 / name
                                        :op1 "Zimbabwe"))
            :op26 (u_6615 / country
                          :wiki "South_Africa"
                          :name (u_6616 / name
                                        :op1 "South"
                                        :op2 "Africa"))
            :op27 (u_6611 / country
                          :wiki "France"
                          :name (u_6612 / name
                                        :op1 "France"))
            :op28 (u_6606 / country
                          :wiki "Haiti"
                          :name (u_6607 / name
                                        :op1 "Haiti"))))

# ::snt She visited Afghanistan, South Africa, Canada, North Korea, Saudi Arabia, the Philippines, Spain, Colombia, Britain, Myanmar, Haiti, Italy, Thailand, Iraq, Malaysia, Pakistan, Iran, Egypt, Brazil, China, Singapore, Estonia, Russia, South Korea, Palestine, Vietnam, Laos, Libya and India.
# ::tree template(coord_29(afghanistan,south_africa,canada,north_korea,saudi_arabia,philippines,spain,Colombia,britain,myanmar,Haiti,italy,thailand,iraq,malaysia,pakistan,iran,egypt,brazil,china,singapore,Estonia,russia,south_korea,palestine,vietnam,laos,libya,india))
# ::id long_lists_89
# ::suppl long_lists_89
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Afghanistan"
                    :name (n / name
                             :op1 "Afghanistan"))
            :op2 (u_6833 / country
                         :wiki "South_Africa"
                         :name (u_6834 / name
                                       :op1 "South"
                                       :op2 "Africa"))
            :op3 (u_6829 / country
                         :wiki "Canada"
                         :name (u_6830 / name
                                       :op1 "Canada"))
            :op4 (u_6824 / country
                         :wiki "North_Korea"
                         :name (u_6825 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op5 (u_6820 / country
                         :wiki "Saudi_Arabia"
                         :name (u_6821 / name
                                       :op1 "Saudi"
                                       :op2 "Arabia"))
            :op6 (u_6815 / country
                         :wiki "Philippines"
                         :name (u_6816 / name
                                       :op1 "Philippines"))
            :op7 (u_6810 / country
                         :wiki "Spain"
                         :name (u_6811 / name
                                       :op1 "Spain"))
            :op8 (u_6806 / country
                         :wiki "Colombia"
                         :name (u_6807 / name
                                       :op1 "Colombia"))
            :op9 (u_6802 / country
                         :wiki "United_Kingdom"
                         :name (u_6803 / name
                                       :op1 "Britain"))
            :op10 (u_6798 / country
                          :wiki "Myanmar"
                          :name (u_6799 / name
                                        :op1 "Myanmar"))
            :op11 (u_6794 / country
                          :wiki "Haiti"
                          :name (u_6795 / name
                                        :op1 "Haiti"))
            :op12 (u_6790 / country
                          :wiki "Italy"
                          :name (u_6791 / name
                                        :op1 "Italy"))
            :op13 (u_6786 / country
                          :wiki "Thailand"
                          :name (u_6787 / name
                                        :op1 "Thailand"))
            :op14 (u_6782 / country
                          :wiki "Iraq"
                          :name (u_6783 / name
                                        :op1 "Iraq"))
            :op15 (u_6778 / country
                          :wiki "Malaysia"
                          :name (u_6779 / name
                                        :op1 "Malaysia"))
            :op16 (u_6774 / country
                          :wiki "Pakistan"
                          :name (u_6775 / name
                                        :op1 "Pakistan"))
            :op17 (u_6770 / country
                          :wiki "Iran"
                          :name (u_6771 / name
                                        :op1 "Iran"))
            :op18 (u_6766 / country
                          :wiki "Egypt"
                          :name (u_6767 / name
                                        :op1 "Egypt"))
            :op19 (u_6762 / country
                          :wiki "Brazil"
                          :name (u_6763 / name
                                        :op1 "Brazil"))
            :op20 (u_6758 / country
                          :wiki "China"
                          :name (u_6759 / name
                                        :op1 "China"))
            :op21 (u_6754 / country
                          :wiki "Singapore"
                          :name (u_6755 / name
                                        :op1 "Singapore"))
            :op22 (u_6750 / country
                          :wiki "Estonia"
                          :name (u_6751 / name
                                        :op1 "Estonia"))
            :op23 (u_6746 / country
                          :wiki "Russia"
                          :name (u_6747 / name
                                        :op1 "Russia"))
            :op24 (u_6742 / country
                          :wiki "South_Korea"
                          :name (u_6743 / name
                                        :op1 "South"
                                        :op2 "Korea"))
            :op25 (u_6738 / country
                          :wiki "State_of_Palestine"
                          :name (u_6739 / name
                                        :op1 "Palestine"))
            :op26 (u_6733 / country
                          :wiki "Vietnam"
                          :name (u_6734 / name
                                        :op1 "Vietnam"))
            :op27 (u_6729 / country
                          :wiki "Laos"
                          :name (u_6730 / name
                                        :op1 "Laos"))
            :op28 (u_6725 / country
                          :wiki "Libya"
                          :name (u_6726 / name
                                        :op1 "Libya"))
            :op29 (u_6721 / country
                          :wiki "India"
                          :name (u_6722 / name
                                        :op1 "India"))))

# ::snt She visited Myanmar, South Korea, France, Germany, Vietnam, India, Laos, Russia, Egypt, Haiti, Israel, Syria, Canada, Indonesia, Saudi Arabia, Palestine, Iraq, North Korea, South Africa, Colombia, the United States, Pakistan, Brazil, Britain, Iran, the Philippines, Japan, Libya, Zimbabwe and China.
# ::tree template(coord_30(myanmar,south_korea,france,germany,vietnam,india,laos,russia,egypt,Haiti,israel,syria,canada,indonesia,saudi_arabia,palestine,iraq,north_korea,south_africa,Colombia,united_states,pakistan,brazil,britain,iran,philippines,japan,libya,Zimbabwe,china))
# ::id long_lists_90
# ::suppl long_lists_90
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Myanmar"
                    :name (n / name
                             :op1 "Myanmar"))
            :op2 (u_6956 / country
                         :wiki "South_Korea"
                         :name (u_6957 / name
                                       :op1 "South"
                                       :op2 "Korea"))
            :op3 (u_6952 / country
                         :wiki "France"
                         :name (u_6953 / name
                                       :op1 "France"))
            :op4 (u_6947 / country
                         :wiki "Germany"
                         :name (u_6948 / name
                                       :op1 "Germany"))
            :op5 (u_6943 / country
                         :wiki "Vietnam"
                         :name (u_6944 / name
                                       :op1 "Vietnam"))
            :op6 (u_6939 / country
                         :wiki "India"
                         :name (u_6940 / name
                                       :op1 "India"))
            :op7 (u_6935 / country
                         :wiki "Laos"
                         :name (u_6936 / name
                                       :op1 "Laos"))
            :op8 (u_6931 / country
                         :wiki "Russia"
                         :name (u_6932 / name
                                       :op1 "Russia"))
            :op9 (u_6927 / country
                         :wiki "Egypt"
                         :name (u_6928 / name
                                       :op1 "Egypt"))
            :op10 (u_6923 / country
                          :wiki "Haiti"
                          :name (u_6924 / name
                                        :op1 "Haiti"))
            :op11 (u_6919 / country
                          :wiki "Israel"
                          :name (u_6920 / name
                                        :op1 "Israel"))
            :op12 (u_6915 / country
                          :wiki "Syria"
                          :name (u_6916 / name
                                        :op1 "Syria"))
            :op13 (u_6911 / country
                          :wiki "Canada"
                          :name (u_6912 / name
                                        :op1 "Canada"))
            :op14 (u_6907 / country
                          :wiki "Indonesia"
                          :name (u_6908 / name
                                        :op1 "Indonesia"))
            :op15 (u_6903 / country
                          :wiki "Saudi_Arabia"
                          :name (u_6904 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op16 (u_6899 / country
                          :wiki "State_of_Palestine"
                          :name (u_6900 / name
                                        :op1 "Palestine"))
            :op17 (u_6894 / country
                          :wiki "Iraq"
                          :name (u_6895 / name
                                        :op1 "Iraq"))
            :op18 (u_6890 / country
                          :wiki "North_Korea"
                          :name (u_6891 / name
                                        :op1 "North"
                                        :op2 "Korea"))
            :op19 (u_6886 / country
                          :wiki "South_Africa"
                          :name (u_6887 / name
                                        :op1 "South"
                                        :op2 "Africa"))
            :op20 (u_6881 / country
                          :wiki "Colombia"
                          :name (u_6882 / name
                                        :op1 "Colombia"))
            :op21 (u_6876 / country
                          :wiki "United_States"
                          :name (u_6877 / name
                                        :op1 "United"
                                        :op2 "States"))
            :op22 (u_6872 / country
                          :wiki "Pakistan"
                          :name (u_6873 / name
                                        :op1 "Pakistan"))
            :op23 (u_6867 / country
                          :wiki "Brazil"
                          :name (u_6868 / name
                                        :op1 "Brazil"))
            :op24 (u_6863 / country
                          :wiki "United_Kingdom"
                          :name (u_6864 / name
                                        :op1 "Britain"))
            :op25 (u_6859 / country
                          :wiki "Iran"
                          :name (u_6860 / name
                                        :op1 "Iran"))
            :op26 (u_6855 / country
                          :wiki "Philippines"
                          :name (u_6856 / name
                                        :op1 "Philippines"))
            :op27 (u_6851 / country
                          :wiki "Japan"
                          :name (u_6852 / name
                                        :op1 "Japan"))
            :op28 (u_6847 / country
                          :wiki "Libya"
                          :name (u_6848 / name
                                        :op1 "Libya"))
            :op29 (u_6843 / country
                          :wiki "Zimbabwe"
                          :name (u_6844 / name
                                        :op1 "Zimbabwe"))
            :op30 (u_6839 / country
                          :wiki "China"
                          :name (u_6840 / name
                                        :op1 "China"))))

# ::snt She visited Russia, Pakistan, France, the Philippines, Japan, Vietnam, Iraq, Palestine, Estonia, Egypt, North Korea, Singapore, Malaysia, Colombia, Brazil, Jordan, Afghanistan, Germany, Syria, Spain, Saudi Arabia, Laos, Canada, Libya, Zimbabwe, Israel, South Korea, Australia, China, Myanmar and South Africa.
# ::tree template(coord_31(russia,pakistan,france,philippines,japan,vietnam,iraq,palestine,Estonia,egypt,north_korea,singapore,malaysia,Colombia,brazil,Jordan,afghanistan,germany,syria,spain,saudi_arabia,laos,canada,libya,Zimbabwe,israel,south_korea,australia,china,myanmar,south_africa))
# ::id long_lists_91
# ::suppl long_lists_91
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Russia"
                    :name (n / name
                             :op1 "Russia"))
            :op2 (u_7082 / country
                         :wiki "Pakistan"
                         :name (u_7083 / name
                                       :op1 "Pakistan"))
            :op3 (u_7078 / country
                         :wiki "France"
                         :name (u_7079 / name
                                       :op1 "France"))
            :op4 (u_7074 / country
                         :wiki "Philippines"
                         :name (u_7075 / name
                                       :op1 "Philippines"))
            :op5 (u_7070 / country
                         :wiki "Japan"
                         :name (u_7071 / name
                                       :op1 "Japan"))
            :op6 (u_7066 / country
                         :wiki "Vietnam"
                         :name (u_7067 / name
                                       :op1 "Vietnam"))
            :op7 (u_7062 / country
                         :wiki "Iraq"
                         :name (u_7063 / name
                                       :op1 "Iraq"))
            :op8 (u_7058 / country
                         :wiki "State_of_Palestine"
                         :name (u_7059 / name
                                       :op1 "Palestine"))
            :op9 (u_7054 / country
                         :wiki "Estonia"
                         :name (u_7055 / name
                                       :op1 "Estonia"))
            :op10 (u_7050 / country
                          :wiki "Egypt"
                          :name (u_7051 / name
                                        :op1 "Egypt"))
            :op11 (u_7046 / country
                          :wiki "North_Korea"
                          :name (u_7047 / name
                                        :op1 "North"
                                        :op2 "Korea"))
            :op12 (u_7042 / country
                          :wiki "Singapore"
                          :name (u_7043 / name
                                        :op1 "Singapore"))
            :op13 (u_7037 / country
                          :wiki "Malaysia"
                          :name (u_7038 / name
                                        :op1 "Malaysia"))
            :op14 (u_7033 / country
                          :wiki "Colombia"
                          :name (u_7034 / name
                                        :op1 "Colombia"))
            :op15 (u_7029 / country
                          :wiki "Brazil"
                          :name (u_7030 / name
                                        :op1 "Brazil"))
            :op16 (u_7025 / country
                          :wiki "Jordan"
                          :name (u_7026 / name
                                        :op1 "Jordan"))
            :op17 (u_7021 / country
                          :wiki "Afghanistan"
                          :name (u_7022 / name
                                        :op1 "Afghanistan"))
            :op18 (u_7017 / country
                          :wiki "Germany"
                          :name (u_7018 / name
                                        :op1 "Germany"))
            :op19 (u_7013 / country
                          :wiki "Syria"
                          :name (u_7014 / name
                                        :op1 "Syria"))
            :op20 (u_7009 / country
                          :wiki "Spain"
                          :name (u_7010 / name
                                        :op1 "Spain"))
            :op21 (u_7005 / country
                          :wiki "Saudi_Arabia"
                          :name (u_7006 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op22 (u_7001 / country
                          :wiki "Laos"
                          :name (u_7002 / name
                                        :op1 "Laos"))
            :op23 (u_6996 / country
                          :wiki "Canada"
                          :name (u_6997 / name
                                        :op1 "Canada"))
            :op24 (u_6992 / country
                          :wiki "Libya"
                          :name (u_6993 / name
                                        :op1 "Libya"))
            :op25 (u_6988 / country
                          :wiki "Zimbabwe"
                          :name (u_6989 / name
                                        :op1 "Zimbabwe"))
            :op26 (u_6984 / country
                          :wiki "Israel"
                          :name (u_6985 / name
                                        :op1 "Israel"))
            :op27 (u_6980 / country
                          :wiki "South_Korea"
                          :name (u_6981 / name
                                        :op1 "South"
                                        :op2 "Korea"))
            :op28 (u_6976 / country
                          :wiki "Australia"
                          :name (u_6977 / name
                                        :op1 "Australia"))
            :op29 (u_6971 / country
                          :wiki "China"
                          :name (u_6972 / name
                                        :op1 "China"))
            :op30 (u_6967 / country
                          :wiki "Myanmar"
                          :name (u_6968 / name
                                        :op1 "Myanmar"))
            :op31 (u_6963 / country
                          :wiki "South_Africa"
                          :name (u_6964 / name
                                        :op1 "South"
                                        :op2 "Africa"))))

# ::snt She visited Spain, Libya, Laos, Australia, North Korea, the United States, Indonesia, Thailand, France, Vietnam, Iran, Afghanistan, Russia, Saudi Arabia, Germany, Estonia, Malaysia, Haiti, India, Britain, Jordan, the Philippines, Israel, Syria, South Korea, Egypt, Brazil, Colombia, Palestine, Pakistan, Canada and Singapore.
# ::tree template(coord_32(spain,libya,laos,australia,north_korea,united_states,indonesia,thailand,france,vietnam,iran,afghanistan,russia,saudi_arabia,germany,Estonia,malaysia,Haiti,india,britain,Jordan,philippines,israel,syria,south_korea,egypt,brazil,Colombia,palestine,pakistan,canada,singapore))
# ::id long_lists_92
# ::suppl long_lists_92
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Spain"
                    :name (n / name
                             :op1 "Spain"))
            :op2 (u_7212 / country
                         :wiki "Libya"
                         :name (u_7213 / name
                                       :op1 "Libya"))
            :op3 (u_7208 / country
                         :wiki "Laos"
                         :name (u_7209 / name
                                       :op1 "Laos"))
            :op4 (u_7204 / country
                         :wiki "Australia"
                         :name (u_7205 / name
                                       :op1 "Australia"))
            :op5 (u_7200 / country
                         :wiki "North_Korea"
                         :name (u_7201 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op6 (u_7196 / country
                         :wiki "United_States"
                         :name (u_7197 / name
                                       :op1 "United"
                                       :op2 "States"))
            :op7 (u_7191 / country
                         :wiki "Indonesia"
                         :name (u_7192 / name
                                       :op1 "Indonesia"))
            :op8 (u_7186 / country
                         :wiki "Thailand"
                         :name (u_7187 / name
                                       :op1 "Thailand"))
            :op9 (u_7182 / country
                         :wiki "France"
                         :name (u_7183 / name
                                       :op1 "France"))
            :op10 (u_7178 / country
                          :wiki "Vietnam"
                          :name (u_7179 / name
                                        :op1 "Vietnam"))
            :op11 (u_7174 / country
                          :wiki "Iran"
                          :name (u_7175 / name
                                        :op1 "Iran"))
            :op12 (u_7170 / country
                          :wiki "Afghanistan"
                          :name (u_7171 / name
                                        :op1 "Afghanistan"))
            :op13 (u_7166 / country
                          :wiki "Russia"
                          :name (u_7167 / name
                                        :op1 "Russia"))
            :op14 (u_7162 / country
                          :wiki "Saudi_Arabia"
                          :name (u_7163 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op15 (u_7158 / country
                          :wiki "Germany"
                          :name (u_7159 / name
                                        :op1 "Germany"))
            :op16 (u_7153 / country
                          :wiki "Estonia"
                          :name (u_7154 / name
                                        :op1 "Estonia"))
            :op17 (u_7149 / country
                          :wiki "Malaysia"
                          :name (u_7150 / name
                                        :op1 "Malaysia"))
            :op18 (u_7145 / country
                          :wiki "Haiti"
                          :name (u_7146 / name
                                        :op1 "Haiti"))
            :op19 (u_7141 / country
                          :wiki "India"
                          :name (u_7142 / name
                                        :op1 "India"))
            :op20 (u_7137 / country
                          :wiki "United_Kingdom"
                          :name (u_7138 / name
                                        :op1 "Britain"))
            :op21 (u_7133 / country
                          :wiki "Jordan"
                          :name (u_7134 / name
                                        :op1 "Jordan"))
            :op22 (u_7129 / country
                          :wiki "Philippines"
                          :name (u_7130 / name
                                        :op1 "Philippines"))
            :op23 (u_7125 / country
                          :wiki "Israel"
                          :name (u_7126 / name
                                        :op1 "Israel"))
            :op24 (u_7121 / country
                          :wiki "Syria"
                          :name (u_7122 / name
                                        :op1 "Syria"))
            :op25 (u_7117 / country
                          :wiki "South_Korea"
                          :name (u_7118 / name
                                        :op1 "South"
                                        :op2 "Korea"))
            :op26 (u_7113 / country
                          :wiki "Egypt"
                          :name (u_7114 / name
                                        :op1 "Egypt"))
            :op27 (u_7108 / country
                          :wiki "Brazil"
                          :name (u_7109 / name
                                        :op1 "Brazil"))
            :op28 (u_7104 / country
                          :wiki "Colombia"
                          :name (u_7105 / name
                                        :op1 "Colombia"))
            :op29 (u_7100 / country
                          :wiki "State_of_Palestine"
                          :name (u_7101 / name
                                        :op1 "Palestine"))
            :op30 (u_7096 / country
                          :wiki "Pakistan"
                          :name (u_7097 / name
                                        :op1 "Pakistan"))
            :op31 (u_7092 / country
                          :wiki "Canada"
                          :name (u_7093 / name
                                        :op1 "Canada"))
            :op32 (u_7088 / country
                          :wiki "Singapore"
                          :name (u_7089 / name
                                        :op1 "Singapore"))))

# ::snt She visited China, Spain, Laos, North Korea, Pakistan, Brazil, the Philippines, India, Canada, Iran, Japan, Egypt, Afghanistan, Syria, Myanmar, Palestine, Zimbabwe, Libya, Germany, Saudi Arabia, Israel, Singapore, Malaysia, the United States, Iraq, France, Russia, Thailand, Estonia, Vietnam, South Africa, South Korea and Britain.
# ::tree template(coord_33(china,spain,laos,north_korea,pakistan,brazil,philippines,india,canada,iran,japan,egypt,afghanistan,syria,myanmar,palestine,Zimbabwe,libya,germany,saudi_arabia,israel,singapore,malaysia,united_states,iraq,france,russia,thailand,Estonia,vietnam,south_africa,south_korea,britain))
# ::id long_lists_93
# ::suppl long_lists_93
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "China"
                    :name (n / name
                             :op1 "China"))
            :op2 (u_7347 / country
                         :wiki "Spain"
                         :name (u_7348 / name
                                       :op1 "Spain"))
            :op3 (u_7343 / country
                         :wiki "Laos"
                         :name (u_7344 / name
                                       :op1 "Laos"))
            :op4 (u_7339 / country
                         :wiki "North_Korea"
                         :name (u_7340 / name
                                       :op1 "North"
                                       :op2 "Korea"))
            :op5 (u_7335 / country
                         :wiki "Pakistan"
                         :name (u_7336 / name
                                       :op1 "Pakistan"))
            :op6 (u_7330 / country
                         :wiki "Brazil"
                         :name (u_7331 / name
                                       :op1 "Brazil"))
            :op7 (u_7326 / country
                         :wiki "Philippines"
                         :name (u_7327 / name
                                       :op1 "Philippines"))
            :op8 (u_7322 / country
                         :wiki "India"
                         :name (u_7323 / name
                                       :op1 "India"))
            :op9 (u_7318 / country
                         :wiki "Canada"
                         :name (u_7319 / name
                                       :op1 "Canada"))
            :op10 (u_7314 / country
                          :wiki "Iran"
                          :name (u_7315 / name
                                        :op1 "Iran"))
            :op11 (u_7310 / country
                          :wiki "Japan"
                          :name (u_7311 / name
                                        :op1 "Japan"))
            :op12 (u_7306 / country
                          :wiki "Egypt"
                          :name (u_7307 / name
                                        :op1 "Egypt"))
            :op13 (u_7302 / country
                          :wiki "Afghanistan"
                          :name (u_7303 / name
                                        :op1 "Afghanistan"))
            :op14 (u_7298 / country
                          :wiki "Syria"
                          :name (u_7299 / name
                                        :op1 "Syria"))
            :op15 (u_7294 / country
                          :wiki "Myanmar"
                          :name (u_7295 / name
                                        :op1 "Myanmar"))
            :op16 (u_7290 / country
                          :wiki "State_of_Palestine"
                          :name (u_7291 / name
                                        :op1 "Palestine"))
            :op17 (u_7286 / country
                          :wiki "Zimbabwe"
                          :name (u_7287 / name
                                        :op1 "Zimbabwe"))
            :op18 (u_7282 / country
                          :wiki "Libya"
                          :name (u_7283 / name
                                        :op1 "Libya"))
            :op19 (u_7278 / country
                          :wiki "Germany"
                          :name (u_7279 / name
                                        :op1 "Germany"))
            :op20 (u_7274 / country
                          :wiki "Saudi_Arabia"
                          :name (u_7275 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op21 (u_7270 / country
                          :wiki "Israel"
                          :name (u_7271 / name
                                        :op1 "Israel"))
            :op22 (u_7265 / country
                          :wiki "Singapore"
                          :name (u_7266 / name
                                        :op1 "Singapore"))
            :op23 (u_7261 / country
                          :wiki "Malaysia"
                          :name (u_7262 / name
                                        :op1 "Malaysia"))
            :op24 (u_7257 / country
                          :wiki "United_States"
                          :name (u_7258 / name
                                        :op1 "United"
                                        :op2 "States"))
            :op25 (u_7253 / country
                          :wiki "Iraq"
                          :name (u_7254 / name
                                        :op1 "Iraq"))
            :op26 (u_7248 / country
                          :wiki "France"
                          :name (u_7249 / name
                                        :op1 "France"))
            :op27 (u_7244 / country
                          :wiki "Russia"
                          :name (u_7245 / name
                                        :op1 "Russia"))
            :op28 (u_7240 / country
                          :wiki "Thailand"
                          :name (u_7241 / name
                                        :op1 "Thailand"))
            :op29 (u_7236 / country
                          :wiki "Estonia"
                          :name (u_7237 / name
                                        :op1 "Estonia"))
            :op30 (u_7232 / country
                          :wiki "Vietnam"
                          :name (u_7233 / name
                                        :op1 "Vietnam"))
            :op31 (u_7228 / country
                          :wiki "South_Africa"
                          :name (u_7229 / name
                                        :op1 "South"
                                        :op2 "Africa"))
            :op32 (u_7224 / country
                          :wiki "South_Korea"
                          :name (u_7225 / name
                                        :op1 "South"
                                        :op2 "Korea"))
            :op33 (u_7219 / country
                          :wiki "United_Kingdom"
                          :name (u_7220 / name
                                        :op1 "Britain"))))

# ::snt She visited the Philippines, Spain, Iran, Russia, Egypt, Germany, South Africa, Indonesia, Estonia, Israel, South Korea, Canada, Zimbabwe, Laos, Palestine, Haiti, Colombia, Saudi Arabia, Afghanistan, Japan, Italy, Jordan, Myanmar, Pakistan, Malaysia, France, Libya, the United States, Syria, Singapore, China, Australia, Britain and Vietnam.
# ::tree template(coord_34(philippines,spain,iran,russia,egypt,germany,south_africa,indonesia,Estonia,israel,south_korea,canada,Zimbabwe,laos,palestine,Haiti,Colombia,saudi_arabia,afghanistan,japan,italy,Jordan,myanmar,pakistan,malaysia,france,libya,united_states,syria,singapore,china,australia,britain,vietnam))
# ::id long_lists_94
# ::suppl long_lists_94
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "Philippines"
                    :name (n / name
                             :op1 "Philippines"))
            :op2 (u_7485 / country
                         :wiki "Spain"
                         :name (u_7486 / name
                                       :op1 "Spain"))
            :op3 (u_7481 / country
                         :wiki "Iran"
                         :name (u_7482 / name
                                       :op1 "Iran"))
            :op4 (u_7477 / country
                         :wiki "Russia"
                         :name (u_7478 / name
                                       :op1 "Russia"))
            :op5 (u_7473 / country
                         :wiki "Egypt"
                         :name (u_7474 / name
                                       :op1 "Egypt"))
            :op6 (u_7469 / country
                         :wiki "Germany"
                         :name (u_7470 / name
                                       :op1 "Germany"))
            :op7 (u_7465 / country
                         :wiki "South_Africa"
                         :name (u_7466 / name
                                       :op1 "South"
                                       :op2 "Africa"))
            :op8 (u_7461 / country
                         :wiki "Indonesia"
                         :name (u_7462 / name
                                       :op1 "Indonesia"))
            :op9 (u_7456 / country
                         :wiki "Estonia"
                         :name (u_7457 / name
                                       :op1 "Estonia"))
            :op10 (u_7452 / country
                          :wiki "Israel"
                          :name (u_7453 / name
                                        :op1 "Israel"))
            :op11 (u_7448 / country
                          :wiki "South_Korea"
                          :name (u_7449 / name
                                        :op1 "South"
                                        :op2 "Korea"))
            :op12 (u_7444 / country
                          :wiki "Canada"
                          :name (u_7445 / name
                                        :op1 "Canada"))
            :op13 (u_7439 / country
                          :wiki "Zimbabwe"
                          :name (u_7440 / name
                                        :op1 "Zimbabwe"))
            :op14 (u_7435 / country
                          :wiki "Laos"
                          :name (u_7436 / name
                                        :op1 "Laos"))
            :op15 (u_7431 / country
                          :wiki "State_of_Palestine"
                          :name (u_7432 / name
                                        :op1 "Palestine"))
            :op16 (u_7427 / country
                          :wiki "Haiti"
                          :name (u_7428 / name
                                        :op1 "Haiti"))
            :op17 (u_7423 / country
                          :wiki "Colombia"
                          :name (u_7424 / name
                                        :op1 "Colombia"))
            :op18 (u_7419 / country
                          :wiki "Saudi_Arabia"
                          :name (u_7420 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op19 (u_7415 / country
                          :wiki "Afghanistan"
                          :name (u_7416 / name
                                        :op1 "Afghanistan"))
            :op20 (u_7410 / country
                          :wiki "Japan"
                          :name (u_7411 / name
                                        :op1 "Japan"))
            :op21 (u_7406 / country
                          :wiki "Italy"
                          :name (u_7407 / name
                                        :op1 "Italy"))
            :op22 (u_7402 / country
                          :wiki "Jordan"
                          :name (u_7403 / name
                                        :op1 "Jordan"))
            :op23 (u_7398 / country
                          :wiki "Myanmar"
                          :name (u_7399 / name
                                        :op1 "Myanmar"))
            :op24 (u_7394 / country
                          :wiki "Pakistan"
                          :name (u_7395 / name
                                        :op1 "Pakistan"))
            :op25 (u_7390 / country
                          :wiki "Malaysia"
                          :name (u_7391 / name
                                        :op1 "Malaysia"))
            :op26 (u_7386 / country
                          :wiki "France"
                          :name (u_7387 / name
                                        :op1 "France"))
            :op27 (u_7382 / country
                          :wiki "Libya"
                          :name (u_7383 / name
                                        :op1 "Libya"))
            :op28 (u_7378 / country
                          :wiki "United_States"
                          :name (u_7379 / name
                                        :op1 "United"
                                        :op2 "States"))
            :op29 (u_7374 / country
                          :wiki "Syria"
                          :name (u_7375 / name
                                        :op1 "Syria"))
            :op30 (u_7369 / country
                          :wiki "Singapore"
                          :name (u_7370 / name
                                        :op1 "Singapore"))
            :op31 (u_7365 / country
                          :wiki "China"
                          :name (u_7366 / name
                                        :op1 "China"))
            :op32 (u_7361 / country
                          :wiki "Australia"
                          :name (u_7362 / name
                                        :op1 "Australia"))
            :op33 (u_7357 / country
                          :wiki "United_Kingdom"
                          :name (u_7358 / name
                                        :op1 "Britain"))
            :op34 (u_7353 / country
                          :wiki "Vietnam"
                          :name (u_7354 / name
                                        :op1 "Vietnam"))))

# ::snt She visited South Korea, Haiti, Zimbabwe, Iran, Palestine, Syria, Egypt, China, Libya, Colombia, Japan, Spain, Afghanistan, Germany, the Philippines, Brazil, Italy, Canada, Vietnam, Saudi Arabia, Israel, Singapore, Thailand, Pakistan, Malaysia, the United States, South Africa, Australia, Laos, France, Russia, Jordan, Estonia, India and Iraq.
# ::tree template(coord_35(south_korea,Haiti,Zimbabwe,iran,palestine,syria,egypt,china,libya,Colombia,japan,spain,afghanistan,germany,philippines,brazil,italy,canada,vietnam,saudi_arabia,israel,singapore,thailand,pakistan,malaysia,united_states,south_africa,australia,laos,france,russia,Jordan,Estonia,india,iraq))
# ::id long_lists_95
# ::suppl long_lists_95
(v / visit-01
   :ARG0 (s / she)
   :ARG1 (r / and
            :op1 (c / country
                    :wiki "South_Korea"
                    :name (n / name
                             :op1 "South"
                             :op2 "Korea"))
            :op2 (u_7627 / country
                         :wiki "Haiti"
                         :name (u_7628 / name
                                       :op1 "Haiti"))
            :op3 (u_7622 / country
                         :wiki "Zimbabwe"
                         :name (u_7623 / name
                                       :op1 "Zimbabwe"))
            :op4 (u_7618 / country
                         :wiki "Iran"
                         :name (u_7619 / name
                                       :op1 "Iran"))
            :op5 (u_7614 / country
                         :wiki "State_of_Palestine"
                         :name (u_7615 / name
                                       :op1 "Palestine"))
            :op6 (u_7610 / country
                         :wiki "Syria"
                         :name (u_7611 / name
                                       :op1 "Syria"))
            :op7 (u_7606 / country
                         :wiki "Egypt"
                         :name (u_7607 / name
                                       :op1 "Egypt"))
            :op8 (u_7602 / country
                         :wiki "China"
                         :name (u_7603 / name
                                       :op1 "China"))
            :op9 (u_7598 / country
                         :wiki "Libya"
                         :name (u_7599 / name
                                       :op1 "Libya"))
            :op10 (u_7594 / country
                          :wiki "Colombia"
                          :name (u_7595 / name
                                        :op1 "Colombia"))
            :op11 (u_7590 / country
                          :wiki "Japan"
                          :name (u_7591 / name
                                        :op1 "Japan"))
            :op12 (u_7586 / country
                          :wiki "Spain"
                          :name (u_7587 / name
                                        :op1 "Spain"))
            :op13 (u_7582 / country
                          :wiki "Afghanistan"
                          :name (u_7583 / name
                                        :op1 "Afghanistan"))
            :op14 (u_7578 / country
                          :wiki "Germany"
                          :name (u_7579 / name
                                        :op1 "Germany"))
            :op15 (u_7574 / country
                          :wiki "Philippines"
                          :name (u_7575 / name
                                        :op1 "Philippines"))
            :op16 (u_7570 / country
                          :wiki "Brazil"
                          :name (u_7571 / name
                                        :op1 "Brazil"))
            :op17 (u_7566 / country
                          :wiki "Italy"
                          :name (u_7567 / name
                                        :op1 "Italy"))
            :op18 (u_7562 / country
                          :wiki "Canada"
                          :name (u_7563 / name
                                        :op1 "Canada"))
            :op19 (u_7558 / country
                          :wiki "Vietnam"
                          :name (u_7559 / name
                                        :op1 "Vietnam"))
            :op20 (u_7554 / country
                          :wiki "Saudi_Arabia"
                          :name (u_7555 / name
                                        :op1 "Saudi"
                                        :op2 "Arabia"))
            :op21 (u_7550 / country
                          :wiki "Israel"
                          :name (u_7551 / name
                                        :op1 "Israel"))
            :op22 (u_7545 / country
                          :wiki "Singapore"
                          :name (u_7546 / name
                                        :op1 "Singapore"))
            :op23 (u_7541 / country
                          :wiki "Thailand"
                          :name (u_7542 / name
                                        :op1 "Thailand"))
            :op24 (u_7537 / country
                          :wiki "Pakistan"
                          :name (u_7538 / name
                                        :op1 "Pakistan"))
            :op25 (u_7533 / country
                          :wiki "Malaysia"
                          :name (u_7534 / name
                                        :op1 "Malaysia"))
            :op26 (u_7529 / country
                          :wiki "United_States"
                          :name (u_7530 / name
                                        :op1 "United"
                                        :op2 "States"))
            :op27 (u_7525 / country
                          :wiki "South_Africa"
                          :name (u_7526 / name
                                        :op1 "South"
                                        :op2 "Africa"))
            :op28 (u_7520 / country
                          :wiki "Australia"
                          :name (u_7521 / name
                                        :op1 "Australia"))
            :op29 (u_7515 / country
                          :wiki "Laos"
                          :name (u_7516 / name
                                        :op1 "Laos"))
            :op30 (u_7511 / country
                          :wiki "France"
                          :name (u_7512 / name
                                        :op1 "France"))
            :op31 (u_7507 / country
                          :wiki "Russia"
                          :name (u_7508 / name
                                        :op1 "Russia"))
            :op32 (u_7503 / country
                          :wiki "Jordan"
                          :name (u_7504 / name
                                        :op1 "Jordan"))
            :op33 (u_7499 / country
                          :wiki "Estonia"
                          :name (u_7500 / name
                                        :op1 "Estonia"))
            :op34 (u_7495 / country
                          :wiki "India"
                          :name (u_7496 / name
                                        :op1 "India"))
            :op35 (u_7491 / country
                          :wiki "Iraq"
                          :name (u_7492 / name
                                        :op1 "Iraq"))))

# ::snt The boys who I thought sneezed hated the doctor
# ::tree TP_tr(hated,DP_the_obj(NP_unary(doctor)),DP_the_with_RC(DP_RC(boys,subj_rel(CP_gap_end_recursion(CP_with_gap_base(thought,I)),sneezed))))
# ::id deep_recursion_rc_sanity_check_0
# ::suppl deep_recursion_rc_sanity_check_0
(u_180 / hate-01
       :ARG0 (r / boy
                :ARG0-of (u_179 / sneeze-01
                                :ARG1-of (u_177 / think-01
                                                :ARG0 (u_178 / i))))
       :ARG1 (d / doctor))

# ::snt The lawyer who you claimed arrived slept
# ::tree TP_intr(slept,DP_the_with_RC(DP_RC(lawyer,subj_rel(CP_gap_end_recursion(CP_with_gap_base(claimed,you)),arrived))))
# ::id deep_recursion_rc_sanity_check_1
# ::suppl deep_recursion_rc_sanity_check_1
(u_183 / sleep-01
       :ARG0 (m / lawyer
                :ARG1-of (r / arrive-01
                            :ARG1-of (u_181 / claim-01
                                            :ARG0 (u_182 / you)))))

# ::snt The astronaut who we assumed won liked the soldier
# ::tree TP_tr(liked,DP_the_obj(NP_unary(soldier)),DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_gap_end_recursion(CP_with_gap_base(assumed,we)),won))))
# ::id deep_recursion_rc_sanity_check_2
# ::suppl deep_recursion_rc_sanity_check_2
(u_187 / like-01
       :ARG0 (a / astronaut
                :ARG0-of (r / win-01
                            :ARG1-of (u_185 / assume-02
                                            :ARG0 (u_186 / we))))
       :ARG1 (s / soldier))

# ::snt The girls who the kids said slept sneezed
# ::tree TP_intr(sneezed,DP_the_with_RC(DP_RC(girls,subj_rel(CP_gap_end_recursion(CP_with_gap_base(said,DP_the(NP_unary(kids)))),slept))))
# ::id deep_recursion_rc_sanity_check_3
# ::suppl deep_recursion_rc_sanity_check_3
(u_191 / sneeze-01
       :ARG0 (r / girl
                :ARG0-of (u_190 / sleep-01
                                :ARG1-of (u_188 / say-01
                                                :ARG0 (u_189 / kid)))))

# ::snt The astronaut who I assumed won hated the girls
# ::tree TP_tr(hated,DP_the_obj(NP_unary(girls)),DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_gap_end_recursion(CP_with_gap_base(assumed,I)),won))))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_0
# ::suppl deep_recursion_rc_0
(u_6986 / hate-01
        :ARG0 (a / astronaut
                 :ARG0-of (r / win-01
                             :ARG1-of (u_6987 / assume-02
                                              :ARG0 (u_6988 / i))))
        :ARG1 (u_6989 / girl))

# ::snt The astronaut who we said won sneezed
# ::tree TP_intr(sneezed,DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_gap_end_recursion(CP_with_gap_base(said,we)),won))))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_1
# ::suppl deep_recursion_rc_1
(u_6992 / sneeze-01
        :ARG0 (a / astronaut
                 :ARG0-of (r / win-01
                             :ARG1-of (u_6990 / say-01
                                              :ARG0 (u_6991 / we)))))

# ::snt The soldier who I thought arrived liked the kids
# ::tree TP_tr(liked,DP_the_obj(NP_unary(kids)),DP_the_with_RC(DP_RC(soldier,subj_rel(CP_gap_end_recursion(CP_with_gap_base(thought,I)),arrived))))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_2
# ::suppl deep_recursion_rc_2
(u_6993 / like-01
        :ARG0 (s / soldier
                 :ARG1-of (r / arrive-01
                             :ARG1-of (u_6994 / think-01
                                              :ARG0 (u_6995 / i))))
        :ARG1 (u_6996 / kid))

# ::snt You claimed that the kids who we assumed arrived sneezed
# ::tree TP_CP(claimed,you,TP_intr(sneezed,DP_the_with_RC(DP_RC(kids,subj_rel(CP_gap_end_recursion(CP_with_gap_base(assumed,we)),arrived)))))
# ::size0 0
# ::size1 7
# ::id deep_recursion_rc_3
# ::suppl deep_recursion_rc_3
(u_7001 / claim-01
        :ARG0 (r / you)
        :ARG1 (u_7000 / sneeze-01
                      :ARG0 (u_7002 / kid
                                    :ARG1-of (u_6999 / arrive-01
                                                     :ARG1-of (u_6997 / assume-02
                                                                      :ARG0 (u_6998 / we))))))

# ::snt The lawyer who the kids claimed slept sneezed
# ::tree TP_intr(sneezed,DP_the_with_RC(DP_RC(lawyer,subj_rel(CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(kids)))),slept))))
# ::size0 0
# ::size1 8
# ::id deep_recursion_rc_4
# ::suppl deep_recursion_rc_4
(u_7005 / sneeze-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / sleep-01
                             :ARG1-of (u_7003 / claim-01
                                              :ARG0 (u_7004 / kid)))))

# ::snt The lawyer who you thought sneezed won
# ::tree TP_intr(won,DP_the_with_RC(DP_RC(lawyer,subj_rel(CP_gap_end_recursion(CP_with_gap_base(thought,you)),sneezed))))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_5
# ::suppl deep_recursion_rc_5
(u_7008 / win-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7006 / think-01
                                              :ARG0 (u_7007 / you)))))

# ::snt The lawyer who I assumed slept liked the doctor
# ::tree TP_tr(liked,DP_the_obj(NP_unary(doctor)),DP_the_with_RC(DP_RC(lawyer,subj_rel(CP_gap_end_recursion(CP_with_gap_base(assumed,I)),slept))))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_6
# ::suppl deep_recursion_rc_6
(u_7011 / like-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / sleep-01
                             :ARG1-of (u_7009 / assume-02
                                              :ARG0 (u_7010 / i))))
        :ARG1 (d / doctor))

# ::snt We said that the girls claimed that you said that the astronaut who I claimed arrived liked the soldier
# ::tree TP_CP(said,we,TP_CP(claimed,DP_the(NP_unary(girls)),TP_CP(said,you,TP_tr(liked,DP_the_obj(NP_unary(soldier)),DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_gap_end_recursion(CP_with_gap_base(claimed,I)),arrived)))))))
# ::size0 0
# ::size1 9
# ::id deep_recursion_rc_7
# ::suppl deep_recursion_rc_7
(u_7022 / say-01
        :ARG0 (r / we)
        :ARG1 (u_7019 / claim-01
                      :ARG0 (u_7024 / girl)
                      :ARG1 (u_7016 / say-01
                                    :ARG0 (u_7021 / you)
                                    :ARG1 (u_7015 / like-01
                                                  :ARG0 (a / astronaut
                                                           :ARG1-of (u_7018 / arrive-01
                                                                            :ARG1-of (u_7013 / claim-01
                                                                                             :ARG0 (u_7014 / i))))
                                                  :ARG1 (s / soldier)))))

# ::snt I thought that the girls thought that the kids who we assumed won hated the lawyer
# ::tree TP_CP(thought,I,TP_CP(thought,DP_the(NP_unary(girls)),TP_tr(hated,DP_the_obj(NP_unary(lawyer)),DP_the_with_RC(DP_RC(kids,subj_rel(CP_gap_end_recursion(CP_with_gap_base(assumed,we)),won))))))
# ::size0 0
# ::size1 8
# ::id deep_recursion_rc_8
# ::suppl deep_recursion_rc_8
(u_7031 / think-01
        :ARG0 (r / i)
        :ARG1 (u_7029 / think-01
                      :ARG0 (u_7032 / girl)
                      :ARG1 (u_7028 / hate-01
                                    :ARG0 (u_7030 / kid
                                                  :ARG0-of (u_7027 / win-01
                                                                   :ARG1-of (u_7025 / assume-02
                                                                                    :ARG0 (u_7026 / we))))
                                    :ARG1 (m / lawyer))))

# ::snt The doctor who I said slept hated the boys
# ::tree TP_tr(hated,DP_the_obj(NP_unary(boys)),DP_the_with_RC(DP_RC(doctor,subj_rel(CP_gap_end_recursion(CP_with_gap_base(said,I)),slept))))
# ::size0 0
# ::size1 6
# ::id deep_recursion_rc_9
# ::suppl deep_recursion_rc_9
(u_7033 / hate-01
        :ARG0 (d / doctor
                 :ARG0-of (r / sleep-01
                             :ARG1-of (u_7034 / say-01
                                              :ARG0 (u_7035 / i))))
        :ARG1 (u_7036 / boy))

# ::snt The lawyer who the soldier thought that you assumed slept hated the astronaut
# ::tree TP_tr(hated,DP_the_obj(NP_unary(astronaut)),DP_the_with_RC(DP_RC(lawyer,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(thought,DP_the(NP_unary(soldier))))),slept))))
# ::size0 1
# ::size1 9
# ::id deep_recursion_rc_10
# ::suppl deep_recursion_rc_10
(u_7041 / hate-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / sleep-01
                             :ARG1-of (u_7037 / assume-02
                                              :ARG0 (u_7039 / you)
                                              :ARG1-of (u_7038 / think-01
                                                               :ARG0 (u_7040 / soldier)))))
        :ARG1 (a / astronaut))

# ::snt The doctor who the kids claimed that you assumed sneezed hated the astronaut
# ::tree TP_tr(hated,DP_the_obj(NP_unary(astronaut)),DP_the_with_RC(DP_RC(doctor,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(kids))))),sneezed))))
# ::size0 1
# ::size1 9
# ::id deep_recursion_rc_11
# ::suppl deep_recursion_rc_11
(u_7046 / hate-01
        :ARG0 (d / doctor
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7042 / assume-02
                                              :ARG0 (u_7045 / you)
                                              :ARG1-of (u_7043 / claim-01
                                                               :ARG0 (u_7044 / kid)))))
        :ARG1 (a / astronaut))

# ::snt The girls who I claimed that you claimed sneezed liked the soldier
# ::tree TP_tr(liked,DP_the_obj(NP_unary(soldier)),DP_the_with_RC(DP_RC(girls,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_gap_end_recursion(CP_with_gap_base(claimed,I))),sneezed))))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_12
# ::suppl deep_recursion_rc_12
(u_7053 / like-01
        :ARG0 (r / girl
                 :ARG0-of (u_7052 / sneeze-01
                                  :ARG1-of (u_7048 / claim-01
                                                   :ARG0 (u_7051 / you)
                                                   :ARG1-of (u_7049 / claim-01
                                                                    :ARG0 (u_7050 / i)))))
        :ARG1 (s / soldier))

# ::snt The boys who we claimed that the doctor said won slept
# ::tree TP_intr(slept,DP_the_with_RC(DP_RC(boys,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(doctor))),CP_gap_end_recursion(CP_with_gap_base(claimed,we))),won))))
# ::size0 1
# ::size1 8
# ::id deep_recursion_rc_13
# ::suppl deep_recursion_rc_13
(u_7058 / sleep-01
        :ARG0 (r / boy
                 :ARG0-of (u_7057 / win-01
                                  :ARG1-of (u_7056 / say-01
                                                   :ARG0 (d / doctor)
                                                   :ARG1-of (u_7054 / claim-01
                                                                    :ARG0 (u_7055 / we))))))

# ::snt The doctor who we said that you assumed won sneezed
# ::tree TP_intr(sneezed,DP_the_with_RC(DP_RC(doctor,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(said,we))),won))))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_14
# ::suppl deep_recursion_rc_14
(u_7063 / sneeze-01
        :ARG0 (d / doctor
                 :ARG0-of (r / win-01
                             :ARG1-of (u_7059 / assume-02
                                              :ARG0 (u_7062 / you)
                                              :ARG1-of (u_7060 / say-01
                                                               :ARG0 (u_7061 / we))))))

# ::snt The astronaut who you claimed that we said slept won
# ::tree TP_intr(won,DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,we),CP_gap_end_recursion(CP_with_gap_base(claimed,you))),slept))))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_15
# ::suppl deep_recursion_rc_15
(u_7068 / win-01
        :ARG0 (a / astronaut
                 :ARG0-of (r / sleep-01
                             :ARG1-of (u_7064 / say-01
                                              :ARG0 (u_7067 / we)
                                              :ARG1-of (u_7065 / claim-01
                                                               :ARG0 (u_7066 / you))))))

# ::snt The boys who we thought that you assumed slept hated the soldier
# ::tree TP_tr(hated,DP_the_obj(NP_unary(soldier)),DP_the_with_RC(DP_RC(boys,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(thought,we))),slept))))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_16
# ::suppl deep_recursion_rc_16
(u_7075 / hate-01
        :ARG0 (r / boy
                 :ARG0-of (u_7074 / sleep-01
                                  :ARG1-of (u_7070 / assume-02
                                                   :ARG0 (u_7073 / you)
                                                   :ARG1-of (u_7071 / think-01
                                                                    :ARG0 (u_7072 / we)))))
        :ARG1 (s / soldier))

# ::snt The astronaut who you thought that I said slept won
# ::tree TP_intr(won,DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,I),CP_gap_end_recursion(CP_with_gap_base(thought,you))),slept))))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_17
# ::suppl deep_recursion_rc_17
(u_7080 / win-01
        :ARG0 (a / astronaut
                 :ARG0-of (r / sleep-01
                             :ARG1-of (u_7076 / say-01
                                              :ARG0 (u_7079 / i)
                                              :ARG1-of (u_7077 / think-01
                                                               :ARG0 (u_7078 / you))))))

# ::snt The soldier who we claimed that you assumed arrived slept
# ::tree TP_intr(slept,DP_the_with_RC(DP_RC(soldier,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(claimed,we))),arrived))))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_18
# ::suppl deep_recursion_rc_18
(u_7085 / sleep-01
        :ARG0 (s / soldier
                 :ARG1-of (r / arrive-01
                             :ARG1-of (u_7081 / assume-02
                                              :ARG0 (u_7084 / you)
                                              :ARG1-of (u_7082 / claim-01
                                                               :ARG0 (u_7083 / we))))))

# ::snt The girls who we said that you claimed sneezed slept
# ::tree TP_intr(slept,DP_the_with_RC(DP_RC(girls,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_gap_end_recursion(CP_with_gap_base(said,we))),sneezed))))
# ::size0 1
# ::size1 7
# ::id deep_recursion_rc_19
# ::suppl deep_recursion_rc_19
(u_7091 / sleep-01
        :ARG0 (r / girl
                 :ARG0-of (u_7090 / sneeze-01
                                  :ARG1-of (u_7086 / claim-01
                                                   :ARG0 (u_7089 / you)
                                                   :ARG1-of (u_7087 / say-01
                                                                    :ARG0 (u_7088 / we))))))

# ::snt The girls who you assumed that we thought that the lawyer assumed slept arrived
# ::tree TP_intr(arrived,DP_the_with_RC(DP_RC(girls,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(lawyer))),CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_gap_end_recursion(CP_with_gap_base(assumed,you)))),slept))))
# ::size0 2
# ::size1 8
# ::id deep_recursion_rc_20
# ::suppl deep_recursion_rc_20
(u_7098 / arrive-01
        :ARG1 (r / girl
                 :ARG0-of (u_7097 / sleep-01
                                  :ARG1-of (u_7096 / assume-02
                                                   :ARG0 (m / lawyer)
                                                   :ARG1-of (u_7092 / think-01
                                                                    :ARG0 (u_7095 / we)
                                                                    :ARG1-of (u_7093 / assume-02
                                                                                     :ARG0 (u_7094 / you)))))))

# ::snt The astronaut who I said that the girls thought that you said slept arrived
# ::tree TP_intr(arrived,DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(said,I)))),slept))))
# ::size0 2
# ::size1 9
# ::id deep_recursion_rc_21
# ::suppl deep_recursion_rc_21
(u_7105 / arrive-01
        :ARG1 (a / astronaut
                 :ARG0-of (r / sleep-01
                             :ARG1-of (u_7099 / say-01
                                              :ARG0 (u_7104 / you)
                                              :ARG1-of (u_7100 / think-01
                                                               :ARG0 (u_7103 / girl)
                                                               :ARG1-of (u_7101 / say-01
                                                                                :ARG0 (u_7102 / i)))))))

# ::snt The doctor thought that the boys who the kids claimed that we assumed that I said slept sneezed
# ::tree TP_CP(thought,DP_the(NP_unary(doctor)),TP_intr(sneezed,DP_the_with_RC(DP_RC(boys,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(kids)))))),slept)))))
# ::size0 2
# ::size1 11
# ::id deep_recursion_rc_22
# ::suppl deep_recursion_rc_22
(u_7114 / think-01
        :ARG0 (d / doctor)
        :ARG1 (u_7113 / sneeze-01
                      :ARG0 (r / boy
                               :ARG0-of (u_7112 / sleep-01
                                                :ARG1-of (u_7106 / say-01
                                                                 :ARG0 (u_7111 / i)
                                                                 :ARG1-of (u_7107 / assume-02
                                                                                  :ARG0 (u_7110 / we)
                                                                                  :ARG1-of (u_7108 / claim-01
                                                                                                   :ARG0 (u_7109 / kid))))))))

# ::snt The boys who I thought that you claimed that we assumed slept liked the kids
# ::tree TP_tr(liked,DP_the_obj(NP_unary(kids)),DP_the_with_RC(DP_RC(boys,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_gap_end_recursion(CP_with_gap_base(thought,I)))),slept))))
# ::size0 2
# ::size1 8
# ::id deep_recursion_rc_23
# ::suppl deep_recursion_rc_23
(u_7115 / like-01
        :ARG0 (r / boy
                 :ARG0-of (u_7122 / sleep-01
                                  :ARG1-of (u_7116 / assume-02
                                                   :ARG0 (u_7121 / we)
                                                   :ARG1-of (u_7117 / claim-01
                                                                    :ARG0 (u_7120 / you)
                                                                    :ARG1-of (u_7118 / think-01
                                                                                     :ARG0 (u_7119 / i))))))
        :ARG1 (u_7123 / kid))

# ::snt The girls who we said that you thought that I assumed sneezed arrived
# ::tree TP_intr(arrived,DP_the_with_RC(DP_RC(girls,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_gap_end_recursion(CP_with_gap_base(said,we)))),sneezed))))
# ::size0 2
# ::size1 8
# ::id deep_recursion_rc_24
# ::suppl deep_recursion_rc_24
(u_7131 / arrive-01
        :ARG1 (r / girl
                 :ARG0-of (u_7130 / sneeze-01
                                  :ARG1-of (u_7124 / assume-02
                                                   :ARG0 (u_7129 / i)
                                                   :ARG1-of (u_7125 / think-01
                                                                    :ARG0 (u_7128 / you)
                                                                    :ARG1-of (u_7126 / say-01
                                                                                     :ARG0 (u_7127 / we)))))))

# ::snt The doctor who you thought that we assumed that the soldier claimed won sneezed
# ::tree TP_intr(sneezed,DP_the_with_RC(DP_RC(doctor,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(soldier))),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_gap_end_recursion(CP_with_gap_base(thought,you)))),won))))
# ::size0 2
# ::size1 8
# ::id deep_recursion_rc_25
# ::suppl deep_recursion_rc_25
(u_7138 / sneeze-01
        :ARG0 (d / doctor
                 :ARG0-of (r / win-01
                             :ARG1-of (u_7136 / claim-01
                                              :ARG0 (u_7137 / soldier)
                                              :ARG1-of (u_7132 / assume-02
                                                               :ARG0 (u_7135 / we)
                                                               :ARG1-of (u_7133 / think-01
                                                                                :ARG0 (u_7134 / you)))))))

# ::snt You claimed that the girls who we thought that I thought that the kids said sneezed slept
# ::tree TP_CP(claimed,you,TP_intr(slept,DP_the_with_RC(DP_RC(girls,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_gap_end_recursion(CP_with_gap_base(thought,we)))),sneezed)))))
# ::size0 2
# ::size1 9
# ::id deep_recursion_rc_26
# ::suppl deep_recursion_rc_26
(u_7147 / claim-01
        :ARG0 (r / you)
        :ARG1 (u_7146 / sleep-01
                      :ARG0 (u_7148 / girl
                                    :ARG0-of (u_7145 / sneeze-01
                                                     :ARG1-of (u_7139 / say-01
                                                                      :ARG0 (u_7144 / kid)
                                                                      :ARG1-of (u_7140 / think-01
                                                                                       :ARG0 (u_7143 / i)
                                                                                       :ARG1-of (u_7141 / think-01
                                                                                                        :ARG0 (u_7142 / we))))))))

# ::snt The astronaut who I thought that you thought that the girls said arrived liked the soldier
# ::tree TP_tr(liked,DP_the_obj(NP_unary(soldier)),DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_gap_end_recursion(CP_with_gap_base(thought,I)))),arrived))))
# ::size0 2
# ::size1 8
# ::id deep_recursion_rc_27
# ::suppl deep_recursion_rc_27
(u_7156 / like-01
        :ARG0 (a / astronaut
                 :ARG1-of (r / arrive-01
                             :ARG1-of (u_7150 / say-01
                                              :ARG0 (u_7155 / girl)
                                              :ARG1-of (u_7151 / think-01
                                                               :ARG0 (u_7154 / you)
                                                               :ARG1-of (u_7152 / think-01
                                                                                :ARG0 (u_7153 / i))))))
        :ARG1 (s / soldier))

# ::snt The boys who we thought that the astronaut said that I assumed arrived sneezed
# ::tree TP_intr(sneezed,DP_the_with_RC(DP_RC(boys,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(astronaut))),CP_gap_end_recursion(CP_with_gap_base(thought,we)))),arrived))))
# ::size0 2
# ::size1 9
# ::id deep_recursion_rc_28
# ::suppl deep_recursion_rc_28
(u_7163 / sneeze-01
        :ARG0 (r / boy
                 :ARG1-of (u_7162 / arrive-01
                                  :ARG1-of (u_7157 / assume-02
                                                   :ARG0 (u_7161 / i)
                                                   :ARG1-of (u_7160 / say-01
                                                                    :ARG0 (a / astronaut)
                                                                    :ARG1-of (u_7158 / think-01
                                                                                     :ARG0 (u_7159 / we)))))))

# ::snt The soldier who we thought that the kids said that you thought sneezed arrived
# ::tree TP_intr(arrived,DP_the_with_RC(DP_RC(soldier,subj_rel(CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(kids))),CP_gap_end_recursion(CP_with_gap_base(thought,we)))),sneezed))))
# ::size0 2
# ::size1 9
# ::id deep_recursion_rc_29
# ::suppl deep_recursion_rc_29
(u_7170 / arrive-01
        :ARG1 (s / soldier
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7164 / think-01
                                              :ARG0 (u_7169 / you)
                                              :ARG1-of (u_7165 / say-01
                                                               :ARG0 (u_7168 / kid)
                                                               :ARG1-of (u_7166 / think-01
                                                                                :ARG0 (u_7167 / we)))))))

# ::snt The lawyer who you assumed that the girls said that I assumed that we assumed sneezed hated the boys
# ::tree TP_tr(hated,DP_the_obj(NP_unary(boys)),DP_the_with_RC(DP_RC(lawyer,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(assumed,you))))),sneezed))))
# ::size0 3
# ::size1 10
# ::id deep_recursion_rc_30
# ::suppl deep_recursion_rc_30
(u_7171 / hate-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7172 / assume-02
                                              :ARG0 (u_7179 / we)
                                              :ARG1-of (u_7173 / assume-02
                                                               :ARG0 (u_7178 / i)
                                                               :ARG1-of (u_7174 / say-01
                                                                                :ARG0 (u_7177 / girl)
                                                                                :ARG1-of (u_7175 / assume-02
                                                                                                 :ARG0 (u_7176 / you)))))))
        :ARG1 (u_7180 / boy))

# ::snt The girls who I claimed that the boys said that you assumed that we thought arrived liked the kids
# ::tree TP_tr(liked,DP_the_obj(NP_unary(kids)),DP_the_with_RC(DP_RC(girls,subj_rel(CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(boys))),CP_gap_end_recursion(CP_with_gap_base(claimed,I))))),arrived))))
# ::size0 3
# ::size1 10
# ::id deep_recursion_rc_31
# ::suppl deep_recursion_rc_31
(u_7181 / like-01
        :ARG0 (r / girl
                 :ARG1-of (u_7190 / arrive-01
                                  :ARG1-of (u_7182 / think-01
                                                   :ARG0 (u_7189 / we)
                                                   :ARG1-of (u_7183 / assume-02
                                                                    :ARG0 (u_7188 / you)
                                                                    :ARG1-of (u_7184 / say-01
                                                                                     :ARG0 (u_7187 / boy)
                                                                                     :ARG1-of (u_7185 / claim-01
                                                                                                      :ARG0 (u_7186 / i)))))))
        :ARG1 (u_7191 / kid))

# ::snt The girls who we claimed that you said that the astronaut assumed that I assumed slept won
# ::tree TP_intr(won,DP_the_with_RC(DP_RC(girls,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(astronaut))),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_gap_end_recursion(CP_with_gap_base(claimed,we))))),slept))))
# ::size0 3
# ::size1 9
# ::id deep_recursion_rc_32
# ::suppl deep_recursion_rc_32
(u_7200 / win-01
        :ARG0 (r / girl
                 :ARG0-of (u_7199 / sleep-01
                                  :ARG1-of (u_7192 / assume-02
                                                   :ARG0 (u_7198 / i)
                                                   :ARG1-of (u_7197 / assume-02
                                                                    :ARG0 (a / astronaut)
                                                                    :ARG1-of (u_7193 / say-01
                                                                                     :ARG0 (u_7196 / you)
                                                                                     :ARG1-of (u_7194 / claim-01
                                                                                                      :ARG0 (u_7195 / we))))))))

# ::snt The lawyer who I claimed that we said that you assumed that the doctor thought arrived hated the girls
# ::tree TP_tr(hated,DP_the_obj(NP_unary(girls)),DP_the_with_RC(DP_RC(lawyer,subj_rel(CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(doctor))),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_gap_end_recursion(CP_with_gap_base(claimed,I))))),arrived))))
# ::size0 3
# ::size1 9
# ::id deep_recursion_rc_33
# ::suppl deep_recursion_rc_33
(u_7201 / hate-01
        :ARG0 (m / lawyer
                 :ARG1-of (r / arrive-01
                             :ARG1-of (u_7208 / think-01
                                              :ARG0 (d / doctor)
                                              :ARG1-of (u_7202 / assume-02
                                                               :ARG0 (u_7207 / you)
                                                               :ARG1-of (u_7203 / say-01
                                                                                :ARG0 (u_7206 / we)
                                                                                :ARG1-of (u_7204 / claim-01
                                                                                                 :ARG0 (u_7205 / i)))))))
        :ARG1 (u_7209 / girl))

# ::snt The kids who you claimed that we assumed that the girls said that I said slept liked the doctor
# ::tree TP_tr(liked,DP_the_obj(NP_unary(doctor)),DP_the_with_RC(DP_RC(kids,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_gap_end_recursion(CP_with_gap_base(claimed,you))))),slept))))
# ::size0 3
# ::size1 9
# ::id deep_recursion_rc_34
# ::suppl deep_recursion_rc_34
(u_7219 / like-01
        :ARG0 (r / kid
                 :ARG0-of (u_7218 / sleep-01
                                  :ARG1-of (u_7210 / say-01
                                                   :ARG0 (u_7217 / i)
                                                   :ARG1-of (u_7211 / say-01
                                                                    :ARG0 (u_7216 / girl)
                                                                    :ARG1-of (u_7212 / assume-02
                                                                                     :ARG0 (u_7215 / we)
                                                                                     :ARG1-of (u_7213 / claim-01
                                                                                                      :ARG0 (u_7214 / you)))))))
        :ARG1 (d / doctor))

# ::snt The doctor who the lawyer claimed that you thought that we assumed that the boys said sneezed liked the kids
# ::tree TP_tr(liked,DP_the_obj(NP_unary(kids)),DP_the_with_RC(DP_RC(doctor,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(lawyer))))))),sneezed))))
# ::size0 3
# ::size1 11
# ::id deep_recursion_rc_35
# ::suppl deep_recursion_rc_35
(u_7220 / like-01
        :ARG0 (d / doctor
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7221 / say-01
                                              :ARG0 (u_7227 / boy)
                                              :ARG1-of (u_7222 / assume-02
                                                               :ARG0 (u_7226 / we)
                                                               :ARG1-of (u_7223 / think-01
                                                                                :ARG0 (u_7225 / you)
                                                                                :ARG1-of (u_7224 / claim-01
                                                                                                 :ARG0 (m / lawyer)))))))
        :ARG1 (u_7228 / kid))

# ::snt The soldier who I said that the lawyer claimed that we claimed that you assumed won slept
# ::tree TP_intr(slept,DP_the_with_RC(DP_RC(soldier,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(lawyer))),CP_gap_end_recursion(CP_with_gap_base(said,I))))),won))))
# ::size0 3
# ::size1 10
# ::id deep_recursion_rc_36
# ::suppl deep_recursion_rc_36
(u_7236 / sleep-01
        :ARG0 (s / soldier
                 :ARG0-of (r / win-01
                             :ARG1-of (u_7229 / assume-02
                                              :ARG0 (u_7235 / you)
                                              :ARG1-of (u_7230 / claim-01
                                                               :ARG0 (u_7234 / we)
                                                               :ARG1-of (u_7233 / claim-01
                                                                                :ARG0 (m / lawyer)
                                                                                :ARG1-of (u_7231 / say-01
                                                                                                 :ARG0 (u_7232 / i))))))))

# ::snt The kids who we thought that the soldier claimed that I assumed that you claimed slept won
# ::tree TP_intr(won,DP_the_with_RC(DP_RC(kids,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(soldier))),CP_gap_end_recursion(CP_with_gap_base(thought,we))))),slept))))
# ::size0 3
# ::size1 10
# ::id deep_recursion_rc_37
# ::suppl deep_recursion_rc_37
(u_7246 / win-01
        :ARG0 (r / kid
                 :ARG0-of (u_7245 / sleep-01
                                  :ARG1-of (u_7237 / claim-01
                                                   :ARG0 (u_7243 / you)
                                                   :ARG1-of (u_7238 / assume-02
                                                                    :ARG0 (u_7242 / i)
                                                                    :ARG1-of (u_7241 / claim-01
                                                                                     :ARG0 (u_7244 / soldier)
                                                                                     :ARG1-of (u_7239 / think-01
                                                                                                      :ARG0 (u_7240 / we))))))))

# ::snt The lawyer who I thought that the soldier thought that we thought that you assumed sneezed hated the astronaut
# ::tree TP_tr(hated,DP_the_obj(NP_unary(astronaut)),DP_the_with_RC(DP_RC(lawyer,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(soldier))),CP_gap_end_recursion(CP_with_gap_base(thought,I))))),sneezed))))
# ::size0 3
# ::size1 10
# ::id deep_recursion_rc_38
# ::suppl deep_recursion_rc_38
(u_7255 / hate-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7247 / assume-02
                                              :ARG0 (u_7253 / you)
                                              :ARG1-of (u_7248 / think-01
                                                               :ARG0 (u_7252 / we)
                                                               :ARG1-of (u_7251 / think-01
                                                                                :ARG0 (u_7254 / soldier)
                                                                                :ARG1-of (u_7249 / think-01
                                                                                                 :ARG0 (u_7250 / i)))))))
        :ARG1 (a / astronaut))

# ::snt The doctor who I said that the kids thought that you said that we assumed won liked the lawyer
# ::tree TP_tr(liked,DP_the_obj(NP_unary(lawyer)),DP_the_with_RC(DP_RC(doctor,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(kids))),CP_gap_end_recursion(CP_with_gap_base(said,I))))),won))))
# ::size0 3
# ::size1 10
# ::id deep_recursion_rc_39
# ::suppl deep_recursion_rc_39
(u_7264 / like-01
        :ARG0 (d / doctor
                 :ARG0-of (r / win-01
                             :ARG1-of (u_7256 / assume-02
                                              :ARG0 (u_7263 / we)
                                              :ARG1-of (u_7257 / say-01
                                                               :ARG0 (u_7262 / you)
                                                               :ARG1-of (u_7258 / think-01
                                                                                :ARG0 (u_7261 / kid)
                                                                                :ARG1-of (u_7259 / say-01
                                                                                                 :ARG0 (u_7260 / i)))))))
        :ARG1 (m / lawyer))

# ::snt The soldier who I assumed that the astronaut said that you said that the doctor thought that we thought slept hated the lawyer
# ::tree TP_tr(hated,DP_the_obj(NP_unary(lawyer)),DP_the_with_RC(DP_RC(soldier,subj_rel(CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(doctor))),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(astronaut))),CP_gap_end_recursion(CP_with_gap_base(assumed,I)))))),slept))))
# ::size0 4
# ::size1 11
# ::id deep_recursion_rc_40
# ::suppl deep_recursion_rc_40
(u_7273 / hate-01
        :ARG0 (s / soldier
                 :ARG0-of (r / sleep-01
                             :ARG1-of (u_7265 / think-01
                                              :ARG0 (u_7272 / we)
                                              :ARG1-of (u_7271 / think-01
                                                               :ARG0 (d / doctor)
                                                               :ARG1-of (u_7266 / say-01
                                                                                :ARG0 (u_7270 / you)
                                                                                :ARG1-of (u_7269 / say-01
                                                                                                 :ARG0 (a / astronaut)
                                                                                                 :ARG1-of (u_7267 / assume-02
                                                                                                                  :ARG0 (u_7268 / i))))))))
        :ARG1 (m / lawyer))

# ::snt The lawyer who I thought that the girls said that you assumed that the soldier thought that we claimed sneezed hated the kids
# ::tree TP_tr(hated,DP_the_obj(NP_unary(kids)),DP_the_with_RC(DP_RC(lawyer,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(soldier))),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(thought,I)))))),sneezed))))
# ::size0 4
# ::size1 11
# ::id deep_recursion_rc_41
# ::suppl deep_recursion_rc_41
(u_7274 / hate-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7275 / claim-01
                                              :ARG0 (u_7283 / we)
                                              :ARG1-of (u_7282 / think-01
                                                               :ARG0 (u_7284 / soldier)
                                                               :ARG1-of (u_7276 / assume-02
                                                                                :ARG0 (u_7281 / you)
                                                                                :ARG1-of (u_7277 / say-01
                                                                                                 :ARG0 (u_7280 / girl)
                                                                                                 :ARG1-of (u_7278 / think-01
                                                                                                                  :ARG0 (u_7279 / i))))))))
        :ARG1 (u_7285 / kid))

# ::snt The lawyer who the doctor thought that we assumed that you claimed that I thought that the soldier claimed slept hated the girls
# ::tree TP_tr(hated,DP_the_obj(NP_unary(girls)),DP_the_with_RC(DP_RC(lawyer,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(soldier))),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_gap_end_recursion(CP_with_gap_base(thought,DP_the(NP_unary(doctor)))))))),slept))))
# ::size0 4
# ::size1 12
# ::id deep_recursion_rc_42
# ::suppl deep_recursion_rc_42
(u_7286 / hate-01
        :ARG0 (m / lawyer
                 :ARG0-of (r / sleep-01
                             :ARG1-of (u_7294 / claim-01
                                              :ARG0 (u_7295 / soldier)
                                              :ARG1-of (u_7287 / think-01
                                                               :ARG0 (u_7293 / i)
                                                               :ARG1-of (u_7288 / claim-01
                                                                                :ARG0 (u_7292 / you)
                                                                                :ARG1-of (u_7289 / assume-02
                                                                                                 :ARG0 (u_7291 / we)
                                                                                                 :ARG1-of (u_7290 / think-01
                                                                                                                  :ARG0 (d / doctor))))))))
        :ARG1 (u_7296 / girl))

# ::snt The boys who we thought that you said that I said that the doctor said that the soldier claimed sneezed won
# ::tree TP_intr(won,DP_the_with_RC(DP_RC(boys,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(soldier))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(doctor))),CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_gap_end_recursion(CP_with_gap_base(thought,we)))))),sneezed))))
# ::size0 4
# ::size1 10
# ::id deep_recursion_rc_43
# ::suppl deep_recursion_rc_43
(u_7307 / win-01
        :ARG0 (r / boy
                 :ARG0-of (u_7306 / sneeze-01
                                  :ARG1-of (u_7304 / claim-01
                                                   :ARG0 (u_7305 / soldier)
                                                   :ARG1-of (u_7303 / say-01
                                                                    :ARG0 (d / doctor)
                                                                    :ARG1-of (u_7297 / say-01
                                                                                     :ARG0 (u_7302 / i)
                                                                                     :ARG1-of (u_7298 / say-01
                                                                                                      :ARG0 (u_7301 / you)
                                                                                                      :ARG1-of (u_7299 / think-01
                                                                                                                       :ARG0 (u_7300 / we)))))))))

# ::snt The soldier who you said that I thought that we claimed that the boys assumed that the doctor claimed slept hated the astronaut
# ::tree TP_tr(hated,DP_the_obj(NP_unary(astronaut)),DP_the_with_RC(DP_RC(soldier,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(doctor))),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(thought,I),CP_gap_end_recursion(CP_with_gap_base(said,you)))))),slept))))
# ::size0 4
# ::size1 10
# ::id deep_recursion_rc_44
# ::suppl deep_recursion_rc_44
(u_7317 / hate-01
        :ARG0 (s / soldier
                 :ARG0-of (r / sleep-01
                             :ARG1-of (u_7316 / claim-01
                                              :ARG0 (d / doctor)
                                              :ARG1-of (u_7308 / assume-02
                                                               :ARG0 (u_7315 / boy)
                                                               :ARG1-of (u_7309 / claim-01
                                                                                :ARG0 (u_7314 / we)
                                                                                :ARG1-of (u_7310 / think-01
                                                                                                 :ARG0 (u_7313 / i)
                                                                                                 :ARG1-of (u_7311 / say-01
                                                                                                                  :ARG0 (u_7312 / you))))))))
        :ARG1 (a / astronaut))

# ::snt The girls who the astronaut thought that you assumed that I claimed that we assumed that the lawyer thought won liked the boys
# ::tree TP_tr(liked,DP_the_obj(NP_unary(boys)),DP_the_with_RC(DP_RC(girls,subj_rel(CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(lawyer))),CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(thought,DP_the(NP_unary(astronaut)))))))),won))))
# ::size0 4
# ::size1 12
# ::id deep_recursion_rc_45
# ::suppl deep_recursion_rc_45
(u_7318 / like-01
        :ARG0 (r / girl
                 :ARG0-of (u_7327 / win-01
                                  :ARG1-of (u_7326 / think-01
                                                   :ARG0 (m / lawyer)
                                                   :ARG1-of (u_7319 / assume-02
                                                                    :ARG0 (u_7325 / we)
                                                                    :ARG1-of (u_7320 / claim-01
                                                                                     :ARG0 (u_7324 / i)
                                                                                     :ARG1-of (u_7321 / assume-02
                                                                                                      :ARG0 (u_7323 / you)
                                                                                                      :ARG1-of (u_7322 / think-01
                                                                                                                       :ARG0 (a / astronaut))))))))
        :ARG1 (u_7328 / boy))

# ::snt The doctor assumed that the girls who the astronaut thought that the boys claimed that you thought that we thought that I claimed sneezed arrived
# ::tree TP_CP(assumed,DP_the(NP_unary(doctor)),TP_intr(arrived,DP_the_with_RC(DP_RC(girls,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(boys))),CP_gap_end_recursion(CP_with_gap_base(thought,DP_the(NP_unary(astronaut)))))))),sneezed)))))
# ::size0 4
# ::size1 13
# ::id deep_recursion_rc_46
# ::suppl deep_recursion_rc_46
(u_7340 / assume-02
        :ARG0 (d / doctor)
        :ARG1 (u_7339 / arrive-01
                      :ARG1 (r / girl
                               :ARG0-of (u_7338 / sneeze-01
                                                :ARG1-of (u_7329 / claim-01
                                                                 :ARG0 (u_7337 / i)
                                                                 :ARG1-of (u_7330 / think-01
                                                                                  :ARG0 (u_7336 / we)
                                                                                  :ARG1-of (u_7331 / think-01
                                                                                                   :ARG0 (u_7335 / you)
                                                                                                   :ARG1-of (u_7332 / claim-01
                                                                                                                    :ARG0 (u_7334 / boy)
                                                                                                                    :ARG1-of (u_7333 / think-01
                                                                                                                                     :ARG0 (a / astronaut))))))))))

# ::snt The doctor who the kids assumed that the girls said that you assumed that I assumed that we claimed won hated the astronaut
# ::tree TP_tr(hated,DP_the_obj(NP_unary(astronaut)),DP_the_with_RC(DP_RC(doctor,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(assumed,DP_the(NP_unary(kids)))))))),won))))
# ::size0 4
# ::size1 12
# ::id deep_recursion_rc_47
# ::suppl deep_recursion_rc_47
(u_7351 / hate-01
        :ARG0 (d / doctor
                 :ARG0-of (r / win-01
                             :ARG1-of (u_7341 / claim-01
                                              :ARG0 (u_7350 / we)
                                              :ARG1-of (u_7342 / assume-02
                                                               :ARG0 (u_7349 / i)
                                                               :ARG1-of (u_7343 / assume-02
                                                                                :ARG0 (u_7348 / you)
                                                                                :ARG1-of (u_7344 / say-01
                                                                                                 :ARG0 (u_7347 / girl)
                                                                                                 :ARG1-of (u_7345 / assume-02
                                                                                                                  :ARG0 (u_7346 / kid))))))))
        :ARG1 (a / astronaut))

# ::snt The doctor who the soldier thought that you assumed that we claimed that I claimed that the boys said sneezed won
# ::tree TP_intr(won,DP_the_with_RC(DP_RC(doctor,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_gap_end_recursion(CP_with_gap_base(thought,DP_the(NP_unary(soldier)))))))),sneezed))))
# ::size0 4
# ::size1 12
# ::id deep_recursion_rc_48
# ::suppl deep_recursion_rc_48
(u_7362 / win-01
        :ARG0 (d / doctor
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7352 / say-01
                                              :ARG0 (u_7360 / boy)
                                              :ARG1-of (u_7353 / claim-01
                                                               :ARG0 (u_7359 / i)
                                                               :ARG1-of (u_7354 / claim-01
                                                                                :ARG0 (u_7358 / we)
                                                                                :ARG1-of (u_7355 / assume-02
                                                                                                 :ARG0 (u_7357 / you)
                                                                                                 :ARG1-of (u_7356 / think-01
                                                                                                                  :ARG0 (u_7361 / soldier)))))))))

# ::snt The astronaut who I thought that the girls said that the boys said that the doctor thought that we thought sneezed liked the soldier
# ::tree TP_tr(liked,DP_the_obj(NP_unary(soldier)),DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(doctor))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(thought,I)))))),sneezed))))
# ::size0 4
# ::size1 11
# ::id deep_recursion_rc_49
# ::suppl deep_recursion_rc_49
(u_7373 / like-01
        :ARG0 (a / astronaut
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7364 / think-01
                                              :ARG0 (u_7372 / we)
                                              :ARG1-of (u_7371 / think-01
                                                               :ARG0 (d / doctor)
                                                               :ARG1-of (u_7365 / say-01
                                                                                :ARG0 (u_7370 / boy)
                                                                                :ARG1-of (u_7366 / say-01
                                                                                                 :ARG0 (u_7369 / girl)
                                                                                                 :ARG1-of (u_7367 / think-01
                                                                                                                  :ARG0 (u_7368 / i))))))))
        :ARG1 (s / soldier))

# ::snt The soldier who I claimed that we said that you said that the doctor said that the kids thought that the lawyer thought sneezed liked the boys
# ::tree TP_tr(liked,DP_the_obj(NP_unary(boys)),DP_the_with_RC(DP_RC(soldier,subj_rel(CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(lawyer))),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(doctor))),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(said,we),CP_gap_end_recursion(CP_with_gap_base(claimed,I))))))),sneezed))))
# ::size0 5
# ::size1 11
# ::id deep_recursion_rc_50
# ::suppl deep_recursion_rc_50
(u_7374 / like-01
        :ARG0 (s / soldier
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7384 / think-01
                                              :ARG0 (m / lawyer)
                                              :ARG1-of (u_7375 / think-01
                                                               :ARG0 (u_7383 / kid)
                                                               :ARG1-of (u_7382 / say-01
                                                                                :ARG0 (d / doctor)
                                                                                :ARG1-of (u_7376 / say-01
                                                                                                 :ARG0 (u_7381 / you)
                                                                                                 :ARG1-of (u_7377 / say-01
                                                                                                                  :ARG0 (u_7380 / we)
                                                                                                                  :ARG1-of (u_7378 / claim-01
                                                                                                                                   :ARG0 (u_7379 / i)))))))))
        :ARG1 (u_7385 / boy))

# ::snt The boys who I assumed that the soldier claimed that the girls claimed that the lawyer claimed that you thought that we thought arrived won
# ::tree TP_intr(won,DP_the_with_RC(DP_RC(boys,subj_rel(CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(lawyer))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(girls))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(soldier))),CP_gap_end_recursion(CP_with_gap_base(assumed,I))))))),arrived))))
# ::size0 5
# ::size1 12
# ::id deep_recursion_rc_51
# ::suppl deep_recursion_rc_51
(u_7398 / win-01
        :ARG0 (r / boy
                 :ARG1-of (u_7397 / arrive-01
                                  :ARG1-of (u_7386 / think-01
                                                   :ARG0 (u_7395 / we)
                                                   :ARG1-of (u_7387 / think-01
                                                                    :ARG0 (u_7394 / you)
                                                                    :ARG1-of (u_7393 / claim-01
                                                                                     :ARG0 (m / lawyer)
                                                                                     :ARG1-of (u_7388 / claim-01
                                                                                                      :ARG0 (u_7392 / girl)
                                                                                                      :ARG1-of (u_7391 / claim-01
                                                                                                                       :ARG0 (u_7396 / soldier)
                                                                                                                       :ARG1-of (u_7389 / assume-02
                                                                                                                                        :ARG0 (u_7390 / i))))))))))

# ::snt The astronaut who I assumed that the boys claimed that the kids thought that you said that we thought that the doctor said won arrived
# ::tree TP_intr(arrived,DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(doctor))),CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(boys))),CP_gap_end_recursion(CP_with_gap_base(assumed,I))))))),won))))
# ::size0 5
# ::size1 12
# ::id deep_recursion_rc_52
# ::suppl deep_recursion_rc_52
(u_7410 / arrive-01
        :ARG1 (a / astronaut
                 :ARG0-of (r / win-01
                             :ARG1-of (u_7409 / say-01
                                              :ARG0 (d / doctor)
                                              :ARG1-of (u_7399 / think-01
                                                               :ARG0 (u_7408 / we)
                                                               :ARG1-of (u_7400 / say-01
                                                                                :ARG0 (u_7407 / you)
                                                                                :ARG1-of (u_7401 / think-01
                                                                                                 :ARG0 (u_7406 / kid)
                                                                                                 :ARG1-of (u_7402 / claim-01
                                                                                                                  :ARG0 (u_7405 / boy)
                                                                                                                  :ARG1-of (u_7403 / assume-02
                                                                                                                                   :ARG0 (u_7404 / i))))))))))

# ::snt The astronaut who the soldier assumed that we thought that the boys assumed that I claimed that you said that the kids claimed sneezed slept
# ::tree TP_intr(slept,DP_the_with_RC(DP_RC(astronaut,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_gap_end_recursion(CP_with_gap_base(assumed,DP_the(NP_unary(soldier))))))))),sneezed))))
# ::size0 5
# ::size1 13
# ::id deep_recursion_rc_53
# ::suppl deep_recursion_rc_53
(u_7423 / sleep-01
        :ARG0 (a / astronaut
                 :ARG0-of (r / sneeze-01
                             :ARG1-of (u_7411 / claim-01
                                              :ARG0 (u_7421 / kid)
                                              :ARG1-of (u_7412 / say-01
                                                               :ARG0 (u_7420 / you)
                                                               :ARG1-of (u_7413 / claim-01
                                                                                :ARG0 (u_7419 / i)
                                                                                :ARG1-of (u_7414 / assume-02
                                                                                                 :ARG0 (u_7418 / boy)
                                                                                                 :ARG1-of (u_7415 / think-01
                                                                                                                  :ARG0 (u_7417 / we)
                                                                                                                  :ARG1-of (u_7416 / assume-02
                                                                                                                                   :ARG0 (u_7422 / soldier))))))))))

# ::snt The kids who the astronaut claimed that the girls assumed that the doctor claimed that you said that we thought that I claimed slept hated the boys
# ::tree TP_tr(hated,DP_the_obj(NP_unary(boys)),DP_the_with_RC(DP_RC(kids,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,I),CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(doctor))),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(astronaut))))))))),slept))))
# ::size0 5
# ::size1 13
# ::id deep_recursion_rc_54
# ::suppl deep_recursion_rc_54
(u_7424 / hate-01
        :ARG0 (r / kid
                 :ARG0-of (u_7435 / sleep-01
                                  :ARG1-of (u_7425 / claim-01
                                                   :ARG0 (u_7434 / i)
                                                   :ARG1-of (u_7426 / think-01
                                                                    :ARG0 (u_7433 / we)
                                                                    :ARG1-of (u_7427 / say-01
                                                                                     :ARG0 (u_7432 / you)
                                                                                     :ARG1-of (u_7431 / claim-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_7428 / assume-02
                                                                                                                       :ARG0 (u_7430 / girl)
                                                                                                                       :ARG1-of (u_7429 / claim-01
                                                                                                                                        :ARG0 (a / astronaut)))))))))
        :ARG1 (u_7436 / boy))

# ::snt The soldier who I said that the girls said that the boys said that you thought that the kids said that we assumed arrived hated the doctor
# ::tree TP_tr(hated,DP_the_obj(NP_unary(doctor)),DP_the_with_RC(DP_RC(soldier,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,we),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(thought,you),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(girls))),CP_gap_end_recursion(CP_with_gap_base(said,I))))))),arrived))))
# ::size0 5
# ::size1 12
# ::id deep_recursion_rc_55
# ::suppl deep_recursion_rc_55
(u_7449 / hate-01
        :ARG0 (s / soldier
                 :ARG1-of (r / arrive-01
                             :ARG1-of (u_7437 / assume-02
                                              :ARG0 (u_7448 / we)
                                              :ARG1-of (u_7438 / say-01
                                                               :ARG0 (u_7447 / kid)
                                                               :ARG1-of (u_7439 / think-01
                                                                                :ARG0 (u_7446 / you)
                                                                                :ARG1-of (u_7440 / say-01
                                                                                                 :ARG0 (u_7445 / boy)
                                                                                                 :ARG1-of (u_7441 / say-01
                                                                                                                  :ARG0 (u_7444 / girl)
                                                                                                                  :ARG1-of (u_7442 / say-01
                                                                                                                                   :ARG0 (u_7443 / i)))))))))
        :ARG1 (d / doctor))

# ::snt The kids who the girls claimed that we thought that I said that the lawyer thought that you assumed that the boys claimed sneezed slept
# ::tree TP_intr(slept,DP_the_with_RC(DP_RC(kids,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(boys))),CP_with_gap_recursive(CP_with_gap_base(assumed,you),CP_with_gap_recursive(CP_with_gap_base(thought,DP_the(NP_unary(lawyer))),CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(thought,we),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(girls))))))))),sneezed))))
# ::size0 5
# ::size1 13
# ::id deep_recursion_rc_56
# ::suppl deep_recursion_rc_56
(u_7462 / sleep-01
        :ARG0 (r / kid
                 :ARG0-of (u_7461 / sneeze-01
                                  :ARG1-of (u_7450 / claim-01
                                                   :ARG0 (u_7460 / boy)
                                                   :ARG1-of (u_7451 / assume-02
                                                                    :ARG0 (u_7459 / you)
                                                                    :ARG1-of (u_7458 / think-01
                                                                                     :ARG0 (m / lawyer)
                                                                                     :ARG1-of (u_7452 / say-01
                                                                                                      :ARG0 (u_7457 / i)
                                                                                                      :ARG1-of (u_7453 / think-01
                                                                                                                       :ARG0 (u_7456 / we)
                                                                                                                       :ARG1-of (u_7454 / claim-01
                                                                                                                                        :ARG0 (u_7455 / girl))))))))))

# ::snt The soldier who the astronaut claimed that you claimed that I assumed that the kids said that the lawyer claimed that we claimed won sneezed
# ::tree TP_intr(sneezed,DP_the_with_RC(DP_RC(soldier,subj_rel(CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(lawyer))),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(kids))),CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_gap_end_recursion(CP_with_gap_base(claimed,DP_the(NP_unary(astronaut))))))))),won))))
# ::size0 5
# ::size1 13
# ::id deep_recursion_rc_57
# ::suppl deep_recursion_rc_57
(u_7473 / sneeze-01
        :ARG0 (s / soldier
                 :ARG0-of (r / win-01
                             :ARG1-of (u_7463 / claim-01
                                              :ARG0 (u_7472 / we)
                                              :ARG1-of (u_7471 / claim-01
                                                               :ARG0 (m / lawyer)
                                                               :ARG1-of (u_7464 / say-01
                                                                                :ARG0 (u_7470 / kid)
                                                                                :ARG1-of (u_7465 / assume-02
                                                                                                 :ARG0 (u_7469 / i)
                                                                                                 :ARG1-of (u_7466 / claim-01
                                                                                                                  :ARG0 (u_7468 / you)
                                                                                                                  :ARG1-of (u_7467 / claim-01
                                                                                                                                   :ARG0 (a / astronaut))))))))))

# ::snt The kids who the girls assumed that you claimed that the soldier claimed that the astronaut assumed that I said that we said arrived slept
# ::tree TP_intr(slept,DP_the_with_RC(DP_RC(kids,subj_rel(CP_with_gap_recursive(CP_with_gap_base(said,we),CP_with_gap_recursive(CP_with_gap_base(said,I),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(astronaut))),CP_with_gap_recursive(CP_with_gap_base(claimed,DP_the(NP_unary(soldier))),CP_with_gap_recursive(CP_with_gap_base(claimed,you),CP_gap_end_recursion(CP_with_gap_base(assumed,DP_the(NP_unary(girls))))))))),arrived))))
# ::size0 5
# ::size1 13
# ::id deep_recursion_rc_58
# ::suppl deep_recursion_rc_58
(u_7486 / sleep-01
        :ARG0 (r / kid
                 :ARG1-of (u_7485 / arrive-01
                                  :ARG1-of (u_7474 / say-01
                                                   :ARG0 (u_7483 / we)
                                                   :ARG1-of (u_7475 / say-01
                                                                    :ARG0 (u_7482 / i)
                                                                    :ARG1-of (u_7481 / assume-02
                                                                                     :ARG0 (a / astronaut)
                                                                                     :ARG1-of (u_7480 / claim-01
                                                                                                      :ARG0 (u_7484 / soldier)
                                                                                                      :ARG1-of (u_7476 / claim-01
                                                                                                                       :ARG0 (u_7479 / you)
                                                                                                                       :ARG1-of (u_7477 / assume-02
                                                                                                                                        :ARG0 (u_7478 / girl))))))))))

# ::snt The kids who the soldier assumed that the doctor said that we claimed that the lawyer assumed that you said that I assumed arrived hated the astronaut
# ::tree TP_tr(hated,DP_the_obj(NP_unary(astronaut)),DP_the_with_RC(DP_RC(kids,subj_rel(CP_with_gap_recursive(CP_with_gap_base(assumed,I),CP_with_gap_recursive(CP_with_gap_base(said,you),CP_with_gap_recursive(CP_with_gap_base(assumed,DP_the(NP_unary(lawyer))),CP_with_gap_recursive(CP_with_gap_base(claimed,we),CP_with_gap_recursive(CP_with_gap_base(said,DP_the(NP_unary(doctor))),CP_gap_end_recursion(CP_with_gap_base(assumed,DP_the(NP_unary(soldier))))))))),arrived))))
# ::size0 5
# ::size1 13
# ::id deep_recursion_rc_59
# ::suppl deep_recursion_rc_59
(u_7498 / hate-01
        :ARG0 (r / kid
                 :ARG1-of (u_7497 / arrive-01
                                  :ARG1-of (u_7487 / assume-02
                                                   :ARG0 (u_7495 / i)
                                                   :ARG1-of (u_7488 / say-01
                                                                    :ARG0 (u_7494 / you)
                                                                    :ARG1-of (u_7493 / assume-02
                                                                                     :ARG0 (m / lawyer)
                                                                                     :ARG1-of (u_7489 / claim-01
                                                                                                      :ARG0 (u_7492 / we)
                                                                                                      :ARG1-of (u_7491 / say-01
                                                                                                                       :ARG0 (d / doctor)
                                                                                                                       :ARG1-of (u_7490 / assume-02
                                                                                                                                        :ARG0 (u_7496 / soldier)))))))))
        :ARG1 (a / astronaut))

# ::snt The girl attempted to sleep.
# ::tree Sent(SubjCtrlTbar(attempted,sleep),girl)
# ::id nested_control_sanity_check_0
# ::suppl nested_control_sanity_check_0
(u_1 / attempt-01
     :ARG0 (r / girl
              :ARG0-of (u_2 / sleep-01
                            :ARG1-of u_1)))

# ::snt The boy wanted to jump.
# ::tree Sent(SubjCtrlTbar(wanted,jump),boy)
# ::id nested_control_sanity_check_1
# ::suppl nested_control_sanity_check_1
(u_3 / want-01
     :ARG0 (r / boy
              :ARG0-of (u_4 / jump-03
                            :ARG1-of u_3)))

# ::snt The kid hated to attend.
# ::tree Sent(SubjCtrlTbar(hated,attend),kid)
# ::id nested_control_sanity_check_2
# ::suppl nested_control_sanity_check_2
(u_5 / hate-01
     :ARG0 (r / kid
              :ARG0-of (u_6 / attend-01
                            :ARG1-of u_5)))

# ::snt The boy loved to eat.
# ::tree Sent(SubjCtrlTbar(loved,eat),boy)
# ::id nested_control_sanity_check_3
# ::suppl nested_control_sanity_check_3
(u_7 / love-01
     :ARG0 (r / boy
              :ARG0-of (u_8 / eat-01
                            :ARG1-of u_7)))

# ::snt The girl refused to focus.
# ::tree Sent(SubjCtrlTbar(refused,focus),girl)
# ::id nested_control_sanity_check_4
# ::suppl nested_control_sanity_check_4
(u_9 / refuse-01
     :ARG0 (r / girl
              :ARG0-of (u_10 / focus-01
                             :ARG1-of u_9)))

# ::snt The kid persuaded you to sleep.
# ::tree Sent(ObjCtrlTbar(persuaded,sleep,you),kid)
# ::id nested_control_sanity_check_5
# ::suppl nested_control_sanity_check_5
(u_11 / persuade-01
      :ARG0 (r / kid)
      :ARG1 (u_14 / you
                  :ARG0-of (u_13 / sleep-01
                                 :ARG2-of u_11)))

# ::snt The boy asked the astronaut to jump.
# ::tree Sent(ObjCtrlTbar(asked,jump,astronaut),boy)
# ::id nested_control_sanity_check_6
# ::suppl nested_control_sanity_check_6
(u_15 / ask-02
      :ARG0 (r / boy)
      :ARG2 (a / astronaut
               :ARG0-of (u_17 / jump-03
                              :ARG1-of u_15)))

# ::snt The girl begged the monster to attend.
# ::tree Sent(ObjCtrlTbar(begged,attend,monster),girl)
# ::id nested_control_sanity_check_7
# ::suppl nested_control_sanity_check_7
(u_18 / beg-01
      :ARG0 (r / girl)
      :ARG1 (u_21 / monster
                  :ARG0-of (u_20 / attend-01
                                 :ARG2-of u_18)))

# ::snt The kid forced the doctor to eat.
# ::tree Sent(ObjCtrlTbar(forced,eat,doctor),kid)
# ::id nested_control_sanity_check_8
# ::suppl nested_control_sanity_check_8
(u_22 / force-01
      :ARG0 (r / kid)
      :ARG1 (u_25 / doctor
                  :ARG0-of (u_24 / eat-01
                                 :ARG2-of u_22)))

# ::snt The girl persuaded the politician to focus.
# ::tree Sent(ObjCtrlTbar(persuaded,focus,politician),girl)
# ::id nested_control_sanity_check_9
# ::suppl nested_control_sanity_check_9
(u_26 / persuade-01
      :ARG0 (r / girl)
      :ARG1 (u_29 / politician
                  :ARG0-of (u_28 / focus-01
                                 :ARG2-of u_26)))

# ::snt The girl asked the lawyer to focus.
# ::tree Sent(ObjCtrlTbar(asked,focus,lawyer),girl)
# ::id nested_control_sanity_check_10
# ::suppl nested_control_sanity_check_10
(u_30 / ask-02
      :ARG0 (r / girl)
      :ARG2 (m / lawyer
               :ARG0-of (u_32 / focus-01
                              :ARG1-of u_30)))

# ::snt The kid begged the soldier to attend.
# ::tree Sent(ObjCtrlTbar(begged,attend,soldier),kid)
# ::id nested_control_sanity_check_11
# ::suppl nested_control_sanity_check_11
(u_33 / beg-01
      :ARG0 (r / kid)
      :ARG1 (s / soldier
               :ARG0-of (u_35 / attend-01
                              :ARG2-of u_33)))

# ::snt The boy slept and jumped.
# ::tree Sent(Coord_Open_S_fin(and_open_s,slept,jumped),boy)
# ::id nested_control_sanity_check_12
# ::suppl nested_control_sanity_check_12
(u_36 / and
      :op1 (u_38 / sleep-01
                 :ARG0 (r / boy
                          :ARG0-of (u_37 / jump-03
                                         :op2-of u_36))))

# ::snt The professor observed the soldier with the large eyebrows.
# ::tree templateNPAttachmentWithProperty(professor,observe,soldier,large_eyebrows)
# ::id see_with_0
# ::suppl see_with_0
(r / observe-01
   :ARG0 (p / professor)
   :ARG1 (z0 / soldier
             :poss-of (e / eyebrow
                         :mod (l / large))))

# ::snt The baker looked at the girl with the hat.
# ::tree templateNPAttachmentWithProperty(baker,look,girl,hat)
# ::id see_with_1
# ::suppl see_with_1
(r / look-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (g / girl
            :poss-of (h / hat)))

# ::snt The professor peeked at the girl with the large eyebrows.
# ::tree templateNPAttachmentWithProperty(professor,peek,girl,large_eyebrows)
# ::id see_with_2
# ::suppl see_with_2
(r / peek-01
   :ARG0 (p / professor)
   :ARG1 (g / girl
            :poss-of (e / eyebrow
                        :mod (l / large))))

# ::snt John peeked at the soldier with the hat.
# ::tree templateNPAttachmentWithProperty(John,peek,soldier,hat)
# ::id see_with_3
# ::suppl see_with_3
(r / peek-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (z0 / soldier
             :poss-of (h / hat)))

# ::snt The baker observed the soldier with the weird hair.
# ::tree templateNPAttachmentWithProperty(baker,observe,soldier,weird_hair)
# ::id see_with_4
# ::suppl see_with_4
(r / observe-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (z0 / soldier
             :poss-of (h / hair
                         :mod (w / weird))))

# ::snt The professor peeked at the journalist with the hat.
# ::tree templateNPAttachmentWithProperty(professor,peek,journalist,hat)
# ::id see_with_5
# ::suppl see_with_5
(r / peek-01
   :ARG0 (p / professor)
   :ARG1 (z0 / journalist
             :poss-of (h / hat)))

# ::snt The general looked at the journalist with the weird hair.
# ::tree templateNPAttachmentWithProperty(general,look,journalist,weird_hair)
# ::id see_with_6
# ::suppl see_with_6
(r / look-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (u_60 / journalist
               :poss-of (h / hair
                           :mod (w / weird))))

# ::snt John looked at the girl with the red t-shirt.
# ::tree templateNPAttachmentWithProperty(John,look,girl,red_t_shirt)
# ::id see_with_7
# ::suppl see_with_7
(u_62 / look-01
      :ARG0 (p / person
               :name (n / name
                        :op1 "John"))
      :ARG1 (g / girl
               :poss-of (t / t-shirt
                           :ARG1-of (r / red-02))))

# ::snt John looked at the soldier with the hat.
# ::tree templateNPAttachmentWithProperty(John,look,soldier,hat)
# ::id see_with_8
# ::suppl see_with_8
(r / look-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (z0 / soldier
             :poss-of (h / hat)))

# ::snt The professor looked at the stranger with the weird hair.
# ::tree templateNPAttachmentWithProperty(professor,look,stranger,weird_hair)
# ::id see_with_9
# ::suppl see_with_9
(r / look-01
   :ARG0 (p / professor)
   :ARG1 (p2 / stranger
             :poss-of (h / hair
                         :mod (w / weird))))

# ::snt The general looked at the soldier with the large eyebrows.
# ::tree templateNPAttachmentWithProperty(general,look,soldier,large_eyebrows)
# ::id see_with_10
# ::suppl see_with_10
(r / look-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (u_65 / soldier
               :poss-of (e / eyebrow
                           :mod (l / large))))

# ::snt The baker observed the soldier with the hat.
# ::tree templateNPAttachmentWithProperty(baker,observe,soldier,hat)
# ::id see_with_11
# ::suppl see_with_11
(r / observe-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (z0 / soldier
             :poss-of (h / hat)))

# ::snt John peeked at the soldier with the weird hair.
# ::tree templateNPAttachmentWithProperty(John,peek,soldier,weird_hair)
# ::id see_with_12
# ::suppl see_with_12
(r / peek-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (z0 / soldier
             :poss-of (h / hair
                         :mod (w / weird))))

# ::snt The general observed the soldier with the weird hair.
# ::tree templateNPAttachmentWithProperty(general,observe,soldier,weird_hair)
# ::id see_with_13
# ::suppl see_with_13
(r / observe-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (u_67 / soldier
               :poss-of (h / hair
                           :mod (w / weird))))

# ::snt The professor peeked at the stranger with the weird hair.
# ::tree templateNPAttachmentWithProperty(professor,peek,stranger,weird_hair)
# ::id see_with_14
# ::suppl see_with_14
(r / peek-01
   :ARG0 (p / professor)
   :ARG1 (p2 / stranger
             :poss-of (h / hair
                         :mod (w / weird))))

# ::snt John saw the stranger with the hat.
# ::tree templateNPAttachmentWithProperty(John,see,stranger,hat)
# ::id see_with_15
# ::suppl see_with_15
(r / see-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (p2 / stranger
             :poss-of (h / hat)))

# ::snt The general observed the soldier with the large eyebrows.
# ::tree templateNPAttachmentWithProperty(general,observe,soldier,large_eyebrows)
# ::id see_with_16
# ::suppl see_with_16
(r / observe-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (u_69 / soldier
               :poss-of (e / eyebrow
                           :mod (l / large))))

# ::snt The professor looked at the girl with the weird hair.
# ::tree templateNPAttachmentWithProperty(professor,look,girl,weird_hair)
# ::id see_with_17
# ::suppl see_with_17
(r / look-01
   :ARG0 (p / professor)
   :ARG1 (g / girl
            :poss-of (h / hair
                        :mod (w / weird))))

# ::snt The baker peeked at the stranger with the hat.
# ::tree templateNPAttachmentWithProperty(baker,peek,stranger,hat)
# ::id see_with_18
# ::suppl see_with_18
(r / peek-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (p2 / stranger
             :poss-of (h / hat)))

# ::snt John observed the stranger with the red t-shirt.
# ::tree templateNPAttachmentWithProperty(John,observe,stranger,red_t_shirt)
# ::id see_with_19
# ::suppl see_with_19
(u_71 / observe-01
      :ARG0 (p / person
               :name (n / name
                        :op1 "John"))
      :ARG1 (p2 / stranger
                :poss-of (t / t-shirt
                            :ARG1-of (r / red-02))))

# ::snt The professor looked at the soldier with the red t-shirt.
# ::tree templateNPAttachmentWithProperty(professor,look,soldier,red_t_shirt)
# ::id see_with_20
# ::suppl see_with_20
(u_74 / look-01
      :ARG0 (p / professor)
      :ARG1 (z0 / soldier
                :poss-of (t / t-shirt
                            :ARG1-of (r / red-02))))

# ::snt John observed the girl with the hat.
# ::tree templateNPAttachmentWithProperty(John,observe,girl,hat)
# ::id see_with_21
# ::suppl see_with_21
(r / observe-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (g / girl
            :poss-of (h / hat)))

# ::snt Sophie peeked at the soldier with the red t-shirt.
# ::tree templateNPAttachmentWithProperty(Sophie,peek,soldier,red_t_shirt)
# ::id see_with_22
# ::suppl see_with_22
(u_77 / peek-01
      :ARG0 (p / person
               :name (n / name
                        :op1 "Sophie"))
      :ARG1 (z0 / soldier
                :poss-of (t / t-shirt
                            :ARG1-of (r / red-02))))

# ::snt The general peeked at the journalist with the red t-shirt.
# ::tree templateNPAttachmentWithProperty(general,peek,journalist,red_t_shirt)
# ::id see_with_23
# ::suppl see_with_23
(u_80 / peek-01
      :ARG0 (p / person
               :ARG0-of (z0 / have-org-role-91
                            :ARG2 (z1 / general)))
      :ARG1 (u_81 / journalist
                  :poss-of (t / t-shirt
                              :ARG1-of (r / red-02))))

# ::snt John looked at the soldier with the red t-shirt.
# ::tree templateNPAttachmentWithProperty(John,look,soldier,red_t_shirt)
# ::id see_with_24
# ::suppl see_with_24
(u_83 / look-01
      :ARG0 (p / person
               :name (n / name
                        :op1 "John"))
      :ARG1 (z0 / soldier
                :poss-of (t / t-shirt
                            :ARG1-of (r / red-02))))

# ::snt The general knew the girl with the telescope.
# ::tree templateNPAttachmentWithInstrument(general,know,girl,telescope)
# ::id see_with_25
# ::suppl see_with_25
(r / know-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (g / girl
            :poss-of (t / telescope)))

# ::snt The professor understood the stranger with the spyglass.
# ::tree templateNPAttachmentWithInstrument(professor,understand,stranger,spyglass)
# ::id see_with_26
# ::suppl see_with_26
(r / understand-01
   :ARG0 (p / professor)
   :ARG1 (p2 / stranger
             :poss-of (b / spyglass)))

# ::snt The baker knew the soldier with the binoculars.
# ::tree templateNPAttachmentWithInstrument(baker,know,soldier,binoculars)
# ::id see_with_27
# ::suppl see_with_27
(r / know-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (z0 / soldier
             :poss-of (u_85 / binoculars)))

# ::snt Sophie understood the girl with the binoculars.
# ::tree templateNPAttachmentWithInstrument(Sophie,understand,girl,binoculars)
# ::id see_with_28
# ::suppl see_with_28
(r / understand-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (g / girl
            :poss-of (b / binoculars)))

# ::snt The professor hated the girl with the spyglass.
# ::tree templateNPAttachmentWithInstrument(professor,hate,girl,spyglass)
# ::id see_with_29
# ::suppl see_with_29
(r / hate-01
   :ARG0 (p / professor)
   :ARG1 (g / girl
            :poss-of (b / spyglass)))

# ::snt John hated the soldier with the telescope.
# ::tree templateNPAttachmentWithInstrument(John,hate,soldier,telescope)
# ::id see_with_30
# ::suppl see_with_30
(r / hate-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (z0 / soldier
             :poss-of (t / telescope)))

# ::snt The professor hated the journalist with the telescope.
# ::tree templateNPAttachmentWithInstrument(professor,hate,journalist,telescope)
# ::id see_with_31
# ::suppl see_with_31
(r / hate-01
   :ARG0 (p / professor)
   :ARG1 (z0 / journalist
             :poss-of (t / telescope)))

# ::snt Sophie hated the stranger with the spyglass.
# ::tree templateNPAttachmentWithInstrument(Sophie,hate,stranger,spyglass)
# ::id see_with_32
# ::suppl see_with_32
(r / hate-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (p2 / stranger
             :poss-of (b / spyglass)))

# ::snt The professor knew the stranger with the binoculars.
# ::tree templateNPAttachmentWithInstrument(professor,know,stranger,binoculars)
# ::id see_with_33
# ::suppl see_with_33
(r / know-01
   :ARG0 (p / professor)
   :ARG1 (p2 / stranger
             :poss-of (b / binoculars)))

# ::snt John hated the soldier with the binoculars.
# ::tree templateNPAttachmentWithInstrument(John,hate,soldier,binoculars)
# ::id see_with_34
# ::suppl see_with_34
(r / hate-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (z0 / soldier
             :poss-of (b / binoculars)))

# ::snt John sang to the girl with the binoculars.
# ::tree templateNPAttachmentWithInstrument(John,sing_to,girl,binoculars)
# ::id see_with_35
# ::suppl see_with_35
(r / sing-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG2 (g / girl
            :poss-of (b / binoculars)))

# ::snt The baker hated the soldier with the binoculars.
# ::tree templateNPAttachmentWithInstrument(baker,hate,soldier,binoculars)
# ::id see_with_36
# ::suppl see_with_36
(r / hate-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (z0 / soldier
             :poss-of (u_91 / binoculars)))

# ::snt The professor addressed the soldier with the telescope.
# ::tree templateNPAttachmentWithInstrument(professor,address,soldier,telescope)
# ::id see_with_37
# ::suppl see_with_37
(r / address-01
   :ARG0 (p / professor)
   :ARG2 (z0 / soldier
             :poss-of (t / telescope)))

# ::snt The general understood the girl with the binoculars.
# ::tree templateNPAttachmentWithInstrument(general,understand,girl,binoculars)
# ::id see_with_38
# ::suppl see_with_38
(r / understand-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (g / girl
            :poss-of (b / binoculars)))

# ::snt The general knew the girl with the binoculars.
# ::tree templateNPAttachmentWithInstrument(general,know,girl,binoculars)
# ::id see_with_39
# ::suppl see_with_39
(r / know-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (g / girl
            :poss-of (b / binoculars)))

# ::snt The baker knew the soldier with the telescope.
# ::tree templateNPAttachmentWithInstrument(baker,know,soldier,telescope)
# ::id see_with_40
# ::suppl see_with_40
(r / know-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (z0 / soldier
             :poss-of (t / telescope)))

# ::snt The professor sang to the stranger with the telescope.
# ::tree templateNPAttachmentWithInstrument(professor,sing_to,stranger,telescope)
# ::id see_with_41
# ::suppl see_with_41
(r / sing-01
   :ARG0 (p / professor)
   :ARG2 (p2 / stranger
             :poss-of (t / telescope)))

# ::snt The baker understood the journalist with the telescope.
# ::tree templateNPAttachmentWithInstrument(baker,understand,journalist,telescope)
# ::id see_with_42
# ::suppl see_with_42
(r / understand-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (z0 / journalist
             :poss-of (t / telescope)))

# ::snt The professor knew the soldier with the spyglass.
# ::tree templateNPAttachmentWithInstrument(professor,know,soldier,spyglass)
# ::id see_with_43
# ::suppl see_with_43
(r / know-01
   :ARG0 (p / professor)
   :ARG1 (z0 / soldier
             :poss-of (b / spyglass)))

# ::snt The baker knew the girl with the spyglass.
# ::tree templateNPAttachmentWithInstrument(baker,know,girl,spyglass)
# ::id see_with_44
# ::suppl see_with_44
(r / know-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (g / girl
            :poss-of (u_92 / spyglass)))

# ::snt Sophie addressed the journalist with the telescope.
# ::tree templateNPAttachmentWithInstrument(Sophie,address,journalist,telescope)
# ::id see_with_45
# ::suppl see_with_45
(r / address-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG2 (z0 / journalist
             :poss-of (t / telescope)))

# ::snt Sophie sang to the journalist with the spyglass.
# ::tree templateNPAttachmentWithInstrument(Sophie,sing_to,journalist,spyglass)
# ::id see_with_46
# ::suppl see_with_46
(r / sing-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG2 (z0 / journalist
             :poss-of (b / spyglass)))

# ::snt John understood the journalist with the spyglass.
# ::tree templateNPAttachmentWithInstrument(John,understand,journalist,spyglass)
# ::id see_with_47
# ::suppl see_with_47
(r / understand-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (z0 / journalist
             :poss-of (b / spyglass)))

# ::snt John knew the soldier with the telescope.
# ::tree templateNPAttachmentWithInstrument(John,know,soldier,telescope)
# ::id see_with_48
# ::suppl see_with_48
(r / know-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (z0 / soldier
             :poss-of (t / telescope)))

# ::snt The baker sang to the soldier with the binoculars.
# ::tree templateNPAttachmentWithInstrument(baker,sing_to,soldier,binoculars)
# ::id see_with_49
# ::suppl see_with_49
(r / sing-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG2 (z0 / soldier
             :poss-of (u_97 / binoculars)))

# ::snt Sophie looked at the northern lights with the binoculars.
# ::tree templateSeeWithInstrument(Sophie,look,northern_lights,binoculars)
# ::id see_with_50
# ::suppl see_with_50
(r / look-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (c / light
            :location (u_99 / north))
   :instrument (b / binoculars))

# ::snt The professor saw the moon with the spyglass.
# ::tree templateSeeWithInstrument(professor,see,moon,spyglass)
# ::id see_with_51
# ::suppl see_with_51
(r / see-01
   :ARG0 (p / professor)
   :ARG1 (m / moon)
   :instrument (b / spyglass))

# ::snt The general looked at the army with the binoculars.
# ::tree templateSeeWithInstrument(general,look,army,binoculars)
# ::id see_with_52
# ::suppl see_with_52
(r / look-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (a / army)
   :instrument (b / binoculars))

# ::snt John peeked at the northern lights with the spyglass.
# ::tree templateSeeWithInstrument(John,peek,northern_lights,spyglass)
# ::id see_with_53
# ::suppl see_with_53
(r / peek-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (c / light
            :location (u_101 / north))
   :instrument (b / spyglass))

# ::snt The general looked at the rainfall with the telescope.
# ::tree templateSeeWithInstrument(general,look,rainfall,telescope)
# ::id see_with_54
# ::suppl see_with_54
(r / look-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (b / rainfall)
   :instrument (t / telescope))

# ::snt The professor observed the army with the binoculars.
# ::tree templateSeeWithInstrument(professor,observe,army,binoculars)
# ::id see_with_55
# ::suppl see_with_55
(r / observe-01
   :ARG0 (p / professor)
   :ARG1 (a / army)
   :instrument (b / binoculars))

# ::snt The general saw the rainfall with the binoculars.
# ::tree templateSeeWithInstrument(general,see,rainfall,binoculars)
# ::id see_with_56
# ::suppl see_with_56
(r / see-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (b / rainfall)
   :instrument (u_102 / binoculars))

# ::snt John saw the rainfall with the telescope.
# ::tree templateSeeWithInstrument(John,see,rainfall,telescope)
# ::id see_with_57
# ::suppl see_with_57
(r / see-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (b / rainfall)
   :instrument (t / telescope))

# ::snt The baker looked at the moon with the spyglass.
# ::tree templateSeeWithInstrument(baker,look,moon,spyglass)
# ::id see_with_58
# ::suppl see_with_58
(r / look-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (m / moon)
   :instrument (u_104 / spyglass))

# ::snt The baker peeked at the army with the telescope.
# ::tree templateSeeWithInstrument(baker,peek,army,telescope)
# ::id see_with_59
# ::suppl see_with_59
(r / peek-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (a / army)
   :instrument (t / telescope))

# ::snt The general observed the army with the telescope.
# ::tree templateSeeWithInstrument(general,observe,army,telescope)
# ::id see_with_60
# ::suppl see_with_60
(r / observe-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (a / army)
   :instrument (t / telescope))

# ::snt The professor looked at the northern lights with the spyglass.
# ::tree templateSeeWithInstrument(professor,look,northern_lights,spyglass)
# ::id see_with_61
# ::suppl see_with_61
(r / look-01
   :ARG0 (p / professor)
   :ARG1 (c / light
            :location (n / north))
   :instrument (b / spyglass))

# ::snt Sophie looked at the rainfall with the telescope.
# ::tree templateSeeWithInstrument(Sophie,look,rainfall,telescope)
# ::id see_with_62
# ::suppl see_with_62
(r / look-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (b / rainfall)
   :instrument (t / telescope))

# ::snt The general looked at the army with the telescope.
# ::tree templateSeeWithInstrument(general,look,army,telescope)
# ::id see_with_63
# ::suppl see_with_63
(r / look-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (a / army)
   :instrument (t / telescope))

# ::snt The general observed the northern lights with the telescope.
# ::tree templateSeeWithInstrument(general,observe,northern_lights,telescope)
# ::id see_with_64
# ::suppl see_with_64
(r / observe-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (c / light
            :location (n / north))
   :instrument (t / telescope))

# ::snt The general looked at the northern lights with the spyglass.
# ::tree templateSeeWithInstrument(general,look,northern_lights,spyglass)
# ::id see_with_65
# ::suppl see_with_65
(r / look-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (c / light
            :location (n / north))
   :instrument (b / spyglass))

# ::snt The baker observed the rainfall with the binoculars.
# ::tree templateSeeWithInstrument(baker,observe,rainfall,binoculars)
# ::id see_with_66
# ::suppl see_with_66
(r / observe-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (u_107 / rainfall)
   :instrument (u_106 / binoculars))

# ::snt The baker saw the army with the spyglass.
# ::tree templateSeeWithInstrument(baker,see,army,spyglass)
# ::id see_with_67
# ::suppl see_with_67
(r / see-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (a / army)
   :instrument (u_108 / spyglass))

# ::snt Sophie peeked at the rainfall with the spyglass.
# ::tree templateSeeWithInstrument(Sophie,peek,rainfall,spyglass)
# ::id see_with_68
# ::suppl see_with_68
(r / peek-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (b / rainfall)
   :instrument (u_109 / spyglass))

# ::snt Sophie observed the army with the binoculars.
# ::tree templateSeeWithInstrument(Sophie,observe,army,binoculars)
# ::id see_with_69
# ::suppl see_with_69
(r / observe-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (a / army)
   :instrument (b / binoculars))

# ::snt Sophie observed the army with the spyglass.
# ::tree templateSeeWithInstrument(Sophie,observe,army,spyglass)
# ::id see_with_70
# ::suppl see_with_70
(r / observe-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (a / army)
   :instrument (b / spyglass))

# ::snt Sophie looked at the army with the binoculars.
# ::tree templateSeeWithInstrument(Sophie,look,army,binoculars)
# ::id see_with_71
# ::suppl see_with_71
(r / look-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (a / army)
   :instrument (b / binoculars))

# ::snt The professor peeked at the rainfall with the binoculars.
# ::tree templateSeeWithInstrument(professor,peek,rainfall,binoculars)
# ::id see_with_72
# ::suppl see_with_72
(r / peek-01
   :ARG0 (p / professor)
   :ARG1 (b / rainfall)
   :instrument (u_114 / binoculars))

# ::snt John observed the rainfall with the spyglass.
# ::tree templateSeeWithInstrument(John,observe,rainfall,spyglass)
# ::id see_with_73
# ::suppl see_with_73
(r / observe-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (b / rainfall)
   :instrument (u_115 / spyglass))

# ::snt The general peeked at the northern lights with the binoculars.
# ::tree templateSeeWithInstrument(general,peek,northern_lights,binoculars)
# ::id see_with_74
# ::suppl see_with_74
(r / peek-01
   :ARG0 (p / person
            :ARG0-of (z0 / have-org-role-91
                         :ARG2 (z1 / general)))
   :ARG1 (c / light
            :location (n / north))
   :instrument (b / binoculars))

# ::snt For thirty years, she has kept this knowledge from Jenny.
# ::tree templateKeepInformationFromPerson(she,knowledge,jenny)
# ::id keep_from_0
# ::suppl keep_from_0
(k / keep-04
   :duration (u_1135 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1136 / knowledge
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Jenny")))

# ::snt For thirty years, the fool has kept this knowledge from the police.
# ::tree templateKeepInformationFromPerson(fool,knowledge,police)
# ::id keep_from_1
# ::suppl keep_from_1
(k / keep-04
   :duration (u_1138 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1139 / knowledge
                 :mod (t / this))
   :ARG2 (p2 / police))

# ::snt For thirty years, the hero has kept this information from Mark.
# ::tree templateKeepInformationFromPerson(hero,information,mark)
# ::id keep_from_2
# ::suppl keep_from_2
(k / keep-04
   :duration (u_1143 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1144 / information
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Mark")))

# ::snt For thirty years, the hero has kept this information from the children.
# ::tree templateKeepInformationFromPerson(hero,information,children)
# ::id keep_from_3
# ::suppl keep_from_3
(k / keep-04
   :duration (u_1146 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1147 / information
                 :mod (t / this))
   :ARG2 (p2 / child))

# ::snt For thirty years, the hero has kept this wisdom from the children.
# ::tree templateKeepInformationFromPerson(hero,wisdom,children)
# ::id keep_from_4
# ::suppl keep_from_4
(k / keep-04
   :duration (u_1149 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1150 / wisdom
                 :mod (t / this))
   :ARG2 (p2 / child))

# ::snt For thirty years, the hero has kept this knowledge from the police.
# ::tree templateKeepInformationFromPerson(hero,knowledge,police)
# ::id keep_from_5
# ::suppl keep_from_5
(k / keep-04
   :duration (u_1152 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1153 / knowledge
                 :mod (t / this))
   :ARG2 (p2 / police))

# ::snt For thirty years, she has kept this news from Jenny.
# ::tree templateKeepInformationFromPerson(she,news,jenny)
# ::id keep_from_6
# ::suppl keep_from_6
(k / keep-04
   :duration (u_1157 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1158 / news
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Jenny")))

# ::snt For thirty years, the hero has kept this news from the children.
# ::tree templateKeepInformationFromPerson(hero,news,children)
# ::id keep_from_7
# ::suppl keep_from_7
(k / keep-04
   :duration (u_1160 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1161 / news
                 :mod (t / this))
   :ARG2 (p2 / child))

# ::snt For thirty years, she has kept this information from Jenny.
# ::tree templateKeepInformationFromPerson(she,information,jenny)
# ::id keep_from_8
# ::suppl keep_from_8
(k / keep-04
   :duration (u_1165 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1166 / information
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Jenny")))

# ::snt For thirty years, the fool has kept this wisdom from Mark.
# ::tree templateKeepInformationFromPerson(fool,wisdom,mark)
# ::id keep_from_9
# ::suppl keep_from_9
(k / keep-04
   :duration (u_1170 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1171 / wisdom
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Mark")))

# ::snt For thirty years, the fool has kept this news from Jenny.
# ::tree templateKeepInformationFromPerson(fool,news,jenny)
# ::id keep_from_10
# ::suppl keep_from_10
(k / keep-04
   :duration (u_1175 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1176 / news
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Jenny")))

# ::snt For thirty years, she has kept this wisdom from the children.
# ::tree templateKeepInformationFromPerson(she,wisdom,children)
# ::id keep_from_11
# ::suppl keep_from_11
(k / keep-04
   :duration (u_1178 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1179 / wisdom
                 :mod (t / this))
   :ARG2 (p2 / child))

# ::snt For thirty years, the fool has kept this news from the children.
# ::tree templateKeepInformationFromPerson(fool,news,children)
# ::id keep_from_12
# ::suppl keep_from_12
(k / keep-04
   :duration (u_1181 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1182 / news
                 :mod (t / this))
   :ARG2 (p2 / child))

# ::snt For thirty years, the hero has kept this knowledge from the children.
# ::tree templateKeepInformationFromPerson(hero,knowledge,children)
# ::id keep_from_13
# ::suppl keep_from_13
(k / keep-04
   :duration (u_1184 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1185 / knowledge
                 :mod (t / this))
   :ARG2 (p2 / child))

# ::snt For thirty years, she has kept this knowledge from the children.
# ::tree templateKeepInformationFromPerson(she,knowledge,children)
# ::id keep_from_14
# ::suppl keep_from_14
(k / keep-04
   :duration (u_1187 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1188 / knowledge
                 :mod (t / this))
   :ARG2 (p2 / child))

# ::snt For thirty years, the fool has kept this information from the police.
# ::tree templateKeepInformationFromPerson(fool,information,police)
# ::id keep_from_15
# ::suppl keep_from_15
(k / keep-04
   :duration (u_1190 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1191 / information
                 :mod (t / this))
   :ARG2 (p2 / police))

# ::snt For thirty years, the fool has kept this knowledge from Jenny.
# ::tree templateKeepInformationFromPerson(fool,knowledge,jenny)
# ::id keep_from_16
# ::suppl keep_from_16
(k / keep-04
   :duration (u_1195 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1196 / knowledge
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Jenny")))

# ::snt For thirty years, the hero has kept this knowledge from Mark.
# ::tree templateKeepInformationFromPerson(hero,knowledge,mark)
# ::id keep_from_17
# ::suppl keep_from_17
(k / keep-04
   :duration (u_1200 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1201 / knowledge
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Mark")))

# ::snt For thirty years, the hero has kept this news from Jenny.
# ::tree templateKeepInformationFromPerson(hero,news,jenny)
# ::id keep_from_18
# ::suppl keep_from_18
(k / keep-04
   :duration (u_1205 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1206 / news
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Jenny")))

# ::snt For thirty years, the hero has kept this knowledge from Jenny.
# ::tree templateKeepInformationFromPerson(hero,knowledge,jenny)
# ::id keep_from_19
# ::suppl keep_from_19
(k / keep-04
   :duration (u_1210 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1211 / knowledge
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Jenny")))

# ::snt For thirty years, the hero has kept this information from the police.
# ::tree templateKeepInformationFromPerson(hero,information,police)
# ::id keep_from_20
# ::suppl keep_from_20
(k / keep-04
   :duration (u_1213 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1214 / information
                 :mod (t / this))
   :ARG2 (p2 / police))

# ::snt For thirty years, the hero has kept this news from Mark.
# ::tree templateKeepInformationFromPerson(hero,news,mark)
# ::id keep_from_21
# ::suppl keep_from_21
(k / keep-04
   :duration (u_1218 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1219 / news
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Mark")))

# ::snt For thirty years, the fool has kept this wisdom from the children.
# ::tree templateKeepInformationFromPerson(fool,wisdom,children)
# ::id keep_from_22
# ::suppl keep_from_22
(k / keep-04
   :duration (u_1221 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1222 / wisdom
                 :mod (t / this))
   :ARG2 (p2 / child))

# ::snt For thirty years, she has kept this news from Mark.
# ::tree templateKeepInformationFromPerson(she,news,mark)
# ::id keep_from_23
# ::suppl keep_from_23
(k / keep-04
   :duration (u_1226 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1227 / news
                 :mod (t / this))
   :ARG2 (p2 / person
             :wiki -
             :name (n / name
                      :op1 "Mark")))

# ::snt For thirty years, she has kept this news from the police.
# ::tree templateKeepInformationFromPerson(she,news,police)
# ::id keep_from_24
# ::suppl keep_from_24
(k / keep-04
   :duration (u_1229 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1230 / news
                 :mod (t / this))
   :ARG2 (p2 / police))

# ::snt For thirty years, she has kept this souvenir from Munich.
# ::tree templateKeepObject(she,souvenir,Munich)
# ::id keep_from_25
# ::suppl keep_from_25
(k / keep-01
   :duration (u_1235 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1236 / souvenir
                 :mod (t / this)
                 :source (u_1234 / city
                                 :wiki "Munich"
                                 :name (n / name
                                          :op1 "Munich"))))

# ::snt For thirty years, the hero has kept this souvenir from Haiti.
# ::tree templateKeepObject(hero,souvenir,Haiti)
# ::id keep_from_26
# ::suppl keep_from_26
(k / keep-01
   :duration (u_1241 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1242 / souvenir
                 :mod (t / this)
                 :source (u_1240 / country
                                 :wiki "Haiti"
                                 :name (n / name
                                          :op1 "Haiti"))))

# ::snt For thirty years, the hero has kept this postcard from Haiti.
# ::tree templateKeepObject(hero,postcard,Haiti)
# ::id keep_from_27
# ::suppl keep_from_27
(k / keep-01
   :duration (u_1247 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1248 / postcard
                 :mod (t / this)
                 :source (u_1246 / country
                                 :wiki "Haiti"
                                 :name (n / name
                                          :op1 "Haiti"))))

# ::snt For thirty years, the hero has kept this souvenir from Munich.
# ::tree templateKeepObject(hero,souvenir,Munich)
# ::id keep_from_28
# ::suppl keep_from_28
(k / keep-01
   :duration (u_1253 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1254 / souvenir
                 :mod (t / this)
                 :source (u_1252 / city
                                 :wiki "Munich"
                                 :name (n / name
                                          :op1 "Munich"))))

# ::snt For thirty years, the fool has kept this letter from Haiti.
# ::tree templateKeepObject(fool,letter,Haiti)
# ::id keep_from_29
# ::suppl keep_from_29
(k / keep-01
   :duration (u_1259 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1260 / letter
                 :mod (t / this)
                 :source (u_1258 / country
                                 :wiki "Haiti"
                                 :name (n / name
                                          :op1 "Haiti"))))

# ::snt For thirty years, she has kept this postcard from Haiti.
# ::tree templateKeepObject(she,postcard,Haiti)
# ::id keep_from_30
# ::suppl keep_from_30
(k / keep-01
   :duration (u_1265 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1266 / postcard
                 :mod (t / this)
                 :source (u_1264 / country
                                 :wiki "Haiti"
                                 :name (n / name
                                          :op1 "Haiti"))))

# ::snt For thirty years, she has kept this letter from Haiti.
# ::tree templateKeepObject(she,letter,Haiti)
# ::id keep_from_31
# ::suppl keep_from_31
(k / keep-01
   :duration (u_1271 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1272 / letter
                 :mod (t / this)
                 :source (u_1270 / country
                                 :wiki "Haiti"
                                 :name (n / name
                                          :op1 "Haiti"))))

# ::snt For thirty years, the hero has kept this souvenir from Minsk.
# ::tree templateKeepObject(hero,souvenir,Minsk)
# ::id keep_from_32
# ::suppl keep_from_32
(k / keep-01
   :duration (u_1277 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1278 / souvenir
                 :mod (t / this)
                 :source (u_1276 / city
                                 :wiki "Minsk"
                                 :name (n / name
                                          :op1 "Minsk"))))

# ::snt For thirty years, the hero has kept this necklace from Minsk.
# ::tree templateKeepObject(hero,necklace,Minsk)
# ::id keep_from_33
# ::suppl keep_from_33
(k / keep-01
   :duration (u_1283 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1284 / necklace
                 :mod (t / this)
                 :source (u_1282 / city
                                 :wiki "Minsk"
                                 :name (n / name
                                          :op1 "Minsk"))))

# ::snt For thirty years, the fool has kept this necklace from Haiti.
# ::tree templateKeepObject(fool,necklace,Haiti)
# ::id keep_from_34
# ::suppl keep_from_34
(k / keep-01
   :duration (u_1289 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1290 / necklace
                 :mod (t / this)
                 :source (u_1288 / country
                                 :wiki "Haiti"
                                 :name (n / name
                                          :op1 "Haiti"))))

# ::snt For thirty years, the hero has kept this postcard from Munich.
# ::tree templateKeepObject(hero,postcard,Munich)
# ::id keep_from_35
# ::suppl keep_from_35
(k / keep-01
   :duration (u_1295 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1296 / postcard
                 :mod (t / this)
                 :source (u_1294 / city
                                 :wiki "Munich"
                                 :name (n / name
                                          :op1 "Munich"))))

# ::snt For thirty years, the fool has kept this necklace from Minsk.
# ::tree templateKeepObject(fool,necklace,Minsk)
# ::id keep_from_36
# ::suppl keep_from_36
(k / keep-01
   :duration (u_1301 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1302 / necklace
                 :mod (t / this)
                 :source (u_1300 / city
                                 :wiki "Minsk"
                                 :name (n / name
                                          :op1 "Minsk"))))

# ::snt For thirty years, the hero has kept this letter from Munich.
# ::tree templateKeepObject(hero,letter,Munich)
# ::id keep_from_37
# ::suppl keep_from_37
(k / keep-01
   :duration (u_1307 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1308 / letter
                 :mod (t / this)
                 :source (u_1306 / city
                                 :wiki "Munich"
                                 :name (n / name
                                          :op1 "Munich"))))

# ::snt For thirty years, the fool has kept this postcard from Minsk.
# ::tree templateKeepObject(fool,postcard,Minsk)
# ::id keep_from_38
# ::suppl keep_from_38
(k / keep-01
   :duration (u_1313 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1314 / postcard
                 :mod (t / this)
                 :source (u_1312 / city
                                 :wiki "Minsk"
                                 :name (n / name
                                          :op1 "Minsk"))))

# ::snt For thirty years, the fool has kept this postcard from Munich.
# ::tree templateKeepObject(fool,postcard,Munich)
# ::id keep_from_39
# ::suppl keep_from_39
(k / keep-01
   :duration (u_1319 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1320 / postcard
                 :mod (t / this)
                 :source (u_1318 / city
                                 :wiki "Munich"
                                 :name (n / name
                                          :op1 "Munich"))))

# ::snt For thirty years, the fool has kept this postcard from Haiti.
# ::tree templateKeepObject(fool,postcard,Haiti)
# ::id keep_from_40
# ::suppl keep_from_40
(k / keep-01
   :duration (u_1325 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1326 / postcard
                 :mod (t / this)
                 :source (u_1324 / country
                                 :wiki "Haiti"
                                 :name (n / name
                                          :op1 "Haiti"))))

# ::snt For thirty years, she has kept this souvenir from Haiti.
# ::tree templateKeepObject(she,souvenir,Haiti)
# ::id keep_from_41
# ::suppl keep_from_41
(k / keep-01
   :duration (u_1331 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1332 / souvenir
                 :mod (t / this)
                 :source (u_1330 / country
                                 :wiki "Haiti"
                                 :name (n / name
                                          :op1 "Haiti"))))

# ::snt For thirty years, the fool has kept this necklace from that adventure.
# ::tree templateKeepObject(fool,necklace,that_adventure)
# ::id keep_from_42
# ::suppl keep_from_42
(k / keep-01
   :duration (u_1336 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1337 / necklace
                 :mod (t / this)
                 :source (u_1334 / adventure
                                 :mod (u_1335 / that))))

# ::snt For thirty years, the fool has kept this souvenir from Minsk.
# ::tree templateKeepObject(fool,souvenir,Minsk)
# ::id keep_from_43
# ::suppl keep_from_43
(k / keep-01
   :duration (u_1342 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1343 / souvenir
                 :mod (t / this)
                 :source (u_1341 / city
                                 :wiki "Minsk"
                                 :name (n / name
                                          :op1 "Minsk"))))

# ::snt For thirty years, the fool has kept this letter from that adventure.
# ::tree templateKeepObject(fool,letter,that_adventure)
# ::id keep_from_44
# ::suppl keep_from_44
(k / keep-01
   :duration (u_1347 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1348 / letter
                 :mod (t / this)
                 :source (u_1345 / adventure
                                 :mod (u_1346 / that))))

# ::snt For thirty years, the fool has kept this souvenir from Munich.
# ::tree templateKeepObject(fool,souvenir,Munich)
# ::id keep_from_45
# ::suppl keep_from_45
(k / keep-01
   :duration (u_1353 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / fool)
   :ARG1 (u_1354 / souvenir
                 :mod (t / this)
                 :source (u_1352 / city
                                 :wiki "Munich"
                                 :name (n / name
                                          :op1 "Munich"))))

# ::snt For thirty years, she has kept this necklace from Munich.
# ::tree templateKeepObject(she,necklace,Munich)
# ::id keep_from_46
# ::suppl keep_from_46
(k / keep-01
   :duration (u_1359 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1360 / necklace
                 :mod (t / this)
                 :source (u_1358 / city
                                 :wiki "Munich"
                                 :name (n / name
                                          :op1 "Munich"))))

# ::snt For thirty years, she has kept this letter from Munich.
# ::tree templateKeepObject(she,letter,Munich)
# ::id keep_from_47
# ::suppl keep_from_47
(k / keep-01
   :duration (u_1365 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / she)
   :ARG1 (u_1366 / letter
                 :mod (t / this)
                 :source (u_1364 / city
                                 :wiki "Munich"
                                 :name (n / name
                                          :op1 "Munich"))))

# ::snt For thirty years, the hero has kept this postcard from Minsk.
# ::tree templateKeepObject(hero,postcard,Minsk)
# ::id keep_from_48
# ::suppl keep_from_48
(k / keep-01
   :duration (u_1371 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1372 / postcard
                 :mod (t / this)
                 :source (u_1370 / city
                                 :wiki "Minsk"
                                 :name (n / name
                                          :op1 "Minsk"))))

# ::snt For thirty years, the hero has kept this letter from Minsk.
# ::tree templateKeepObject(hero,letter,Minsk)
# ::id keep_from_49
# ::suppl keep_from_49
(k / keep-01
   :duration (u_1377 / temporal-quantity
                     :quant 30
                     :unit (y / year))
   :ARG0 (p / hero)
   :ARG1 (u_1378 / letter
                 :mod (t / this)
                 :source (u_1376 / city
                                 :wiki "Minsk"
                                 :name (n / name
                                          :op1 "Minsk"))))

# ::snt The girl loved to and refused to hate to ask the soldier to sleep.
# ::tree Sent(SubjCtrlTbar(Coord_Subj_Ctrl_V_fin(and_subj_control_verb,loved,refused),VbarSubjCtrl(hate,VbarObjCtrl(ask,sleep,soldier))),girl)
# ::size0 4
# ::id nested_control_0
# ::suppl nested_control_0
(u_794 / and
       :op1 (u_799 / love-01
                   :ARG0 (r / girl
                            :ARG0-of (u_796 / ask-02
                                            :ARG2 (s / soldier
                                                     :ARG0-of (u_800 / sleep-01
                                                                     :ARG1-of u_796))
                                            :ARG1-of (u_798 / hate-01
                                                            :ARG0 r
                                                            :ARG1-of u_799
                                                            :ARG1-of (u_795 / refuse-01
                                                                            :ARG0 r
                                                                            :op2-of u_794))))))

# ::snt The boy asked you to force the monster to ask the astronaut to focus.
# ::tree Sent(ObjCtrlTbar(asked,VbarObjCtrl(force,VbarObjCtrl(ask,focus,astronaut),monster),you),boy)
# ::size0 4
# ::id nested_control_1
# ::suppl nested_control_1
(u_805 / ask-02
       :ARG0 (r / boy)
       :ARG2 (u_808 / you
                    :ARG0-of (u_803 / force-01
                                    :ARG1 (u_807 / monster
                                                 :ARG0-of (u_801 / ask-02
                                                                 :ARG2 (a / astronaut
                                                                          :ARG0-of (u_804 / focus-01
                                                                                          :ARG1-of u_801))
                                                                 :ARG2-of u_803))
                                    :ARG1-of u_805)))

# ::snt The kid persuaded the lawyer to persuade you to force the monster to jump.
# ::tree Sent(ObjCtrlTbar(persuaded,VbarObjCtrl(persuade,VbarObjCtrl(force,jump,monster),you),lawyer),kid)
# ::size0 4
# ::id nested_control_2
# ::suppl nested_control_2
(u_814 / persuade-01
       :ARG0 (r / kid)
       :ARG1 (m / lawyer
                :ARG0-of (u_812 / persuade-01
                                :ARG1 (u_816 / you
                                             :ARG0-of (u_809 / force-01
                                                             :ARG1 (u_813 / monster
                                                                          :ARG0-of (u_811 / jump-03
                                                                                          :ARG2-of u_809))
                                                             :ARG2-of u_812))
                                :ARG2-of u_814)))

# ::snt The boy ate and refused to want to sleep.
# ::tree Sent(Coord_Open_S_fin(and_open_s,ate,SubjCtrlTbar(refused,VbarSubjCtrl(want,sleep))),boy)
# ::size0 4
# ::id nested_control_3
# ::suppl nested_control_3
(u_819 / and
       :op1 (u_821 / eat-01
                   :ARG0 (r / boy
                            :ARG0-of (u_820 / sleep-01
                                            :ARG1-of (u_817 / want-01
                                                            :ARG0 r
                                                            :ARG1-of (u_818 / refuse-01
                                                                            :ARG0 r
                                                                            :op2-of u_819))))))

# ::snt The boy attempted to ask the soldier to persuade the doctor to eat.
# ::tree Sent(SubjCtrlTbar(attempted,VbarObjCtrl(ask,VbarObjCtrl(persuade,eat,doctor),soldier)),boy)
# ::size0 4
# ::id nested_control_4
# ::suppl nested_control_4
(u_827 / attempt-01
       :ARG0 (r / boy
                :ARG0-of (u_825 / ask-02
                                :ARG2 (s / soldier
                                         :ARG0-of (u_822 / persuade-01
                                                         :ARG1 (u_828 / doctor
                                                                      :ARG0-of (u_824 / eat-01
                                                                                      :ARG2-of u_822))
                                                         :ARG1-of u_825))
                                :ARG1-of u_827)))

# ::snt The girl forced the astronaut to hate to refuse to focus.
# ::tree Sent(ObjCtrlTbar(forced,VbarSubjCtrl(hate,VbarSubjCtrl(refuse,focus)),astronaut),girl)
# ::size0 4
# ::id nested_control_5
# ::suppl nested_control_5
(u_831 / force-01
       :ARG0 (r / girl)
       :ARG1 (a / astronaut
                :ARG0-of (u_833 / focus-01
                                :ARG1-of (u_829 / refuse-01
                                                :ARG0 a
                                                :ARG1-of (u_830 / hate-01
                                                                :ARG0 a
                                                                :ARG2-of u_831)))))

# ::snt The kid wanted to love to attempt to focus.
# ::tree Sent(SubjCtrlTbar(wanted,VbarSubjCtrl(love,VbarSubjCtrl(attempt,focus))),kid)
# ::size0 4
# ::id nested_control_6
# ::suppl nested_control_6
(u_836 / want-01
       :ARG0 (r / kid
                :ARG0-of (u_837 / focus-01
                                :ARG1-of (u_834 / attempt-01
                                                :ARG0 r
                                                :ARG1-of (u_835 / love-01
                                                                :ARG0 r
                                                                :ARG1-of u_836)))))

# ::snt The kid wanted to attempt to ask the soldier to jump.
# ::tree Sent(SubjCtrlTbar(wanted,VbarSubjCtrl(attempt,VbarObjCtrl(ask,jump,soldier))),kid)
# ::size0 4
# ::id nested_control_7
# ::suppl nested_control_7
(u_841 / want-01
       :ARG0 (r / kid
                :ARG0-of (u_838 / ask-02
                                :ARG2 (s / soldier
                                         :ARG0-of (u_842 / jump-03
                                                         :ARG1-of u_838))
                                :ARG1-of (u_840 / attempt-01
                                                :ARG0 r
                                                :ARG1-of u_841))))

# ::snt The girl focused and asked the lawyer to attempt to attend.
# ::tree Sent(Coord_Open_S_fin(and_open_s,focused,ObjCtrlTbar(asked,VbarSubjCtrl(attempt,attend),lawyer)),girl)
# ::size0 4
# ::id nested_control_8
# ::suppl nested_control_8
(u_846 / and
       :op1 (u_848 / focus-01
                   :ARG0 (r / girl
                            :ARG0-of (u_844 / ask-02
                                            :ARG2 (m / lawyer
                                                     :ARG0-of (u_847 / attend-01
                                                                     :ARG1-of (u_843 / attempt-01
                                                                                     :ARG0 m
                                                                                     :ARG1-of u_844)))
                                            :op2-of u_846))))

# ::snt The girl begged the monster to beg you to refuse to sleep.
# ::tree Sent(ObjCtrlTbar(begged,VbarObjCtrl(beg,VbarSubjCtrl(refuse,sleep),you),monster),girl)
# ::size0 4
# ::id nested_control_9
# ::suppl nested_control_9
(u_853 / beg-01
       :ARG0 (r / girl)
       :ARG1 (u_855 / monster
                    :ARG0-of (u_850 / beg-01
                                    :ARG1 (u_854 / you
                                                 :ARG0-of (u_852 / sleep-01
                                                                 :ARG1-of (u_849 / refuse-01
                                                                                 :ARG0 u_854
                                                                                 :ARG2-of u_850)))
                                    :ARG2-of u_853)))

# ::snt The boy attended, forced the monster to jump, and wanted to force the politician to hate to sleep.
# ::tree Sent(Coord_3_Open_S_fin(and_3_open_s,attended,ObjCtrlTbar(forced,jump,monster),SubjCtrlTbar(wanted,VbarObjCtrl(force,VbarSubjCtrl(hate,sleep),politician))),boy)
# ::size0 5
# ::id nested_control_10
# ::suppl nested_control_10
(u_861 / and
       :op1 (u_867 / attend-01
                   :ARG0 (r / boy
                            :ARG0-of (u_862 / force-01
                                            :ARG1 (u_866 / monster
                                                         :ARG0-of (u_864 / jump-03
                                                                         :ARG2-of u_862))
                                            :op2-of u_861)
                            :ARG0-of (u_857 / force-01
                                            :ARG1 (u_865 / politician
                                                         :ARG0-of (u_859 / sleep-01
                                                                         :ARG1-of (u_856 / hate-01
                                                                                         :ARG0 u_865
                                                                                         :ARG2-of u_857)))
                                            :ARG1-of (u_860 / want-01
                                                            :ARG0 r
                                                            :op3-of u_861)))))

# ::snt The boy begged the lawyer to persuade the politician to attempt to hate to sleep.
# ::tree Sent(ObjCtrlTbar(begged,VbarObjCtrl(persuade,VbarSubjCtrl(attempt,VbarSubjCtrl(hate,sleep)),politician),lawyer),boy)
# ::size0 5
# ::id nested_control_11
# ::suppl nested_control_11
(u_873 / beg-01
       :ARG0 (r / boy)
       :ARG1 (m / lawyer
                :ARG0-of (u_870 / persuade-01
                                :ARG1 (u_874 / politician
                                             :ARG0-of (u_872 / sleep-01
                                                             :ARG1-of (u_868 / hate-01
                                                                             :ARG0 u_874
                                                                             :ARG1-of (u_869 / attempt-01
                                                                                             :ARG0 u_874
                                                                                             :ARG2-of u_870))))
                                :ARG2-of u_873)))

# ::snt The boy attended and wanted to hate to love to sleep.
# ::tree Sent(Coord_Open_S_fin(and_open_s,attended,SubjCtrlTbar(wanted,VbarSubjCtrl(hate,VbarSubjCtrl(love,sleep)))),boy)
# ::size0 5
# ::id nested_control_12
# ::suppl nested_control_12
(u_878 / and
       :op1 (u_880 / attend-01
                   :ARG0 (r / boy
                            :ARG0-of (u_879 / sleep-01
                                            :ARG1-of (u_875 / love-01
                                                            :ARG0 r
                                                            :ARG1-of (u_876 / hate-01
                                                                            :ARG0 r
                                                                            :ARG1-of (u_877 / want-01
                                                                                            :ARG0 r
                                                                                            :op2-of u_878)))))))

# ::snt The boy attempted to refuse to beg the soldier to eat and attended.
# ::tree Sent(Coord_Open_S_fin(and_open_s,SubjCtrlTbar(attempted,VbarSubjCtrl(refuse,VbarObjCtrl(beg,eat,soldier))),attended),boy)
# ::size0 5
# ::id nested_control_13
# ::suppl nested_control_13
(u_881 / and
       :op1 (u_885 / attempt-01
                   :ARG0 (r / boy
                            :ARG0-of (u_882 / beg-01
                                            :ARG1 (s / soldier
                                                     :ARG0-of (u_887 / eat-01
                                                                     :ARG2-of u_882))
                                            :ARG1-of (u_884 / refuse-01
                                                            :ARG0 r
                                                            :ARG1-of u_885))
                            :ARG0-of (u_886 / attend-01
                                            :op2-of u_881))))

# ::snt The boy loved to love to attempt to refuse to attend.
# ::tree Sent(SubjCtrlTbar(loved,VbarSubjCtrl(love,VbarSubjCtrl(attempt,VbarSubjCtrl(refuse,attend)))),boy)
# ::size0 5
# ::id nested_control_14
# ::suppl nested_control_14
(u_891 / love-01
       :ARG0 (r / boy
                :ARG0-of (u_892 / attend-01
                                :ARG1-of (u_888 / refuse-01
                                                :ARG0 r
                                                :ARG1-of (u_889 / attempt-01
                                                                :ARG0 r
                                                                :ARG1-of (u_890 / love-01
                                                                                :ARG0 r
                                                                                :ARG1-of u_891))))))

# ::snt The girl persuaded the politician to hate to attempt to persuade the soldier to sleep.
# ::tree Sent(ObjCtrlTbar(persuaded,VbarSubjCtrl(hate,VbarSubjCtrl(attempt,VbarObjCtrl(persuade,sleep,soldier))),politician),girl)
# ::size0 5
# ::id nested_control_15
# ::suppl nested_control_15
(u_897 / persuade-01
       :ARG0 (r / girl)
       :ARG1 (u_900 / politician
                    :ARG0-of (u_893 / persuade-01
                                    :ARG1 (s / soldier
                                             :ARG0-of (u_899 / sleep-01
                                                             :ARG2-of u_893))
                                    :ARG1-of (u_895 / attempt-01
                                                    :ARG0 u_900
                                                    :ARG1-of (u_896 / hate-01
                                                                    :ARG0 u_900
                                                                    :ARG2-of u_897)))))

# ::snt The kid forced the soldier to force the astronaut to love to want to attend.
# ::tree Sent(ObjCtrlTbar(forced,VbarObjCtrl(force,VbarSubjCtrl(love,VbarSubjCtrl(want,attend)),astronaut),soldier),kid)
# ::size0 5
# ::id nested_control_16
# ::suppl nested_control_16
(u_905 / force-01
       :ARG0 (r / kid)
       :ARG1 (s / soldier
                :ARG0-of (u_903 / force-01
                                :ARG1 (a / astronaut
                                         :ARG0-of (u_907 / attend-01
                                                         :ARG1-of (u_901 / want-01
                                                                         :ARG0 a
                                                                         :ARG1-of (u_902 / love-01
                                                                                         :ARG0 a
                                                                                         :ARG2-of u_903))))
                                :ARG2-of u_905)))

# ::snt The kid hated to love to beg the soldier to attend and jumped.
# ::tree Sent(Coord_Open_S_fin(and_open_s,SubjCtrlTbar(hated,VbarSubjCtrl(love,VbarObjCtrl(beg,attend,soldier))),jumped),kid)
# ::size0 5
# ::id nested_control_17
# ::suppl nested_control_17
(u_908 / and
       :op1 (u_912 / hate-01
                   :ARG0 (r / kid
                            :ARG0-of (u_909 / beg-01
                                            :ARG1 (s / soldier
                                                     :ARG0-of (u_914 / attend-01
                                                                     :ARG2-of u_909))
                                            :ARG1-of (u_911 / love-01
                                                            :ARG0 r
                                                            :ARG1-of u_912))
                            :ARG0-of (u_913 / jump-03
                                            :op2-of u_908))))

# ::snt The boy persuaded you to ask the politician to refuse to want to jump.
# ::tree Sent(ObjCtrlTbar(persuaded,VbarObjCtrl(ask,VbarSubjCtrl(refuse,VbarSubjCtrl(want,jump)),politician),you),boy)
# ::size0 5
# ::id nested_control_18
# ::suppl nested_control_18
(u_920 / persuade-01
       :ARG0 (r / boy)
       :ARG1 (u_922 / you
                    :ARG0-of (u_917 / ask-02
                                    :ARG2 (u_921 / politician
                                                 :ARG0-of (u_919 / jump-03
                                                                 :ARG1-of (u_915 / want-01
                                                                                 :ARG0 u_921
                                                                                 :ARG1-of (u_916 / refuse-01
                                                                                                 :ARG0 u_921
                                                                                                 :ARG1-of u_917))))
                                    :ARG2-of u_920)))

# ::snt The girl forced you to attempt to persuade the monster to sleep and ate.
# ::tree Sent(Coord_Open_S_fin(and_open_s,ObjCtrlTbar(forced,VbarSubjCtrl(attempt,VbarObjCtrl(persuade,sleep,monster)),you),ate),girl)
# ::size0 5
# ::id nested_control_19
# ::suppl nested_control_19
(u_923 / and
       :op1 (u_928 / force-01
                   :ARG0 (r / girl
                            :ARG0-of (u_930 / eat-01
                                            :op2-of u_923))
                   :ARG1 (u_931 / you
                                :ARG0-of (u_924 / persuade-01
                                                :ARG1 (u_929 / monster
                                                             :ARG0-of (u_926 / sleep-01
                                                                             :ARG2-of u_924))
                                                :ARG1-of (u_927 / attempt-01
                                                                :ARG0 u_931
                                                                :ARG2-of u_928)))))

# ::snt The girl persuaded the soldier to love to hate to force the doctor to attempt to jump.
# ::tree Sent(ObjCtrlTbar(persuaded,VbarSubjCtrl(love,VbarSubjCtrl(hate,VbarObjCtrl(force,VbarSubjCtrl(attempt,jump),doctor))),soldier),girl)
# ::size0 6
# ::id nested_control_20
# ::suppl nested_control_20
(u_938 / persuade-01
       :ARG0 (r / girl)
       :ARG1 (s / soldier
                :ARG0-of (u_933 / force-01
                                :ARG1 (u_940 / doctor
                                             :ARG0-of (u_935 / jump-03
                                                             :ARG1-of (u_932 / attempt-01
                                                                             :ARG0 u_940
                                                                             :ARG2-of u_933)))
                                :ARG1-of (u_936 / hate-01
                                                :ARG0 s
                                                :ARG1-of (u_937 / love-01
                                                                :ARG0 s
                                                                :ARG2-of u_938)))))

# ::snt The kid persuaded the soldier to want to refuse to persuade the monster to hate to focus.
# ::tree Sent(ObjCtrlTbar(persuaded,VbarSubjCtrl(want,VbarSubjCtrl(refuse,VbarObjCtrl(persuade,VbarSubjCtrl(hate,focus),monster))),soldier),kid)
# ::size0 6
# ::id nested_control_21
# ::suppl nested_control_21
(u_947 / persuade-01
       :ARG0 (r / kid)
       :ARG1 (s / soldier
                :ARG0-of (u_942 / persuade-01
                                :ARG1 (u_949 / monster
                                             :ARG0-of (u_944 / focus-01
                                                             :ARG1-of (u_941 / hate-01
                                                                             :ARG0 u_949
                                                                             :ARG2-of u_942)))
                                :ARG1-of (u_945 / refuse-01
                                                :ARG0 s
                                                :ARG1-of (u_946 / want-01
                                                                :ARG0 s
                                                                :ARG2-of u_947)))))

# ::snt The boy begged the lawyer to beg the soldier to force you to love to sleep and slept.
# ::tree Sent(Coord_Open_S_fin(and_open_s,ObjCtrlTbar(begged,VbarObjCtrl(beg,VbarObjCtrl(force,VbarSubjCtrl(love,sleep),you),soldier),lawyer),slept),boy)
# ::size0 6
# ::id nested_control_22
# ::suppl nested_control_22
(u_950 / and
       :op1 (u_957 / beg-01
                   :ARG0 (r / boy
                            :ARG0-of (u_959 / sleep-01
                                            :op2-of u_950))
                   :ARG1 (m / lawyer
                            :ARG0-of (u_955 / beg-01
                                            :ARG1 (s / soldier
                                                     :ARG0-of (u_952 / force-01
                                                                     :ARG1 (u_960 / you
                                                                                  :ARG0-of (u_954 / sleep-01
                                                                                                  :ARG1-of (u_951 / love-01
                                                                                                                  :ARG0 u_960
                                                                                                                  :ARG2-of u_952)))
                                                                     :ARG2-of u_955))
                                            :ARG2-of u_957))))

# ::snt The girl refused to force the astronaut to attempt to refuse to persuade you to sleep.
# ::tree Sent(SubjCtrlTbar(refused,VbarObjCtrl(force,VbarSubjCtrl(attempt,VbarSubjCtrl(refuse,VbarObjCtrl(persuade,sleep,you))),astronaut)),girl)
# ::size0 6
# ::id nested_control_23
# ::suppl nested_control_23
(u_967 / refuse-01
       :ARG0 (r / girl
                :ARG0-of (u_966 / force-01
                                :ARG1 (a / astronaut
                                         :ARG0-of (u_961 / persuade-01
                                                         :ARG1 (u_968 / you
                                                                      :ARG0-of (u_963 / sleep-01
                                                                                      :ARG2-of u_961))
                                                         :ARG1-of (u_964 / refuse-01
                                                                         :ARG0 a
                                                                         :ARG1-of (u_965 / attempt-01
                                                                                         :ARG0 a
                                                                                         :ARG2-of u_966))))
                                :ARG1-of u_967)))

# ::snt The girl asked the politician to force the monster to persuade the lawyer to attempt to hate to focus.
# ::tree Sent(ObjCtrlTbar(asked,VbarObjCtrl(force,VbarObjCtrl(persuade,VbarSubjCtrl(attempt,VbarSubjCtrl(hate,focus)),lawyer),monster),politician),girl)
# ::size0 6
# ::id nested_control_24
# ::suppl nested_control_24
(u_975 / ask-02
       :ARG0 (r / girl)
       :ARG2 (u_978 / politician
                    :ARG0-of (u_973 / force-01
                                    :ARG1 (u_977 / monster
                                                 :ARG0-of (u_971 / persuade-01
                                                                 :ARG1 (m / lawyer
                                                                          :ARG0-of (u_974 / focus-01
                                                                                          :ARG1-of (u_969 / hate-01
                                                                                                          :ARG0 m
                                                                                                          :ARG1-of (u_970 / attempt-01
                                                                                                                          :ARG0 m
                                                                                                                          :ARG2-of u_971))))
                                                                 :ARG2-of u_973))
                                    :ARG1-of u_975)))

# ::snt The girl loved to beg the lawyer to ask the politician to attempt to force the astronaut to focus.
# ::tree Sent(SubjCtrlTbar(loved,VbarObjCtrl(beg,VbarObjCtrl(ask,VbarSubjCtrl(attempt,VbarObjCtrl(force,focus,astronaut)),politician),lawyer)),girl)
# ::size0 6
# ::id nested_control_25
# ::suppl nested_control_25
(u_986 / love-01
       :ARG0 (r / girl
                :ARG0-of (u_984 / beg-01
                                :ARG1 (m / lawyer
                                         :ARG0-of (u_982 / ask-02
                                                         :ARG2 (u_987 / politician
                                                                      :ARG0-of (u_979 / force-01
                                                                                      :ARG1 (a / astronaut
                                                                                               :ARG0-of (u_983 / focus-01
                                                                                                               :ARG2-of u_979))
                                                                                      :ARG1-of (u_981 / attempt-01
                                                                                                      :ARG0 u_987
                                                                                                      :ARG1-of u_982)))
                                                         :ARG2-of u_984))
                                :ARG1-of u_986)))

# ::snt The boy ate and attempted to force the soldier to love to persuade the monster to attend.
# ::tree Sent(Coord_Open_S_fin(and_open_s,ate,SubjCtrlTbar(attempted,VbarObjCtrl(force,VbarSubjCtrl(love,VbarObjCtrl(persuade,attend,monster)),soldier))),boy)
# ::size0 6
# ::id nested_control_26
# ::suppl nested_control_26
(u_995 / and
       :op1 (u_998 / eat-01
                   :ARG0 (r / boy
                            :ARG0-of (u_992 / force-01
                                            :ARG1 (u_997 / soldier
                                                         :ARG0-of (u_988 / persuade-01
                                                                         :ARG1 (u_996 / monster
                                                                                      :ARG0-of (u_990 / attend-01
                                                                                                      :ARG2-of u_988))
                                                                         :ARG1-of (u_991 / love-01
                                                                                         :ARG0 u_997
                                                                                         :ARG2-of u_992)))
                                            :ARG1-of (u_994 / attempt-01
                                                            :ARG0 r
                                                            :op2-of u_995)))))

# ::snt The girl begged the astronaut to force the soldier to want to refuse to beg the lawyer to eat.
# ::tree Sent(ObjCtrlTbar(begged,VbarObjCtrl(force,VbarSubjCtrl(want,VbarSubjCtrl(refuse,VbarObjCtrl(beg,eat,lawyer))),soldier),astronaut),girl)
# ::size0 6
# ::id nested_control_27
# ::suppl nested_control_27
(u_1005 / beg-01
        :ARG0 (r / girl)
        :ARG1 (a / astronaut
                 :ARG0-of (u_1003 / force-01
                                  :ARG1 (s / soldier
                                           :ARG0-of (u_999 / beg-01
                                                           :ARG1 (m / lawyer
                                                                    :ARG0-of (u_1007 / eat-01
                                                                                     :ARG2-of u_999))
                                                           :ARG1-of (u_1001 / refuse-01
                                                                            :ARG0 s
                                                                            :ARG1-of (u_1002 / want-01
                                                                                             :ARG0 s
                                                                                             :ARG2-of u_1003))))
                                  :ARG2-of u_1005)))

# ::snt The boy wanted to and refused to refuse to persuade the astronaut to want to ask the lawyer to focus.
# ::tree Sent(SubjCtrlTbar(Coord_Subj_Ctrl_V_fin(and_subj_control_verb,wanted,refused),VbarSubjCtrl(refuse,VbarObjCtrl(persuade,VbarSubjCtrl(want,VbarObjCtrl(ask,focus,lawyer)),astronaut))),boy)
# ::size0 6
# ::id nested_control_28
# ::suppl nested_control_28
(u_1008 / and
        :op1 (u_1015 / want-01
                     :ARG0 (r / boy
                              :ARG0-of (u_1013 / persuade-01
                                               :ARG1 (a / astronaut
                                                        :ARG0-of (u_1010 / ask-02
                                                                         :ARG2 (m / lawyer
                                                                                  :ARG0-of (u_1016 / focus-01
                                                                                                   :ARG1-of u_1010))
                                                                         :ARG1-of (u_1012 / want-01
                                                                                          :ARG0 a
                                                                                          :ARG2-of u_1013)))
                                               :ARG1-of (u_1014 / refuse-01
                                                                :ARG0 r
                                                                :ARG1-of u_1015
                                                                :ARG1-of (u_1009 / refuse-01
                                                                                 :ARG0 r
                                                                                 :op2-of u_1008))))))

# ::snt The kid wanted to force the soldier to persuade you to refuse to love to sleep.
# ::tree Sent(SubjCtrlTbar(wanted,VbarObjCtrl(force,VbarObjCtrl(persuade,VbarSubjCtrl(refuse,VbarSubjCtrl(love,sleep)),you),soldier)),kid)
# ::size0 6
# ::id nested_control_29
# ::suppl nested_control_29
(u_1024 / want-01
        :ARG0 (r / kid
                 :ARG0-of (u_1022 / force-01
                                  :ARG1 (s / soldier
                                           :ARG0-of (u_1019 / persuade-01
                                                            :ARG1 (u_1025 / you
                                                                          :ARG0-of (u_1021 / sleep-01
                                                                                           :ARG1-of (u_1017 / love-01
                                                                                                            :ARG0 u_1025
                                                                                                            :ARG1-of (u_1018 / refuse-01
                                                                                                                             :ARG0 u_1025
                                                                                                                             :ARG2-of u_1019))))
                                                            :ARG2-of u_1022))
                                  :ARG1-of u_1024)))

# ::snt The kid asked the monster to ask the politician to force the astronaut to persuade the doctor to love to refuse to focus.
# ::tree Sent(ObjCtrlTbar(asked,VbarObjCtrl(ask,VbarObjCtrl(force,VbarObjCtrl(persuade,VbarSubjCtrl(love,VbarSubjCtrl(refuse,focus)),doctor),astronaut),politician),monster),kid)
# ::size0 7
# ::id nested_control_30
# ::suppl nested_control_30
(u_1035 / ask-02
        :ARG0 (r / kid)
        :ARG2 (u_1037 / monster
                      :ARG0-of (u_1032 / ask-02
                                       :ARG2 (u_1036 / politician
                                                     :ARG0-of (u_1031 / force-01
                                                                      :ARG1 (a / astronaut
                                                                               :ARG0-of (u_1028 / persuade-01
                                                                                                :ARG1 (u_1034 / doctor
                                                                                                              :ARG0-of (u_1030 / focus-01
                                                                                                                               :ARG1-of (u_1026 / refuse-01
                                                                                                                                                :ARG0 u_1034
                                                                                                                                                :ARG1-of (u_1027 / love-01
                                                                                                                                                                 :ARG0 u_1034
                                                                                                                                                                 :ARG2-of u_1028))))
                                                                                                :ARG2-of u_1031))
                                                                      :ARG1-of u_1032))
                                       :ARG1-of u_1035)))

# ::snt The kid loved to and attempted to force the lawyer to refuse to attempt to persuade you to ask the soldier to eat.
# ::tree Sent(SubjCtrlTbar(Coord_Subj_Ctrl_V_fin(and_subj_control_verb,loved,attempted),VbarObjCtrl(force,VbarSubjCtrl(refuse,VbarSubjCtrl(attempt,VbarObjCtrl(persuade,VbarObjCtrl(ask,eat,soldier),you))),lawyer)),kid)
# ::size0 7
# ::id nested_control_31
# ::suppl nested_control_31
(u_1038 / and
        :op1 (u_1049 / love-01
                     :ARG0 (r / kid
                              :ARG0-of (u_1047 / force-01
                                               :ARG1 (m / lawyer
                                                        :ARG0-of (u_1042 / persuade-01
                                                                         :ARG1 (u_1050 / you
                                                                                       :ARG0-of (u_1040 / ask-02
                                                                                                        :ARG2 (s / soldier
                                                                                                                 :ARG0-of (u_1044 / eat-01
                                                                                                                                  :ARG1-of u_1040))
                                                                                                        :ARG2-of u_1042))
                                                                         :ARG1-of (u_1045 / attempt-01
                                                                                          :ARG0 m
                                                                                          :ARG1-of (u_1046 / refuse-01
                                                                                                           :ARG0 m
                                                                                                           :ARG2-of u_1047))))
                                               :ARG1-of u_1049
                                               :ARG1-of (u_1039 / attempt-01
                                                                :ARG0 r
                                                                :op2-of u_1038)))))

# ::snt The kid refused to force the lawyer to persuade the politician to attempt to refuse to want to jump.
# ::tree Sent(SubjCtrlTbar(refused,VbarObjCtrl(force,VbarObjCtrl(persuade,VbarSubjCtrl(attempt,VbarSubjCtrl(refuse,VbarSubjCtrl(want,jump))),politician),lawyer)),kid)
# ::size0 7
# ::id nested_control_32
# ::suppl nested_control_32
(u_1058 / refuse-01
        :ARG0 (r / kid
                 :ARG0-of (u_1057 / force-01
                                  :ARG1 (m / lawyer
                                           :ARG0-of (u_1054 / persuade-01
                                                            :ARG1 (u_1059 / politician
                                                                          :ARG0-of (u_1056 / jump-03
                                                                                           :ARG1-of (u_1051 / want-01
                                                                                                            :ARG0 u_1059
                                                                                                            :ARG1-of (u_1052 / refuse-01
                                                                                                                             :ARG0 u_1059
                                                                                                                             :ARG1-of (u_1053 / attempt-01
                                                                                                                                              :ARG0 u_1059
                                                                                                                                              :ARG2-of u_1054)))))
                                                            :ARG2-of u_1057))
                                  :ARG1-of u_1058)))

# ::snt The kid attempted to hate to love to beg the soldier to force the politician to refuse to focus.
# ::tree Sent(SubjCtrlTbar(attempted,VbarSubjCtrl(hate,VbarSubjCtrl(love,VbarObjCtrl(beg,VbarObjCtrl(force,VbarSubjCtrl(refuse,focus),politician),soldier)))),kid)
# ::size0 7
# ::id nested_control_33
# ::suppl nested_control_33
(u_1068 / attempt-01
        :ARG0 (r / kid
                 :ARG0-of (u_1064 / beg-01
                                  :ARG1 (s / soldier
                                           :ARG0-of (u_1061 / force-01
                                                            :ARG1 (u_1069 / politician
                                                                          :ARG0-of (u_1063 / focus-01
                                                                                           :ARG1-of (u_1060 / refuse-01
                                                                                                            :ARG0 u_1069
                                                                                                            :ARG2-of u_1061)))
                                                            :ARG2-of u_1064))
                                  :ARG1-of (u_1066 / love-01
                                                   :ARG0 r
                                                   :ARG1-of (u_1067 / hate-01
                                                                    :ARG0 r
                                                                    :ARG1-of u_1068)))))

# ::snt The girl forced the astronaut to refuse to ask the soldier to force the doctor to attempt to persuade the monster to attend.
# ::tree Sent(ObjCtrlTbar(forced,VbarSubjCtrl(refuse,VbarObjCtrl(ask,VbarObjCtrl(force,VbarSubjCtrl(attempt,VbarObjCtrl(persuade,attend,monster)),doctor),soldier)),astronaut),girl)
# ::size0 7
# ::id nested_control_34
# ::suppl nested_control_34
(u_1079 / force-01
        :ARG0 (r / girl)
        :ARG1 (a / astronaut
                 :ARG0-of (u_1076 / ask-02
                                  :ARG2 (s / soldier
                                           :ARG0-of (u_1074 / force-01
                                                            :ARG1 (u_1081 / doctor
                                                                          :ARG0-of (u_1070 / persuade-01
                                                                                           :ARG1 (u_1075 / monster
                                                                                                         :ARG0-of (u_1072 / attend-01
                                                                                                                          :ARG2-of u_1070))
                                                                                           :ARG1-of (u_1073 / attempt-01
                                                                                                            :ARG0 u_1081
                                                                                                            :ARG2-of u_1074)))
                                                            :ARG1-of u_1076))
                                  :ARG1-of (u_1078 / refuse-01
                                                   :ARG0 a
                                                   :ARG2-of u_1079))))

# ::snt The girl forced the astronaut to force the politician to beg the lawyer to want to love to ask the soldier to focus.
# ::tree Sent(ObjCtrlTbar(forced,VbarObjCtrl(force,VbarObjCtrl(beg,VbarSubjCtrl(want,VbarSubjCtrl(love,VbarObjCtrl(ask,focus,soldier))),lawyer),politician),astronaut),girl)
# ::size0 7
# ::id nested_control_35
# ::suppl nested_control_35
(u_1091 / force-01
        :ARG0 (r / girl)
        :ARG1 (a / astronaut
                 :ARG0-of (u_1088 / force-01
                                  :ARG1 (u_1093 / politician
                                                :ARG0-of (u_1086 / beg-01
                                                                 :ARG1 (m / lawyer
                                                                          :ARG0-of (u_1082 / ask-02
                                                                                           :ARG2 (s / soldier
                                                                                                    :ARG0-of (u_1090 / focus-01
                                                                                                                     :ARG1-of u_1082))
                                                                                           :ARG1-of (u_1084 / love-01
                                                                                                            :ARG0 m
                                                                                                            :ARG1-of (u_1085 / want-01
                                                                                                                             :ARG0 m
                                                                                                                             :ARG2-of u_1086))))
                                                                 :ARG2-of u_1088))
                                  :ARG2-of u_1091)))

# ::snt The girl persuaded the monster to attempt to persuade the astronaut to beg the doctor to refuse to force the lawyer to sleep.
# ::tree Sent(ObjCtrlTbar(persuaded,VbarSubjCtrl(attempt,VbarObjCtrl(persuade,VbarObjCtrl(beg,VbarSubjCtrl(refuse,VbarObjCtrl(force,sleep,lawyer)),doctor),astronaut)),monster),girl)
# ::size0 7
# ::id nested_control_36
# ::suppl nested_control_36
(u_1102 / persuade-01
        :ARG0 (r / girl)
        :ARG1 (u_1104 / monster
                      :ARG0-of (u_1099 / persuade-01
                                       :ARG1 (a / astronaut
                                                :ARG0-of (u_1097 / beg-01
                                                                 :ARG1 (u_1103 / doctor
                                                                               :ARG0-of (u_1094 / force-01
                                                                                                :ARG1 (m / lawyer
                                                                                                         :ARG0-of (u_1098 / sleep-01
                                                                                                                          :ARG2-of u_1094))
                                                                                                :ARG1-of (u_1096 / refuse-01
                                                                                                                 :ARG0 u_1103
                                                                                                                 :ARG2-of u_1097)))
                                                                 :ARG2-of u_1099))
                                       :ARG1-of (u_1101 / attempt-01
                                                        :ARG0 u_1104
                                                        :ARG2-of u_1102))))

# ::snt The girl focused and begged the politician to refuse to persuade the soldier to love to force the lawyer to focus.
# ::tree Sent(Coord_Open_S_fin(and_open_s,focused,ObjCtrlTbar(begged,VbarSubjCtrl(refuse,VbarObjCtrl(persuade,VbarSubjCtrl(love,VbarObjCtrl(force,focus,lawyer)),soldier)),politician)),girl)
# ::size0 7
# ::id nested_control_37
# ::suppl nested_control_37
(u_1114 / and
        :op1 (u_1117 / focus-01
                     :ARG0 (r / girl
                              :ARG0-of (u_1111 / beg-01
                                               :ARG1 (u_1115 / politician
                                                             :ARG0-of (u_1108 / persuade-01
                                                                              :ARG1 (u_1116 / soldier
                                                                                            :ARG0-of (u_1105 / force-01
                                                                                                             :ARG1 (m / lawyer
                                                                                                                      :ARG0-of (u_1113 / focus-01
                                                                                                                                       :ARG2-of u_1105))
                                                                                                             :ARG1-of (u_1107 / love-01
                                                                                                                              :ARG0 u_1116
                                                                                                                              :ARG2-of u_1108)))
                                                                              :ARG1-of (u_1110 / refuse-01
                                                                                               :ARG0 u_1115
                                                                                               :ARG2-of u_1111)))
                                               :op2-of u_1114))))

# ::snt The kid refused to ask the soldier to force the doctor to hate to want to love to eat.
# ::tree Sent(SubjCtrlTbar(refused,VbarObjCtrl(ask,VbarObjCtrl(force,VbarSubjCtrl(hate,VbarSubjCtrl(want,VbarSubjCtrl(love,eat))),doctor),soldier)),kid)
# ::size0 7
# ::id nested_control_38
# ::suppl nested_control_38
(u_1126 / refuse-01
        :ARG0 (r / kid
                 :ARG0-of (u_1124 / ask-02
                                  :ARG2 (s / soldier
                                           :ARG0-of (u_1121 / force-01
                                                            :ARG1 (u_1127 / doctor
                                                                          :ARG0-of (u_1123 / eat-01
                                                                                           :ARG1-of (u_1118 / love-01
                                                                                                            :ARG0 u_1127
                                                                                                            :ARG1-of (u_1119 / want-01
                                                                                                                             :ARG0 u_1127
                                                                                                                             :ARG1-of (u_1120 / hate-01
                                                                                                                                              :ARG0 u_1127
                                                                                                                                              :ARG2-of u_1121)))))
                                                            :ARG1-of u_1124))
                                  :ARG1-of u_1126)))

# ::snt The boy attempted to focus and refuse to love to persuade the lawyer to attempt to eat.
# ::tree Sent(SubjCtrlTbar(attempted,Coord_Open_S_inf(and_open_s,focus,VbarSubjCtrl(refuse,VbarSubjCtrl(love,VbarObjCtrl(persuade,VbarSubjCtrl(attempt,eat),lawyer))))),boy)
# ::size0 7
# ::id nested_control_39
# ::suppl nested_control_39
(u_1135 / attempt-01
        :ARG0 (r / boy
                 :ARG0-of (u_1136 / focus-01
                                  :op1-of (u_1133 / and
                                                  :op2 (u_1132 / refuse-01
                                                               :ARG0 r
                                                               :ARG1 (u_1131 / love-01
                                                                             :ARG0 r
                                                                             :ARG1 (u_1129 / persuade-01
                                                                                           :ARG0 r
                                                                                           :ARG1 (m / lawyer
                                                                                                    :ARG0-of (u_1134 / eat-01
                                                                                                                     :ARG1-of (u_1128 / attempt-01
                                                                                                                                      :ARG0 m
                                                                                                                                      :ARG2-of u_1129))))))
                                                  :ARG1-of u_1135))))

# ::snt The girl refused to persuade the astronaut to beg the soldier to refuse to attempt to hate to jump, slept, and attended.
# ::tree Sent(Coord_3_Open_S_fin(and_3_open_s,SubjCtrlTbar(refused,VbarObjCtrl(persuade,VbarObjCtrl(beg,VbarSubjCtrl(refuse,VbarSubjCtrl(attempt,VbarSubjCtrl(hate,jump))),soldier),astronaut)),slept,attended),girl)
# ::size0 8
# ::id nested_control_40
# ::suppl nested_control_40
(u_1137 / and
        :op1 (u_1146 / refuse-01
                     :ARG0 (r / girl
                              :ARG0-of (u_1144 / persuade-01
                                               :ARG1 (a / astronaut
                                                        :ARG0-of (u_1142 / beg-01
                                                                         :ARG1 (s / soldier
                                                                                  :ARG0-of (u_1148 / jump-03
                                                                                                   :ARG1-of (u_1139 / hate-01
                                                                                                                    :ARG0 s
                                                                                                                    :ARG1-of (u_1140 / attempt-01
                                                                                                                                     :ARG0 s
                                                                                                                                     :ARG1-of (u_1141 / refuse-01
                                                                                                                                                      :ARG0 s
                                                                                                                                                      :ARG2-of u_1142)))))
                                                                         :ARG2-of u_1144))
                                               :ARG1-of u_1146)
                              :ARG0-of (u_1147 / sleep-01
                                               :op2-of u_1137)
                              :ARG0-of (u_1138 / attend-01
                                               :op3-of u_1137))))

# ::snt The kid refused to sleep and force the politician to beg the soldier to attempt to persuade the doctor to hate to jump.
# ::tree Sent(SubjCtrlTbar(refused,Coord_Open_S_inf(and_open_s,sleep,VbarObjCtrl(force,VbarObjCtrl(beg,VbarSubjCtrl(attempt,VbarObjCtrl(persuade,VbarSubjCtrl(hate,jump),doctor)),soldier),politician))),kid)
# ::size0 8
# ::id nested_control_41
# ::suppl nested_control_41
(u_1162 / refuse-01
        :ARG0 (r / kid
                 :ARG0-of (u_1163 / sleep-01
                                  :op1-of (u_1159 / and
                                                  :op2 (u_1156 / force-01
                                                               :ARG0 r
                                                               :ARG1 (u_1160 / politician
                                                                             :ARG0-of (u_1154 / beg-01
                                                                                              :ARG1 (u_1161 / soldier
                                                                                                            :ARG0-of (u_1150 / persuade-01
                                                                                                                             :ARG1 (u_1158 / doctor
                                                                                                                                           :ARG0-of (u_1152 / jump-03
                                                                                                                                                            :ARG1-of (u_1149 / hate-01
                                                                                                                                                                             :ARG0 u_1158
                                                                                                                                                                             :ARG2-of u_1150)))
                                                                                                                             :ARG1-of (u_1153 / attempt-01
                                                                                                                                              :ARG0 u_1161
                                                                                                                                              :ARG2-of u_1154)))
                                                                                              :ARG2-of u_1156)))
                                                  :ARG1-of u_1162))))

# ::snt The boy wanted to force you to refuse to attempt to want to persuade the doctor to love to focus.
# ::tree Sent(SubjCtrlTbar(wanted,VbarObjCtrl(force,VbarSubjCtrl(refuse,VbarSubjCtrl(attempt,VbarSubjCtrl(want,VbarObjCtrl(persuade,VbarSubjCtrl(love,focus),doctor)))),you)),boy)
# ::size0 8
# ::id nested_control_42
# ::suppl nested_control_42
(u_1173 / want-01
        :ARG0 (r / boy
                 :ARG0-of (u_1171 / force-01
                                  :ARG1 (u_1174 / you
                                                :ARG0-of (u_1165 / persuade-01
                                                                 :ARG1 (u_1172 / doctor
                                                                               :ARG0-of (u_1167 / focus-01
                                                                                                :ARG1-of (u_1164 / love-01
                                                                                                                 :ARG0 u_1172
                                                                                                                 :ARG2-of u_1165)))
                                                                 :ARG1-of (u_1168 / want-01
                                                                                  :ARG0 u_1174
                                                                                  :ARG1-of (u_1169 / attempt-01
                                                                                                   :ARG0 u_1174
                                                                                                   :ARG1-of (u_1170 / refuse-01
                                                                                                                    :ARG0 u_1174
                                                                                                                    :ARG2-of u_1171)))))
                                  :ARG1-of u_1173)))

# ::snt The kid loved to force the soldier to hate to ask the lawyer to want to persuade the monster to refuse to eat.
# ::tree Sent(SubjCtrlTbar(loved,VbarObjCtrl(force,VbarSubjCtrl(hate,VbarObjCtrl(ask,VbarSubjCtrl(want,VbarObjCtrl(persuade,VbarSubjCtrl(refuse,eat),monster)),lawyer)),soldier)),kid)
# ::size0 8
# ::id nested_control_43
# ::suppl nested_control_43
(u_1184 / love-01
        :ARG0 (r / kid
                 :ARG0-of (u_1182 / force-01
                                  :ARG1 (s / soldier
                                           :ARG0-of (u_1180 / ask-02
                                                            :ARG2 (m / lawyer
                                                                     :ARG0-of (u_1176 / persuade-01
                                                                                      :ARG1 (u_1185 / monster
                                                                                                    :ARG0-of (u_1178 / eat-01
                                                                                                                     :ARG1-of (u_1175 / refuse-01
                                                                                                                                      :ARG0 u_1185
                                                                                                                                      :ARG2-of u_1176)))
                                                                                      :ARG1-of (u_1179 / want-01
                                                                                                       :ARG0 m
                                                                                                       :ARG1-of u_1180)))
                                                            :ARG1-of (u_1181 / hate-01
                                                                             :ARG0 s
                                                                             :ARG2-of u_1182)))
                                  :ARG1-of u_1184)))

# ::snt The kid slept and refused to hate to persuade the doctor to beg the monster to ask the lawyer to refuse to sleep.
# ::tree Sent(Coord_Open_S_fin(and_open_s,slept,SubjCtrlTbar(refused,VbarSubjCtrl(hate,VbarObjCtrl(persuade,VbarObjCtrl(beg,VbarObjCtrl(ask,VbarSubjCtrl(refuse,sleep),lawyer),monster),doctor)))),kid)
# ::size0 8
# ::id nested_control_44
# ::suppl nested_control_44
(u_1196 / and
        :op1 (u_1198 / sleep-01
                     :ARG0 (r / kid
                              :ARG0-of (u_1191 / persuade-01
                                               :ARG1 (u_1197 / doctor
                                                             :ARG0-of (u_1189 / beg-01
                                                                              :ARG1 (u_1193 / monster
                                                                                            :ARG0-of (u_1187 / ask-02
                                                                                                             :ARG2 (m / lawyer
                                                                                                                      :ARG0-of (u_1190 / sleep-01
                                                                                                                                       :ARG1-of (u_1186 / refuse-01
                                                                                                                                                        :ARG0 m
                                                                                                                                                        :ARG1-of u_1187)))
                                                                                                             :ARG2-of u_1189))
                                                                              :ARG2-of u_1191))
                                               :ARG1-of (u_1194 / hate-01
                                                                :ARG0 r
                                                                :ARG1-of (u_1195 / refuse-01
                                                                                 :ARG0 r
                                                                                 :op2-of u_1196))))))

# ::snt The boy loved to love to force the soldier to attempt to hate to refuse to beg the astronaut to eat.
# ::tree Sent(SubjCtrlTbar(loved,VbarSubjCtrl(love,VbarObjCtrl(force,VbarSubjCtrl(attempt,VbarSubjCtrl(hate,VbarSubjCtrl(refuse,VbarObjCtrl(beg,eat,astronaut)))),soldier))),boy)
# ::size0 8
# ::id nested_control_45
# ::suppl nested_control_45
(u_1207 / love-01
        :ARG0 (r / boy
                 :ARG0-of (u_1204 / force-01
                                  :ARG1 (s / soldier
                                           :ARG0-of (u_1199 / beg-01
                                                            :ARG1 (a / astronaut
                                                                     :ARG0-of (u_1208 / eat-01
                                                                                      :ARG2-of u_1199))
                                                            :ARG1-of (u_1201 / refuse-01
                                                                             :ARG0 s
                                                                             :ARG1-of (u_1202 / hate-01
                                                                                              :ARG0 s
                                                                                              :ARG1-of (u_1203 / attempt-01
                                                                                                               :ARG0 s
                                                                                                               :ARG2-of u_1204)))))
                                  :ARG1-of (u_1206 / love-01
                                                   :ARG0 r
                                                   :ARG1-of u_1207))))

# ::snt The girl refused to refuse to attempt to hate to ask the politician to want to persuade the astronaut to focus.
# ::tree Sent(SubjCtrlTbar(refused,VbarSubjCtrl(refuse,VbarSubjCtrl(attempt,VbarSubjCtrl(hate,VbarObjCtrl(ask,VbarSubjCtrl(want,VbarObjCtrl(persuade,focus,astronaut)),politician))))),girl)
# ::size0 8
# ::id nested_control_46
# ::suppl nested_control_46
(u_1217 / refuse-01
        :ARG0 (r / girl
                 :ARG0-of (u_1212 / ask-02
                                  :ARG2 (u_1218 / politician
                                                :ARG0-of (u_1209 / persuade-01
                                                                 :ARG1 (a / astronaut
                                                                          :ARG0-of (u_1213 / focus-01
                                                                                           :ARG2-of u_1209))
                                                                 :ARG1-of (u_1211 / want-01
                                                                                  :ARG0 u_1218
                                                                                  :ARG1-of u_1212)))
                                  :ARG1-of (u_1214 / hate-01
                                                   :ARG0 r
                                                   :ARG1-of (u_1215 / attempt-01
                                                                    :ARG0 r
                                                                    :ARG1-of (u_1216 / refuse-01
                                                                                     :ARG0 r
                                                                                     :ARG1-of u_1217))))))

# ::snt The boy focused and attempted to hate to love to want to force the astronaut to persuade the soldier to sleep.
# ::tree Sent(Coord_Open_S_fin(and_open_s,focused,SubjCtrlTbar(attempted,VbarSubjCtrl(hate,VbarSubjCtrl(love,VbarSubjCtrl(want,VbarObjCtrl(force,VbarObjCtrl(persuade,sleep,soldier),astronaut)))))),boy)
# ::size0 8
# ::id nested_control_47
# ::suppl nested_control_47
(u_1227 / and
        :op1 (u_1230 / focus-01
                     :ARG0 (r / boy
                              :ARG0-of (u_1221 / force-01
                                               :ARG1 (a / astronaut
                                                        :ARG0-of (u_1219 / persuade-01
                                                                         :ARG1 (u_1229 / soldier
                                                                                       :ARG0-of (u_1228 / sleep-01
                                                                                                        :ARG2-of u_1219))
                                                                         :ARG2-of u_1221))
                                               :ARG1-of (u_1223 / want-01
                                                                :ARG0 r
                                                                :ARG1-of (u_1224 / love-01
                                                                                 :ARG0 r
                                                                                 :ARG1-of (u_1225 / hate-01
                                                                                                  :ARG0 r
                                                                                                  :ARG1-of (u_1226 / attempt-01
                                                                                                                   :ARG0 r
                                                                                                                   :op2-of u_1227))))))))

# ::snt The kid wanted to persuade the astronaut to beg the politician to force you to ask the doctor to want to eat, ate, and asked the lawyer to sleep.
# ::tree Sent(Coord_3_Open_S_fin(and_3_open_s,SubjCtrlTbar(wanted,VbarObjCtrl(persuade,VbarObjCtrl(beg,VbarObjCtrl(force,VbarObjCtrl(ask,VbarSubjCtrl(want,eat),doctor),you),politician),astronaut)),ate,ObjCtrlTbar(asked,sleep,lawyer)),kid)
# ::size0 8
# ::id nested_control_48
# ::suppl nested_control_48
(u_1233 / and
        :op1 (u_1245 / want-01
                     :ARG0 (r / kid
                              :ARG0-of (u_1244 / persuade-01
                                               :ARG1 (a / astronaut
                                                        :ARG0-of (u_1241 / beg-01
                                                                         :ARG1 (u_1247 / politician
                                                                                       :ARG0-of (u_1239 / force-01
                                                                                                        :ARG1 (u_1243 / you
                                                                                                                      :ARG0-of (u_1236 / ask-02
                                                                                                                                       :ARG2 (u_1240 / doctor
                                                                                                                                                     :ARG0-of (u_1238 / eat-01
                                                                                                                                                                      :ARG1-of (u_1235 / want-01
                                                                                                                                                                                       :ARG0 u_1240
                                                                                                                                                                                       :ARG1-of u_1236)))
                                                                                                                                       :ARG2-of u_1239))
                                                                                                        :ARG2-of u_1241))
                                                                         :ARG2-of u_1244))
                                               :ARG1-of u_1245)
                              :ARG0-of (u_1246 / eat-01
                                               :op2-of u_1233)
                              :ARG0-of (u_1231 / ask-02
                                               :ARG2 (m / lawyer
                                                        :ARG0-of (u_1234 / sleep-01
                                                                         :ARG1-of u_1231))
                                               :op3-of u_1233))))

# ::snt The boy loved to attempt to persuade the politician to hate to force the doctor to beg the lawyer to ask the monster to attend.
# ::tree Sent(SubjCtrlTbar(loved,VbarSubjCtrl(attempt,VbarObjCtrl(persuade,VbarSubjCtrl(hate,VbarObjCtrl(force,VbarObjCtrl(beg,VbarObjCtrl(ask,attend,monster),lawyer),doctor)),politician))),boy)
# ::size0 8
# ::id nested_control_49
# ::suppl nested_control_49
(u_1259 / love-01
        :ARG0 (r / boy
                 :ARG0-of (u_1256 / persuade-01
                                  :ARG1 (u_1260 / politician
                                                :ARG0-of (u_1252 / force-01
                                                                 :ARG1 (u_1257 / doctor
                                                                               :ARG0-of (u_1251 / beg-01
                                                                                                :ARG1 (m / lawyer
                                                                                                         :ARG0-of (u_1248 / ask-02
                                                                                                                          :ARG2 (u_1254 / monster
                                                                                                                                        :ARG0-of (u_1250 / attend-01
                                                                                                                                                         :ARG1-of u_1248))
                                                                                                                          :ARG2-of u_1251))
                                                                                                :ARG2-of u_1252))
                                                                 :ARG1-of (u_1255 / hate-01
                                                                                  :ARG0 u_1260
                                                                                  :ARG2-of u_1256)))
                                  :ARG1-of (u_1258 / attempt-01
                                                   :ARG0 r
                                                   :ARG1-of u_1259))))

# ::id berts_mouth_0
# ::snt The clip is about a horse.
# ::suppl berts_mouth_0
(c / clip
   :topic (h / horse))

# ::id berts_mouth_1
# ::snt The clip is about a queen.
# ::suppl berts_mouth_1
(c / clip
   :topic (q / queen))

# ::id berts_mouth_2
# ::snt The clip is about a cat.
# ::suppl berts_mouth_2
(c / clip
   :topic (c2 / cat))

# ::id berts_mouth_3
# ::snt The clip is about a king.
# ::suppl berts_mouth_3
(c / clip
   :topic (k / king))

# ::id berts_mouth_4
# ::snt The clip is about a prince.
# ::suppl berts_mouth_4
(c / clip
   :topic (p / prince))

# ::id berts_mouth_5
# ::snt The clip is about an hour.
# ::suppl berts_mouth_5
(c / clip
   :duration (a / about
                :op1 (t / temporal-quantity
                        :quant 1
                        :unit (h / hour))))

# ::id berts_mouth_6
# ::snt The clip is about a minute.
# ::suppl berts_mouth_6
(c / clip
   :duration (a / about
                :op1 (t / temporal-quantity
                        :quant 1
                        :unit (h / hour))))

# ::id berts_mouth_7
# ::snt The clip is about a second.
# ::suppl berts_mouth_7
(c / clip
   :duration (a / about
                :op1 (t / temporal-quantity
                        :quant 1
                        :unit (s / second))))

# ::id berts_mouth_8
# ::snt It lasted for hours.
# ::suppl berts_mouth_8
(l / last-01
   :ARG2 (t / temporal-quantity
            :unit (h / hour)))

# ::id berts_mouth_9
# ::snt It lasted for decades.
# ::suppl berts_mouth_9
(l / last-01
   :ARG2 (t / temporal-quantity
            :unit (d / decade)))

# ::id berts_mouth_10
# ::snt It lasted for weeks.
# ::suppl berts_mouth_10
(l / last-01
   :ARG2 (t / temporal-quantity
            :unit (w / week)))

# ::id berts_mouth_11
# ::snt It lasted for months.
# ::suppl berts_mouth_11
(l / last-01
   :ARG2 (t / temporal-quantity
            :unit (m / month)))

# ::id berts_mouth_12
# ::snt It lasted for seconds.
# ::suppl berts_mouth_12
(l / last-01
   :ARG2 (t / temporal-quantity
            :unit (s / second)))

# ::id berts_mouth_13
# ::snt The book is for Lisa.
# ::suppl berts_mouth_13
(b / book
   :beneficiary (p / person
                   :name (n / name
                            :op1 "Lisa")))

# ::id berts_mouth_14
# ::snt The book is for John.
# ::suppl berts_mouth_14
(b / book
   :beneficiary (p / person
                   :name (n / name
                            :op1 "John")))

# ::id berts_mouth_15
# ::snt The book is for him.
# ::suppl berts_mouth_15
(b / book
   :beneficiary (h / he))

# ::id berts_mouth_16
# ::snt The book is for her.
# ::suppl berts_mouth_16
(b / book
   :beneficiary (s / she))

# ::id berts_mouth_17
# ::snt The book is for me.
# ::suppl berts_mouth_17
(b / book
   :beneficiary (i / i))

# ::id berts_mouth_18
# ::snt The book is for reading.
# ::suppl berts_mouth_18
(b / book
   :purpose (r / read-01))

# ::id berts_mouth_19
# ::snt The book is for learning.
# ::suppl berts_mouth_19
(b / book
   :purpose (l / learn-01))

# ::id berts_mouth_20
# ::snt The book is for viewing.
# ::suppl berts_mouth_20
(b / book
   :purpose (v / view-01))

# ::id berts_mouth_21
# ::snt The book is for studying.
# ::suppl berts_mouth_21
(b / book
   :purpose (s / study-01))

# ::id berts_mouth_22
# ::snt The book is for enjoying.
# ::suppl berts_mouth_22
(b / book
   :purpose (e / enjoy-01))

# ::id berts_mouth_23
# ::snt The event is in January.
# ::suppl berts_mouth_23
(b / be-temporally-at-91
   :ARG1 (e / event)
   :ARG2 (d / date-entity
            :month 1))

# ::id berts_mouth_24
# ::snt The dinner is on the table.
# ::suppl berts_mouth_24
(b / be-located-at-91
   :ARG1 (d / dinner)
   :ARG2 (o / on
            :op1 (t / table)))

# ::id berts_mouth_25
# ::snt The dinner is on the stove.
# ::suppl berts_mouth_25
(b / be-located-at-91
   :ARG1 (d / dinner)
   :ARG2 (o / on
            :op1 (s / stove)))

# ::id berts_mouth_26
# ::snt The dinner is on the counter.
# ::suppl berts_mouth_26
(b / be-located-at-91
   :ARG1 (d / dinner)
   :ARG2 (o / on
            :op1 (c / counter)))

# ::id berts_mouth_27
# ::snt The dinner is on the plate.
# ::suppl berts_mouth_27
(b / be-located-at-91
   :ARG1 (d / dinner)
   :ARG2 (o / on
            :op1 (p / plate)))

# ::id berts_mouth_28
# ::snt The dinner is on Sunday.
# ::suppl berts_mouth_28
(b / be-temporally-at-91
   :ARG1 (d / dinner)
   :ARG2 (d2 / date-entity
             :weekday "sunday"))

# ::id berts_mouth_29
# ::snt The dinner is on Monday.
# ::suppl berts_mouth_29
(b / be-temporally-at-91
   :ARG1 (d / dinner)
   :ARG2 (d2 / date-entity
             :weekday "monday"))

# ::id berts_mouth_30
# ::snt The dinner is on Tuesday.
# ::suppl berts_mouth_30
(b / be-temporally-at-91
   :ARG1 (d / dinner)
   :ARG2 (d2 / date-entity
             :weekday "tuesday"))

# ::id berts_mouth_31
# ::snt The dinner is on Wednesday.
# ::suppl berts_mouth_31
(b / be-temporally-at-91
   :ARG1 (d / dinner)
   :ARG2 (d2 / date-entity
             :weekday "wednesday"))

# ::id berts_mouth_32
# ::snt The dinner is on Saturday.
# ::suppl berts_mouth_32
(b / be-temporally-at-91
   :ARG1 (d / dinner)
   :ARG2 (d2 / date-entity
             :weekday "saturday"))

# ::id berts_mouth_33
# ::snt I will run the study.
# ::suppl berts_mouth_33
(r / run-01
   :ARG0 (i / i)
   :ARG1 (s / study))

# ::id berts_mouth_34
# ::snt I will run the restaurant.
# ::suppl berts_mouth_34
(r / run-01
   :ARG0 (i / i)
   :ARG1 (r2 / restaurant))

# ::id berts_mouth_35
# ::snt I will run the store.
# ::suppl berts_mouth_35
(r / run-01
   :ARG0 (i / i)
   :ARG1 (s / store))

# ::id berts_mouth_36
# ::snt I will run the lab.
# ::suppl berts_mouth_36
(r / run-01
   :ARG0 (i / i)
   :ARG1 (l / lab))

# ::id berts_mouth_37
# ::snt I will run the shop.
# ::suppl berts_mouth_37
(r / run-01
   :ARG0 (i / i)
   :ARG1 (s / shop))

# ::id berts_mouth_38
# ::snt I will run the business.
# ::suppl berts_mouth_38
(r / run-01
   :ARG0 (i / i)
   :ARG1 (b / business))

# ::id berts_mouth_39
# ::snt I will run the race.
# ::suppl berts_mouth_39
(r / run-02
   :ARG0 (i / i)
   :ARG1 (r2 / race))

# ::id berts_mouth_40
# ::snt I will run the marathon.
# ::suppl berts_mouth_40
(r / run-02
   :ARG0 (i / i)
   :ARG1 (m / marathon))

# ::id berts_mouth_41
# ::snt I will run the course.
# ::suppl berts_mouth_41
(r / run-02
   :ARG0 (i / i)
   :ARG1 (c / course))

# ::id berts_mouth_42
# ::snt I will run the trail.
# ::suppl berts_mouth_42
(r / run-02
   :ARG0 (i / i)
   :ARG1 (t / trail))

# ::id berts_mouth_43
# ::snt I will run the mile.
# ::suppl berts_mouth_43
(r / run-02
   :ARG0 (i / i)
   :ARG1 (d / distance-quantity
            :quant 1
            :unit (m / mile)))

# ::id berts_mouth_44
# ::snt I started the car.
# ::suppl berts_mouth_44
(s / start-01
   :ARG0 (i / i)
   :ARG1 (c / car))

# ::id berts_mouth_45
# ::snt I started truck.
# ::suppl berts_mouth_45
(s / start-01
   :ARG0 (i / i)
   :ARG1 (t / truck))

# ::id berts_mouth_46
# ::snt I started the engine.
# ::suppl berts_mouth_46
(s / start-01
   :ARG0 (i / i)
   :ARG1 (e / engine))

# ::id berts_mouth_47
# ::snt I started the bus.
# ::suppl berts_mouth_47
(s / start-01
   :ARG0 (i / i)
   :ARG1 (b / bus))

# ::id berts_mouth_48
# ::snt I started the boat.
# ::suppl berts_mouth_48
(s / start-01
   :ARG0 (i / i)
   :ARG1 (b / boat))

# ::id berts_mouth_49
# ::snt I started the book.
# ::suppl berts_mouth_49
(s / start-01
   :ARG0 (i / i)
   :ARG1 (b / book))

# ::id berts_mouth_50
# ::snt I started the journal.
# ::suppl berts_mouth_50
(s / start-01
   :ARG0 (i / i)
   :ARG1 (j / journal))

# ::id berts_mouth_51
# ::snt I started the magazine.
# ::suppl berts_mouth_51
(s / start-01
   :ARG0 (i / i)
   :ARG1 (m / magazine))

# ::id berts_mouth_52
# ::snt I started the movie.
# ::suppl berts_mouth_52
(s / start-01
   :ARG0 (i / i)
   :ARG1 (m / movie))

# ::id berts_mouth_53
# ::snt I started the episode.
# ::suppl berts_mouth_53
(s / start-01
   :ARG0 (i / i)
   :ARG1 (e / episode))

# ::id berts_mouth_54
# ::snt I ate salad with a fork.
# ::suppl berts_mouth_54
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :instrument (f / fork))

# ::id berts_mouth_55
# ::snt I ate salad with a spoon.
# ::suppl berts_mouth_55
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :instrument (s2 / spoon))

# ::id berts_mouth_56
# ::snt I ate salad with a knife.
# ::suppl berts_mouth_56
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :instrument (k / knife))

# ::id berts_mouth_57
# ::snt I ate salad with enthusiasm.
# ::suppl berts_mouth_57
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :manner (e2 / enthusiastic-03))

# ::id berts_mouth_58
# ::snt I ate salad with enjoyment.
# ::suppl berts_mouth_58
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :manner (e2 / enjoy-01))

# ::id berts_mouth_59
# ::snt I ate salad with gusto.
# ::suppl berts_mouth_59
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :manner (g / gusto))

# ::id berts_mouth_60
# ::snt I ate salad with pleasure.
# ::suppl berts_mouth_60
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :manner (p / please-01))

# ::id berts_mouth_61
# ::snt I ate salad with him.
# ::suppl berts_mouth_61
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :accompanier (h / he))

# ::id berts_mouth_62
# ::snt I ate salad with John.
# ::suppl berts_mouth_62
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :accompanier (p / person
                   :name "John"))

# ::id berts_mouth_63
# ::snt I ate salad with Lisa.
# ::suppl berts_mouth_63
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :accompanier (p / person
                   :name "Lisa"))

# ::id berts_mouth_64
# ::snt I ate salad with her.
# ::suppl berts_mouth_64
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad)
   :accompanier (s2 / she))

# ::id berts_mouth_65
# ::snt I had slept.
# ::suppl berts_mouth_65
(s / sleep-01
   :ARG0 (i / i))

# ::id berts_mouth_66
# ::snt I had seen.
# ::suppl berts_mouth_66
(s / see-01
   :ARG0 (i / i))

# ::id berts_mouth_67
# ::snt I had eaten.
# ::suppl berts_mouth_67
(e / eat-01
   :ARG0 (i / i))

# ::id berts_mouth_68
# ::snt I had gone.
# ::suppl berts_mouth_68
(g / go-02
   :ARG0 (i / i))

# ::id berts_mouth_69
# ::snt I had a party.
# ::suppl berts_mouth_69
(h / party-01
   :ARG0 (i / i))

# ::id berts_mouth_70
# ::snt I had a reception.
# ::suppl berts_mouth_70
(h / have-06
   :ARG0 (i / i)
   :ARG1 (r / reception))

# ::id berts_mouth_71
# ::snt I had a ceremony.
# ::suppl berts_mouth_71
(h / have-06
   :ARG0 (i / i)
   :ARG1 (c / ceremony))

# ::id berts_mouth_72
# ::snt I had a wedding.
# ::suppl berts_mouth_72
(h / have-06
   :ARG0 (i / i)
   :ARG1 (w / wedding))

# ::id berts_mouth_73
# ::snt I had a meeting.
# ::suppl berts_mouth_73
(m / meet-03
   :ARG0 (i / i))

# ::id berts_mouth_74
# ::snt I had pizza.
# ::suppl berts_mouth_74
(h / eat-01
   :ARG0 (i / i)
   :ARG1 (p / pizza))

# ::id berts_mouth_75
# ::snt I had salad.
# ::suppl berts_mouth_75
(h / eat-01
   :ARG0 (i / i)
   :ARG1 (s / salad))

# ::id berts_mouth_76
# ::snt I had coffee.
# ::suppl berts_mouth_76
(h / drink-01
   :ARG0 (i / i)
   :ARG1 (c / coffee))

# ::id berts_mouth_77
# ::snt I had cake.
# ::suppl berts_mouth_77
(h / eat-01
   :ARG0 (i / i)
   :ARG1 (c / cake))

# ::id berts_mouth_78
# ::snt I had sushi.
# ::suppl berts_mouth_78
(h / eat-01
   :ARG0 (i / i)
   :ARG1 (s / sushi))

# ::id berts_mouth_79
# ::snt I had a meeting.
# ::suppl berts_mouth_79
(m / meet-03
   :ARG0 (i / i))

# ::id berts_mouth_80
# ::snt I had a blister.
# ::suppl berts_mouth_80
(h / have-03
   :ARG0 (i / i)
   :ARG1 (b / blister))

# ::id berts_mouth_81
# ::snt I had a fever.
# ::suppl berts_mouth_81
(h / have-03
   :ARG0 (i / i)
   :ARG1 (f / fever))

# ::id berts_mouth_82
# ::snt I had a headache.
# ::suppl berts_mouth_82
(h / have-03
   :ARG0 (i / i)
   :ARG1 (h2 / headache))

# ::id berts_mouth_83
# ::snt I had a cold.
# ::suppl berts_mouth_83
(h / have-03
   :ARG0 (i / i)
   :ARG1 (c / cold))

# ::id berts_mouth_84
# ::snt I had a cough.
# ::suppl berts_mouth_84
(h / have-03
   :ARG0 (i / i)
   :ARG1 (c / cough-01))

# ::id berts_mouth_85
# ::snt The event is in London.
# ::suppl berts_mouth_85
(b / be-located-at-91
   :ARG1 (e / event)
   :ARG2 (c / city
            :wiki "London"
            :name (n / name
                     :op1 "London")))

# ::id berts_mouth_86
# ::snt The event is in here.
# ::suppl berts_mouth_86
(b / be-located-at-91
   :ARG1 (e / event)
   :ARG2 (h / here))

# ::id berts_mouth_87
# ::snt The event is in Paris.
# ::suppl berts_mouth_87
(b / be-located-at-91
   :ARG1 (e / event)
   :ARG2 (c / city
            :wiki "Paris"
            :name (n / name
                     :op1 "Paris")))

# ::id berts_mouth_88
# ::snt The event is in there.
# ::suppl berts_mouth_88
(b / be-located-at-91
   :ARG1 (e / event)
   :ARG2 (t / there))

# ::id berts_mouth_89
# ::snt The event is in Canada.
# ::suppl berts_mouth_89
(b / be-located-at-91
   :ARG1 (e / event)
   :ARG2 (c / country
            :wiki "Canada"
            :name (n / name
                     :op1 "Canada")))

# ::id berts_mouth_90
# ::snt The event is in August.
# ::suppl berts_mouth_90
(b / be-temporally-at-91
   :ARG1 (e / event)
   :ARG2 (d / date-entity
            :month 8))

# ::id berts_mouth_91
# ::snt The event is in July.
# ::suppl berts_mouth_91
(b / be-temporally-at-91
   :ARG1 (e / event)
   :ARG2 (d / date-entity
            :month 7))

# ::id berts_mouth_92
# ::snt The event is in October.
# ::suppl berts_mouth_92
(b / be-temporally-at-91
   :ARG1 (e / event)
   :ARG2 (d / date-entity
            :month 10))

# ::id berts_mouth_93
# ::snt The event is in June.
# ::suppl berts_mouth_93
(b / be-temporally-at-91
   :ARG1 (e / event)
   :ARG2 (d / date-entity
            :month 6))

# ::id berts_mouth_94
# ::snt The event is in January.
# ::suppl berts_mouth_94
(b / be-temporally-at-91
   :ARG1 (e / event)
   :ARG2 (d / date-entity
            :month 1))

# ::snt The soldier knew that the men mentioned that we knew that we slept
# ::tree TP_3p(knew,soldier,TP_3p(mentioned,men,TP_resolve_coref_1p(knew_resolve_coref,we,TP_intr_1p(we_slept))))
# ::size0 2
# ::size1 4
# ::id deep_recursion_pronouns_0
# ::suppl deep_recursion_pronouns_0
(u_5055 / know-01
        :ARG0 (s / soldier)
        :ARG1 (u_5053 / mention-01
                      :ARG0 (r / man)
                      :ARG1 (u_5051 / know-01
                                    :ARG0 (u_5054 / we
                                                  :ARG0-of (u_5052 / sleep-01
                                                                   :ARG1-of u_5051)))))

# ::snt We knew that we sneezed
# ::tree TP_resolve_coref_1p(knew_resolve_coref,we,TP_intr_1p(we_sneezed))
# ::size0 2
# ::size1 2
# ::id deep_recursion_pronouns_1
# ::suppl deep_recursion_pronouns_1
(u_5056 / know-01
        :ARG0 (r / we
                 :ARG0-of (u_5057 / sneeze-01
                                  :ARG1-of u_5056)))

# ::snt The astronaut said that the boys believed that I knew that I slept
# ::tree TP_3p(said,astronaut,TP_3p(believed,boys,TP_resolve_coref_1s(knew_resolve_coref,I,TP_intr_1s(I_slept))))
# ::size0 2
# ::size1 4
# ::id deep_recursion_pronouns_2
# ::suppl deep_recursion_pronouns_2
(u_5062 / say-01
        :ARG0 (a / astronaut)
        :ARG1 (u_5060 / believe-01
                      :ARG0 (r / boy)
                      :ARG1 (u_5058 / know-01
                                    :ARG0 (u_5061 / i
                                                  :ARG0-of (u_5059 / sleep-01
                                                                   :ARG1-of u_5058)))))

# ::snt You mentioned that the doctor hated you
# ::tree TP_resolve_coref_2(mentioned_resolve_coref,you,TP_tr_2(hated_you,doctor))
# ::size0 2
# ::size1 2
# ::id deep_recursion_pronouns_3
# ::suppl deep_recursion_pronouns_3
(u_5063 / mention-01
        :ARG0 (r / you
                 :ARG1-of (u_5064 / hate-01
                                  :ARG0 (d / doctor)
                                  :ARG1-of u_5063)))

# ::snt We believed that you believed that the women believed that I knew that the soldier hated me
# ::tree TP_1p(believed,we,TP_2(believed,you,TP_3p(believed,women,TP_resolve_coref_1s(knew_resolve_coref,I,TP_tr_1s(hated_me,soldier)))))
# ::size0 2
# ::size1 5
# ::id deep_recursion_pronouns_4
# ::suppl deep_recursion_pronouns_4
(u_5073 / believe-01
        :ARG0 (r / we)
        :ARG1 (u_5070 / believe-01
                      :ARG0 (u_5075 / you)
                      :ARG1 (u_5067 / believe-01
                                    :ARG0 (u_5072 / woman)
                                    :ARG1 (u_5065 / know-01
                                                  :ARG0 (u_5069 / i
                                                                :ARG1-of (u_5066 / hate-01
                                                                                 :ARG0 (s / soldier)
                                                                                 :ARG1-of u_5065))))))

# ::snt You thought that the girls believed that we said that we sneezed
# ::tree TP_2(thought,you,TP_3p(believed,girls,TP_resolve_coref_1p(said_resolve_coref,we,TP_intr_1p(we_sneezed))))
# ::size0 2
# ::size1 4
# ::id deep_recursion_pronouns_5
# ::suppl deep_recursion_pronouns_5
(u_5080 / think-01
        :ARG0 (r / you)
        :ARG1 (u_5078 / believe-01
                      :ARG0 (u_5081 / girl)
                      :ARG1 (u_5076 / say-01
                                    :ARG0 (u_5079 / we
                                                  :ARG0-of (u_5077 / sneeze-01
                                                                   :ARG1-of u_5076)))))

# ::snt I thought that the lawyer liked me
# ::tree TP_resolve_coref_1s(thought_resolve_coref,I,TP_tr_1s(liked_me,lawyer))
# ::size0 2
# ::size1 2
# ::id deep_recursion_pronouns_6
# ::suppl deep_recursion_pronouns_6
(u_5082 / think-01
        :ARG0 (r / i
                 :ARG1-of (u_5083 / like-01
                                  :ARG0 (m / lawyer)
                                  :ARG1-of u_5082)))

# ::snt I heard that the men liked me
# ::tree TP_resolve_coref_1s(heard_resolve_coref,I,TP_tr_1s(liked_me,men))
# ::size0 2
# ::size1 2
# ::id deep_recursion_pronouns_7
# ::suppl deep_recursion_pronouns_7
(u_5085 / hear-01
        :ARG0 (r / i
                 :ARG1-of (u_5084 / like-01
                                  :ARG0 (u_5086 / man)
                                  :ARG1-of u_5085)))

# ::snt The soldier knew that we heard that we sneezed
# ::tree TP_3p(knew,soldier,TP_resolve_coref_1p(heard_resolve_coref,we,TP_intr_1p(we_sneezed)))
# ::size0 2
# ::size1 3
# ::id deep_recursion_pronouns_8
# ::suppl deep_recursion_pronouns_8
(u_5089 / know-01
        :ARG0 (s / soldier)
        :ARG1 (u_5087 / hear-01
                      :ARG0 (r / we
                               :ARG0-of (u_5088 / sneeze-01
                                                :ARG1-of u_5087))))

# ::snt The soldier heard that you said that you sneezed
# ::tree TP_3p(heard,soldier,TP_resolve_coref_2(said_resolve_coref,you,TP_intr_2(you_sneezed)))
# ::size0 2
# ::size1 3
# ::id deep_recursion_pronouns_9
# ::suppl deep_recursion_pronouns_9
(u_5092 / hear-01
        :ARG0 (s / soldier)
        :ARG1 (u_5090 / say-01
                      :ARG0 (r / you
                               :ARG0-of (u_5091 / sneeze-01
                                                :ARG1-of u_5090))))

# ::snt We mentioned that the soldier mentioned that we slept
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p(mentioned_coref,soldier,TP_intr_1p(we_slept)))
# ::size0 3
# ::size1 3
# ::id deep_recursion_pronouns_10
# ::suppl deep_recursion_pronouns_10
(u_5096 / mention-01
        :ARG0 (r / we
                 :ARG0-of (u_5097 / sleep-01
                                  :ARG1-of (u_5093 / mention-01
                                                   :ARG0 (s / soldier)
                                                   :ARG1-of u_5096))))

# ::snt We thought that the soldier heard that we slept
# ::tree TP_resolve_coref_1p(thought_resolve_coref,we,TP_CP_1p(heard_coref,soldier,TP_intr_1p(we_slept)))
# ::size0 3
# ::size1 3
# ::id deep_recursion_pronouns_11
# ::suppl deep_recursion_pronouns_11
(u_5101 / think-01
        :ARG0 (r / we
                 :ARG0-of (u_5102 / sleep-01
                                  :ARG1-of (u_5098 / hear-01
                                                   :ARG0 (s / soldier)
                                                   :ARG1-of u_5101))))

# ::snt You thought that the boys heard that you sneezed
# ::tree TP_resolve_coref_2(thought_resolve_coref,you,TP_CP_2(heard_coref,boys,TP_intr_2(you_sneezed)))
# ::size0 3
# ::size1 3
# ::id deep_recursion_pronouns_12
# ::suppl deep_recursion_pronouns_12
(u_5106 / think-01
        :ARG0 (r / you
                 :ARG0-of (u_5105 / sneeze-01
                                  :ARG1-of (u_5103 / hear-01
                                                   :ARG0 (u_5107 / boy)
                                                   :ARG1-of u_5106))))

# ::snt You mentioned that the boys thought that the soldier hated you
# ::tree TP_resolve_coref_2(mentioned_resolve_coref,you,TP_CP_2(thought_coref,boys,TP_tr_2(hated_you,soldier)))
# ::size0 3
# ::size1 3
# ::id deep_recursion_pronouns_13
# ::suppl deep_recursion_pronouns_13
(u_5111 / mention-01
        :ARG0 (r / you
                 :ARG1-of (u_5110 / hate-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_5108 / think-01
                                                   :ARG0 (u_5112 / boy)
                                                   :ARG1-of u_5111))))

# ::snt We knew that the women thought that the boys liked us
# ::tree TP_resolve_coref_1p(knew_resolve_coref,we,TP_CP_1p(thought_coref,women,TP_tr_1p(liked_us,boys)))
# ::size0 3
# ::size1 3
# ::id deep_recursion_pronouns_14
# ::suppl deep_recursion_pronouns_14
(u_5116 / know-01
        :ARG0 (r / we
                 :ARG1-of (u_5113 / like-01
                                  :ARG0 (u_5115 / boy)
                                  :ARG1-of (u_5114 / think-01
                                                   :ARG0 (u_5117 / woman)
                                                   :ARG1-of u_5116))))

# ::snt You knew that we said that you sneezed
# ::tree TP_resolve_coref_2(knew_resolve_coref,you,TP_CP_2_subj1p(said_coref,we,TP_intr_2(you_sneezed)))
# ::size0 3
# ::size1 3
# ::id deep_recursion_pronouns_15
# ::suppl deep_recursion_pronouns_15
(u_5121 / know-01
        :ARG0 (r / you
                 :ARG0-of (u_5120 / sneeze-01
                                  :ARG1-of (u_5118 / say-01
                                                   :ARG0 (u_5122 / we)
                                                   :ARG1-of u_5121))))

# ::snt The boys thought that you thought that we believed that I believed that the soldier liked us
# ::tree TP_3p(thought,boys,TP_2(thought,you,TP_resolve_coref_1p(believed_resolve_coref,we,TP_CP_1p_subj1s(believed_coref,I,TP_tr_1p(liked_us,soldier)))))
# ::size0 3
# ::size1 5
# ::id deep_recursion_pronouns_16
# ::suppl deep_recursion_pronouns_16
(u_5131 / think-01
        :ARG0 (r / boy)
        :ARG1 (u_5128 / think-01
                      :ARG0 (u_5133 / you)
                      :ARG1 (u_5126 / believe-01
                                    :ARG0 (u_5130 / we
                                                  :ARG1-of (u_5125 / like-01
                                                                   :ARG0 (s / soldier)
                                                                   :ARG1-of (u_5123 / believe-01
                                                                                    :ARG0 (u_5127 / i)
                                                                                    :ARG1-of u_5126))))))

# ::snt You thought that the soldier heard that we mentioned that I believed that the lawyer liked us
# ::tree TP_2(thought,you,TP_3p(heard,soldier,TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p_subj1s(believed_coref,I,TP_tr_1p(liked_us,lawyer)))))
# ::size0 3
# ::size1 5
# ::id deep_recursion_pronouns_17
# ::suppl deep_recursion_pronouns_17
(u_5139 / think-01
        :ARG0 (r / you)
        :ARG1 (u_5138 / hear-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_5136 / mention-01
                                    :ARG0 (u_5141 / we
                                                  :ARG1-of (u_5135 / like-01
                                                                   :ARG0 (m / lawyer)
                                                                   :ARG1-of (u_5134 / believe-01
                                                                                    :ARG0 (u_5137 / i)
                                                                                    :ARG1-of u_5136))))))

# ::snt You knew that the lawyer believed that the astronaut liked you
# ::tree TP_resolve_coref_2(knew_resolve_coref,you,TP_CP_2(believed_coref,lawyer,TP_tr_2(liked_you,astronaut)))
# ::size0 3
# ::size1 3
# ::id deep_recursion_pronouns_18
# ::suppl deep_recursion_pronouns_18
(u_5143 / know-01
        :ARG0 (r / you
                 :ARG1-of (u_5144 / like-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_5142 / believe-01
                                                   :ARG0 (m / lawyer)
                                                   :ARG1-of u_5143))))

# ::snt I mentioned that the astronaut thought that you said that the girls believed that you slept
# ::tree TP_1s(mentioned,I,TP_3p(thought,astronaut,TP_resolve_coref_2(said_resolve_coref,you,TP_CP_2(believed_coref,girls,TP_intr_2(you_slept)))))
# ::size0 3
# ::size1 5
# ::id deep_recursion_pronouns_19
# ::suppl deep_recursion_pronouns_19
(u_5151 / mention-01
        :ARG0 (r / i)
        :ARG1 (u_5150 / think-01
                      :ARG0 (a / astronaut)
                      :ARG1 (u_5148 / say-01
                                    :ARG0 (u_5152 / you
                                                  :ARG0-of (u_5147 / sleep-01
                                                                   :ARG1-of (u_5145 / believe-01
                                                                                    :ARG0 (u_5149 / girl)
                                                                                    :ARG1-of u_5148))))))

# ::snt The boys mentioned that I heard that we thought that the kids said that the soldier liked me
# ::tree TP_3p(mentioned,boys,TP_resolve_coref_1s(heard_resolve_coref,I,TP_CP_1s_subj1p(thought_coref,we,TP_CP_1s(said_coref,kids,TP_tr_1s(liked_me,soldier)))))
# ::size0 4
# ::size1 5
# ::id deep_recursion_pronouns_20
# ::suppl deep_recursion_pronouns_20
(u_5161 / mention-01
        :ARG0 (r / boy)
        :ARG1 (u_5159 / hear-01
                      :ARG0 (u_5163 / i
                                    :ARG1-of (u_5155 / like-01
                                                     :ARG0 (s / soldier)
                                                     :ARG1-of (u_5153 / say-01
                                                                      :ARG0 (u_5158 / kid)
                                                                      :ARG1-of (u_5156 / think-01
                                                                                       :ARG0 (u_5160 / we)
                                                                                       :ARG1-of u_5159))))))

# ::snt I said that you mentioned that we thought that the boys hated me
# ::tree TP_resolve_coref_1s(said_resolve_coref,I,TP_CP_1s_subj2(mentioned_coref,you,TP_CP_1s_subj1p(thought_coref,we,TP_tr_1s(hated_me,boys))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_pronouns_21
# ::suppl deep_recursion_pronouns_21
(u_5169 / say-01
        :ARG0 (r / i
                 :ARG1-of (u_5164 / hate-01
                                  :ARG0 (u_5166 / boy)
                                  :ARG1-of (u_5165 / think-01
                                                   :ARG0 (u_5168 / we)
                                                   :ARG1-of (u_5167 / mention-01
                                                                    :ARG0 (u_5170 / you)
                                                                    :ARG1-of u_5169)))))

# ::snt We believed that the astronaut knew that I said that the girls said that the men said that I slept
# ::tree TP_1p(believed,we,TP_3p(knew,astronaut,TP_resolve_coref_1s(said_resolve_coref,I,TP_CP_1s(said_coref,girls,TP_CP_1s(said_coref,men,TP_intr_1s(I_slept))))))
# ::size0 4
# ::size1 6
# ::id deep_recursion_pronouns_22
# ::suppl deep_recursion_pronouns_22
(u_5180 / believe-01
        :ARG0 (r / we)
        :ARG1 (u_5179 / know-01
                      :ARG0 (a / astronaut)
                      :ARG1 (u_5177 / say-01
                                    :ARG0 (u_5181 / i
                                                  :ARG0-of (u_5173 / sleep-01
                                                                   :ARG1-of (u_5171 / say-01
                                                                                    :ARG0 (u_5176 / man)
                                                                                    :ARG1-of (u_5174 / say-01
                                                                                                     :ARG0 (u_5178 / girl)
                                                                                                     :ARG1-of u_5177)))))))

# ::snt The men heard that the doctor said that we thought that the soldier knew that the lawyer thought that we slept
# ::tree TP_3p(heard,men,TP_3p(said,doctor,TP_resolve_coref_1p(thought_resolve_coref,we,TP_CP_1p(knew_coref,soldier,TP_CP_1p(thought_coref,lawyer,TP_intr_1p(we_slept))))))
# ::size0 4
# ::size1 6
# ::id deep_recursion_pronouns_23
# ::suppl deep_recursion_pronouns_23
(u_5191 / hear-01
        :ARG0 (r / man)
        :ARG1 (u_5189 / say-01
                      :ARG0 (d / doctor)
                      :ARG1 (u_5187 / think-01
                                    :ARG0 (u_5193 / we
                                                  :ARG0-of (u_5188 / sleep-01
                                                                   :ARG1-of (u_5182 / think-01
                                                                                    :ARG0 (m / lawyer)
                                                                                    :ARG1-of (u_5184 / know-01
                                                                                                     :ARG0 (s / soldier)
                                                                                                     :ARG1-of u_5187)))))))

# ::snt I mentioned that we knew that you believed that I slept
# ::tree TP_resolve_coref_1s(mentioned_resolve_coref,I,TP_CP_1s_subj1p(knew_coref,we,TP_CP_1s_subj2(believed_coref,you,TP_intr_1s(I_slept))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_pronouns_24
# ::suppl deep_recursion_pronouns_24
(u_5200 / mention-01
        :ARG0 (r / i
                 :ARG0-of (u_5196 / sleep-01
                                  :ARG1-of (u_5194 / believe-01
                                                   :ARG0 (u_5199 / you)
                                                   :ARG1-of (u_5197 / know-01
                                                                    :ARG0 (u_5201 / we)
                                                                    :ARG1-of u_5200)))))

# ::snt We said that the astronaut thought that I thought that the girls liked us
# ::tree TP_resolve_coref_1p(said_resolve_coref,we,TP_CP_1p(thought_coref,astronaut,TP_CP_1p_subj1s(thought_coref,I,TP_tr_1p(liked_us,girls))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_pronouns_25
# ::suppl deep_recursion_pronouns_25
(u_5206 / say-01
        :ARG0 (r / we
                 :ARG1-of (u_5202 / like-01
                                  :ARG0 (u_5204 / girl)
                                  :ARG1-of (u_5203 / think-01
                                                   :ARG0 (u_5207 / i)
                                                   :ARG1-of (u_5205 / think-01
                                                                    :ARG0 (a / astronaut)
                                                                    :ARG1-of u_5206)))))

# ::snt We heard that I believed that you thought that we sneezed
# ::tree TP_resolve_coref_1p(heard_resolve_coref,we,TP_CP_1p_subj1s(believed_coref,I,TP_CP_1p_subj2(thought_coref,you,TP_intr_1p(we_sneezed))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_pronouns_26
# ::suppl deep_recursion_pronouns_26
(u_5214 / hear-01
        :ARG0 (r / we
                 :ARG0-of (u_5210 / sneeze-01
                                  :ARG1-of (u_5208 / think-01
                                                   :ARG0 (u_5213 / you)
                                                   :ARG1-of (u_5211 / believe-01
                                                                    :ARG0 (u_5215 / i)
                                                                    :ARG1-of u_5214)))))

# ::snt We thought that the lawyer heard that the girls thought that we slept
# ::tree TP_resolve_coref_1p(thought_resolve_coref,we,TP_CP_1p(heard_coref,lawyer,TP_CP_1p(thought_coref,girls,TP_intr_1p(we_slept))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_pronouns_27
# ::suppl deep_recursion_pronouns_27
(u_5221 / think-01
        :ARG0 (r / we
                 :ARG0-of (u_5218 / sleep-01
                                  :ARG1-of (u_5216 / think-01
                                                   :ARG0 (u_5222 / girl)
                                                   :ARG1-of (u_5219 / hear-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of u_5221)))))

# ::snt I mentioned that the astronaut believed that the girls mentioned that the men liked me
# ::tree TP_resolve_coref_1s(mentioned_resolve_coref,I,TP_CP_1s(believed_coref,astronaut,TP_CP_1s(mentioned_coref,girls,TP_tr_1s(liked_me,men))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_pronouns_28
# ::suppl deep_recursion_pronouns_28
(u_5227 / mention-01
        :ARG0 (r / i
                 :ARG1-of (u_5223 / like-01
                                  :ARG0 (u_5225 / man)
                                  :ARG1-of (u_5224 / mention-01
                                                   :ARG0 (u_5228 / girl)
                                                   :ARG1-of (u_5226 / believe-01
                                                                    :ARG0 (a / astronaut)
                                                                    :ARG1-of u_5227)))))

# ::snt I believed that the boys thought that we thought that the astronaut hated me
# ::tree TP_resolve_coref_1s(believed_resolve_coref,I,TP_CP_1s(thought_coref,boys,TP_CP_1s_subj1p(thought_coref,we,TP_tr_1s(hated_me,astronaut))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_pronouns_29
# ::suppl deep_recursion_pronouns_29
(u_5233 / believe-01
        :ARG0 (r / i
                 :ARG1-of (u_5230 / hate-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_5229 / think-01
                                                   :ARG0 (u_5232 / we)
                                                   :ARG1-of (u_5231 / think-01
                                                                    :ARG0 (u_5234 / boy)
                                                                    :ARG1-of u_5233)))))

# ::snt The doctor heard that the soldier thought that we mentioned that you mentioned that I believed that the boys believed that the girls liked us
# ::tree TP_3p(heard,doctor,TP_3p(thought,soldier,TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p_subj2(mentioned_coref,you,TP_CP_1p_subj1s(believed_coref,I,TP_CP_1p(believed_coref,boys,TP_tr_1p(liked_us,girls)))))))
# ::size0 5
# ::size1 7
# ::id deep_recursion_pronouns_30
# ::suppl deep_recursion_pronouns_30
(u_5245 / hear-01
        :ARG0 (d / doctor)
        :ARG1 (u_5244 / think-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_5242 / mention-01
                                    :ARG0 (r / we
                                             :ARG1-of (u_5235 / like-01
                                                              :ARG0 (u_5237 / girl)
                                                              :ARG1-of (u_5236 / believe-01
                                                                               :ARG0 (u_5239 / boy)
                                                                               :ARG1-of (u_5238 / believe-01
                                                                                                :ARG0 (u_5241 / i)
                                                                                                :ARG1-of (u_5240 / mention-01
                                                                                                                 :ARG0 (u_5243 / you)
                                                                                                                 :ARG1-of u_5242))))))))

# ::snt You mentioned that the doctor heard that I said that the men believed that the lawyer liked you
# ::tree TP_resolve_coref_2(mentioned_resolve_coref,you,TP_CP_2(heard_coref,doctor,TP_CP_2_subj1s(said_coref,I,TP_CP_2(believed_coref,men,TP_tr_2(liked_you,lawyer)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_pronouns_31
# ::suppl deep_recursion_pronouns_31
(u_5252 / mention-01
        :ARG0 (r / you
                 :ARG1-of (u_5248 / like-01
                                  :ARG0 (m / lawyer)
                                  :ARG1-of (u_5247 / believe-01
                                                   :ARG0 (u_5250 / man)
                                                   :ARG1-of (u_5249 / say-01
                                                                    :ARG0 (u_5253 / i)
                                                                    :ARG1-of (u_5251 / hear-01
                                                                                     :ARG0 (d / doctor)
                                                                                     :ARG1-of u_5252))))))

# ::snt I believed that the women said that the kids knew that the astronaut believed that I slept
# ::tree TP_resolve_coref_1s(believed_resolve_coref,I,TP_CP_1s(said_coref,women,TP_CP_1s(knew_coref,kids,TP_CP_1s(believed_coref,astronaut,TP_intr_1s(I_slept)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_pronouns_32
# ::suppl deep_recursion_pronouns_32
(u_5262 / believe-01
        :ARG0 (r / i
                 :ARG0-of (u_5258 / sleep-01
                                  :ARG1-of (u_5254 / believe-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_5256 / know-01
                                                                    :ARG0 (u_5261 / kid)
                                                                    :ARG1-of (u_5259 / say-01
                                                                                     :ARG0 (u_5263 / woman)
                                                                                     :ARG1-of u_5262))))))

# ::snt I believed that you knew that we said that the women thought that I sneezed
# ::tree TP_resolve_coref_1s(believed_resolve_coref,I,TP_CP_1s_subj2(knew_coref,you,TP_CP_1s_subj1p(said_coref,we,TP_CP_1s(thought_coref,women,TP_intr_1s(I_sneezed)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_pronouns_33
# ::suppl deep_recursion_pronouns_33
(u_5273 / believe-01
        :ARG0 (r / i
                 :ARG0-of (u_5266 / sneeze-01
                                  :ARG1-of (u_5264 / think-01
                                                   :ARG0 (u_5269 / woman)
                                                   :ARG1-of (u_5267 / say-01
                                                                    :ARG0 (u_5272 / we)
                                                                    :ARG1-of (u_5270 / know-01
                                                                                     :ARG0 (u_5274 / you)
                                                                                     :ARG1-of u_5273))))))

# ::snt We knew that the soldier heard that the women heard that the doctor mentioned that we slept
# ::tree TP_resolve_coref_1p(knew_resolve_coref,we,TP_CP_1p(heard_coref,soldier,TP_CP_1p(heard_coref,women,TP_CP_1p(mentioned_coref,doctor,TP_intr_1p(we_slept)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_pronouns_34
# ::suppl deep_recursion_pronouns_34
(u_5283 / know-01
        :ARG0 (r / we
                 :ARG0-of (u_5279 / sleep-01
                                  :ARG1-of (u_5275 / mention-01
                                                   :ARG0 (d / doctor)
                                                   :ARG1-of (u_5277 / hear-01
                                                                    :ARG0 (u_5284 / woman)
                                                                    :ARG1-of (u_5280 / hear-01
                                                                                     :ARG0 (s / soldier)
                                                                                     :ARG1-of u_5283))))))

# ::snt I mentioned that the women knew that the astronaut mentioned that the soldier knew that I slept
# ::tree TP_resolve_coref_1s(mentioned_resolve_coref,I,TP_CP_1s(knew_coref,women,TP_CP_1s(mentioned_coref,astronaut,TP_CP_1s(knew_coref,soldier,TP_intr_1s(I_slept)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_pronouns_35
# ::suppl deep_recursion_pronouns_35
(u_5293 / mention-01
        :ARG0 (r / i
                 :ARG0-of (u_5292 / sleep-01
                                  :ARG1-of (u_5285 / know-01
                                                   :ARG0 (s / soldier)
                                                   :ARG1-of (u_5288 / mention-01
                                                                    :ARG0 (a / astronaut)
                                                                    :ARG1-of (u_5290 / know-01
                                                                                     :ARG0 (u_5294 / woman)
                                                                                     :ARG1-of u_5293))))))

# ::snt The girls said that I mentioned that the kids thought that we believed that the women believed that the astronaut liked me
# ::tree TP_3p(said,girls,TP_resolve_coref_1s(mentioned_resolve_coref,I,TP_CP_1s(thought_coref,kids,TP_CP_1s_subj1p(believed_coref,we,TP_CP_1s(believed_coref,women,TP_tr_1s(liked_me,astronaut))))))
# ::size0 5
# ::size1 6
# ::id deep_recursion_pronouns_36
# ::suppl deep_recursion_pronouns_36
(u_5303 / say-01
        :ARG0 (r / girl)
        :ARG1 (u_5301 / mention-01
                      :ARG0 (u_5304 / i
                                    :ARG1-of (u_5296 / like-01
                                                     :ARG0 (a / astronaut)
                                                     :ARG1-of (u_5295 / believe-01
                                                                      :ARG0 (u_5298 / woman)
                                                                      :ARG1-of (u_5297 / believe-01
                                                                                       :ARG0 (u_5300 / we)
                                                                                       :ARG1-of (u_5299 / think-01
                                                                                                        :ARG0 (u_5302 / kid)
                                                                                                        :ARG1-of u_5301)))))))

# ::snt We knew that the lawyer heard that the soldier said that you said that we sneezed
# ::tree TP_resolve_coref_1p(knew_resolve_coref,we,TP_CP_1p(heard_coref,lawyer,TP_CP_1p(said_coref,soldier,TP_CP_1p_subj2(said_coref,you,TP_intr_1p(we_sneezed)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_pronouns_37
# ::suppl deep_recursion_pronouns_37
(u_5313 / know-01
        :ARG0 (r / we
                 :ARG0-of (u_5307 / sneeze-01
                                  :ARG1-of (u_5305 / say-01
                                                   :ARG0 (u_5314 / you)
                                                   :ARG1-of (u_5308 / say-01
                                                                    :ARG0 (s / soldier)
                                                                    :ARG1-of (u_5311 / hear-01
                                                                                     :ARG0 (m / lawyer)
                                                                                     :ARG1-of u_5313))))))

# ::snt We mentioned that you mentioned that the kids said that the girls knew that the soldier hated us
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p_subj2(mentioned_coref,you,TP_CP_1p(said_coref,kids,TP_CP_1p(knew_coref,girls,TP_tr_1p(hated_us,soldier)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_pronouns_38
# ::suppl deep_recursion_pronouns_38
(u_5324 / mention-01
        :ARG0 (r / we
                 :ARG1-of (u_5317 / hate-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_5315 / know-01
                                                   :ARG0 (u_5320 / girl)
                                                   :ARG1-of (u_5318 / say-01
                                                                    :ARG0 (u_5323 / kid)
                                                                    :ARG1-of (u_5321 / mention-01
                                                                                     :ARG0 (u_5325 / you)
                                                                                     :ARG1-of u_5324))))))

# ::snt We said that the women mentioned that the boys knew that the girls knew that we sneezed
# ::tree TP_resolve_coref_1p(said_resolve_coref,we,TP_CP_1p(mentioned_coref,women,TP_CP_1p(knew_coref,boys,TP_CP_1p(knew_coref,girls,TP_intr_1p(we_sneezed)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_pronouns_39
# ::suppl deep_recursion_pronouns_39
(u_5335 / say-01
        :ARG0 (r / we
                 :ARG0-of (u_5328 / sneeze-01
                                  :ARG1-of (u_5326 / know-01
                                                   :ARG0 (u_5331 / girl)
                                                   :ARG1-of (u_5329 / know-01
                                                                    :ARG0 (u_5334 / boy)
                                                                    :ARG1-of (u_5332 / mention-01
                                                                                     :ARG0 (u_5336 / woman)
                                                                                     :ARG1-of u_5335))))))

# ::snt We believed that the kids thought that the girls said that you said that I thought that we slept
# ::tree TP_resolve_coref_1p(believed_resolve_coref,we,TP_CP_1p(thought_coref,kids,TP_CP_1p(said_coref,girls,TP_CP_1p_subj2(said_coref,you,TP_CP_1p_subj1s(thought_coref,I,TP_intr_1p(we_slept))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_pronouns_40
# ::suppl deep_recursion_pronouns_40
(u_5349 / believe-01
        :ARG0 (r / we
                 :ARG0-of (u_5339 / sleep-01
                                  :ARG1-of (u_5337 / think-01
                                                   :ARG0 (u_5342 / i)
                                                   :ARG1-of (u_5340 / say-01
                                                                    :ARG0 (u_5345 / you)
                                                                    :ARG1-of (u_5343 / say-01
                                                                                     :ARG0 (u_5348 / girl)
                                                                                     :ARG1-of (u_5346 / think-01
                                                                                                      :ARG0 (u_5350 / kid)
                                                                                                      :ARG1-of u_5349)))))))

# ::snt The lawyer said that you knew that the girls knew that the kids knew that we knew that the boys knew that you sneezed
# ::tree TP_3p(said,lawyer,TP_resolve_coref_2(knew_resolve_coref,you,TP_CP_2(knew_coref,girls,TP_CP_2(knew_coref,kids,TP_CP_2_subj1p(knew_coref,we,TP_CP_2(knew_coref,boys,TP_intr_2(you_sneezed)))))))
# ::size0 6
# ::size1 7
# ::id deep_recursion_pronouns_41
# ::suppl deep_recursion_pronouns_41
(u_5365 / say-01
        :ARG0 (m / lawyer)
        :ARG1 (u_5363 / know-01
                      :ARG0 (r / you
                               :ARG0-of (u_5353 / sneeze-01
                                                :ARG1-of (u_5351 / know-01
                                                                 :ARG0 (u_5356 / boy)
                                                                 :ARG1-of (u_5354 / know-01
                                                                                  :ARG0 (u_5359 / we)
                                                                                  :ARG1-of (u_5357 / know-01
                                                                                                   :ARG0 (u_5362 / kid)
                                                                                                   :ARG1-of (u_5360 / know-01
                                                                                                                    :ARG0 (u_5364 / girl)
                                                                                                                    :ARG1-of u_5363))))))))

# ::snt We knew that the astronaut heard that I mentioned that the soldier heard that the kids mentioned that the women liked us
# ::tree TP_resolve_coref_1p(knew_resolve_coref,we,TP_CP_1p(heard_coref,astronaut,TP_CP_1p_subj1s(mentioned_coref,I,TP_CP_1p(heard_coref,soldier,TP_CP_1p(mentioned_coref,kids,TP_tr_1p(liked_us,women))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_pronouns_42
# ::suppl deep_recursion_pronouns_42
(u_5375 / know-01
        :ARG0 (r / we
                 :ARG1-of (u_5366 / like-01
                                  :ARG0 (u_5368 / woman)
                                  :ARG1-of (u_5367 / mention-01
                                                   :ARG0 (u_5372 / kid)
                                                   :ARG1-of (u_5369 / hear-01
                                                                    :ARG0 (s / soldier)
                                                                    :ARG1-of (u_5370 / mention-01
                                                                                     :ARG0 (u_5376 / i)
                                                                                     :ARG1-of (u_5373 / hear-01
                                                                                                      :ARG0 (a / astronaut)
                                                                                                      :ARG1-of u_5375)))))))

# ::snt The doctor mentioned that we mentioned that the astronaut knew that I thought that the kids knew that the boys knew that the soldier knew that the women knew that the men hated me
# ::tree TP_3p(mentioned,doctor,TP_1p(mentioned,we,TP_3p(knew,astronaut,TP_resolve_coref_1s(thought_resolve_coref,I,TP_CP_1s(knew_coref,kids,TP_CP_1s(knew_coref,boys,TP_CP_1s(knew_coref,soldier,TP_CP_1s(knew_coref,women,TP_tr_1s(hated_me,men)))))))))
# ::size0 6
# ::size1 9
# ::id deep_recursion_pronouns_43
# ::suppl deep_recursion_pronouns_43
(u_5394 / mention-01
        :ARG0 (d / doctor)
        :ARG1 (u_5391 / mention-01
                      :ARG0 (r / we)
                      :ARG1 (u_5389 / know-01
                                    :ARG0 (a / astronaut)
                                    :ARG1 (u_5387 / think-01
                                                  :ARG0 (u_5393 / i
                                                                :ARG1-of (u_5377 / hate-01
                                                                                 :ARG0 (u_5379 / man)
                                                                                 :ARG1-of (u_5378 / know-01
                                                                                                  :ARG0 (u_5383 / woman)
                                                                                                  :ARG1-of (u_5380 / know-01
                                                                                                                   :ARG0 (s / soldier)
                                                                                                                   :ARG1-of (u_5381 / know-01
                                                                                                                                    :ARG0 (u_5386 / boy)
                                                                                                                                    :ARG1-of (u_5384 / know-01
                                                                                                                                                     :ARG0 (u_5388 / kid)
                                                                                                                                                     :ARG1-of u_5387))))))))))

# ::snt I thought that the boys knew that we heard that the women heard that you knew that I sneezed
# ::tree TP_resolve_coref_1s(thought_resolve_coref,I,TP_CP_1s(knew_coref,boys,TP_CP_1s_subj1p(heard_coref,we,TP_CP_1s(heard_coref,women,TP_CP_1s_subj2(knew_coref,you,TP_intr_1s(I_sneezed))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_pronouns_44
# ::suppl deep_recursion_pronouns_44
(u_5408 / think-01
        :ARG0 (r / i
                 :ARG0-of (u_5398 / sneeze-01
                                  :ARG1-of (u_5396 / know-01
                                                   :ARG0 (u_5401 / you)
                                                   :ARG1-of (u_5399 / hear-01
                                                                    :ARG0 (u_5404 / woman)
                                                                    :ARG1-of (u_5402 / hear-01
                                                                                     :ARG0 (u_5407 / we)
                                                                                     :ARG1-of (u_5405 / know-01
                                                                                                      :ARG0 (u_5409 / boy)
                                                                                                      :ARG1-of u_5408)))))))

# ::snt We knew that you mentioned that the boys knew that the men believed that the girls said that we sneezed
# ::tree TP_resolve_coref_1p(knew_resolve_coref,we,TP_CP_1p_subj2(mentioned_coref,you,TP_CP_1p(knew_coref,boys,TP_CP_1p(believed_coref,men,TP_CP_1p(said_coref,girls,TP_intr_1p(we_sneezed))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_pronouns_45
# ::suppl deep_recursion_pronouns_45
(u_5422 / know-01
        :ARG0 (r / we
                 :ARG0-of (u_5412 / sneeze-01
                                  :ARG1-of (u_5410 / say-01
                                                   :ARG0 (u_5415 / girl)
                                                   :ARG1-of (u_5413 / believe-01
                                                                    :ARG0 (u_5418 / man)
                                                                    :ARG1-of (u_5416 / know-01
                                                                                     :ARG0 (u_5421 / boy)
                                                                                     :ARG1-of (u_5419 / mention-01
                                                                                                      :ARG0 (u_5423 / you)
                                                                                                      :ARG1-of u_5422)))))))

# ::snt We thought that I believed that the soldier knew that the men thought that the women believed that we slept
# ::tree TP_resolve_coref_1p(thought_resolve_coref,we,TP_CP_1p_subj1s(believed_coref,I,TP_CP_1p(knew_coref,soldier,TP_CP_1p(thought_coref,men,TP_CP_1p(believed_coref,women,TP_intr_1p(we_slept))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_pronouns_46
# ::suppl deep_recursion_pronouns_46
(u_5436 / think-01
        :ARG0 (r / we
                 :ARG0-of (u_5426 / sleep-01
                                  :ARG1-of (u_5424 / believe-01
                                                   :ARG0 (u_5429 / woman)
                                                   :ARG1-of (u_5427 / think-01
                                                                    :ARG0 (u_5435 / man)
                                                                    :ARG1-of (u_5430 / know-01
                                                                                     :ARG0 (s / soldier)
                                                                                     :ARG1-of (u_5433 / believe-01
                                                                                                      :ARG0 (u_5437 / i)
                                                                                                      :ARG1-of u_5436)))))))

# ::snt We knew that I said that the men mentioned that the doctor heard that the astronaut heard that we slept
# ::tree TP_resolve_coref_1p(knew_resolve_coref,we,TP_CP_1p_subj1s(said_coref,I,TP_CP_1p(mentioned_coref,men,TP_CP_1p(heard_coref,doctor,TP_CP_1p(heard_coref,astronaut,TP_intr_1p(we_slept))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_pronouns_47
# ::suppl deep_recursion_pronouns_47
(u_5448 / know-01
        :ARG0 (r / we
                 :ARG0-of (u_5444 / sleep-01
                                  :ARG1-of (u_5438 / hear-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_5440 / hear-01
                                                                    :ARG0 (d / doctor)
                                                                    :ARG1-of (u_5442 / mention-01
                                                                                     :ARG0 (u_5447 / man)
                                                                                     :ARG1-of (u_5445 / say-01
                                                                                                      :ARG0 (u_5449 / i)
                                                                                                      :ARG1-of u_5448)))))))

# ::snt You knew that the kids mentioned that the men knew that the lawyer knew that the women believed that you sneezed
# ::tree TP_resolve_coref_2(knew_resolve_coref,you,TP_CP_2(mentioned_coref,kids,TP_CP_2(knew_coref,men,TP_CP_2(knew_coref,lawyer,TP_CP_2(believed_coref,women,TP_intr_2(you_sneezed))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_pronouns_48
# ::suppl deep_recursion_pronouns_48
(u_5461 / know-01
        :ARG0 (r / you
                 :ARG0-of (u_5452 / sneeze-01
                                  :ARG1-of (u_5450 / believe-01
                                                   :ARG0 (u_5457 / woman)
                                                   :ARG1-of (u_5453 / know-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_5455 / know-01
                                                                                     :ARG0 (u_5460 / man)
                                                                                     :ARG1-of (u_5458 / mention-01
                                                                                                      :ARG0 (u_5462 / kid)
                                                                                                      :ARG1-of u_5461)))))))

# ::snt The lawyer said that you believed that the girls mentioned that the doctor heard that the boys said that we believed that you slept
# ::tree TP_3p(said,lawyer,TP_resolve_coref_2(believed_resolve_coref,you,TP_CP_2(mentioned_coref,girls,TP_CP_2(heard_coref,doctor,TP_CP_2(said_coref,boys,TP_CP_2_subj1p(believed_coref,we,TP_intr_2(you_slept)))))))
# ::size0 6
# ::size1 7
# ::id deep_recursion_pronouns_49
# ::suppl deep_recursion_pronouns_49
(u_5476 / say-01
        :ARG0 (m / lawyer)
        :ARG1 (u_5474 / believe-01
                      :ARG0 (r / you
                               :ARG0-of (u_5465 / sleep-01
                                                :ARG1-of (u_5463 / believe-01
                                                                 :ARG0 (u_5468 / we)
                                                                 :ARG1-of (u_5466 / say-01
                                                                                  :ARG0 (u_5473 / boy)
                                                                                  :ARG1-of (u_5469 / hear-01
                                                                                                   :ARG0 (d / doctor)
                                                                                                   :ARG1-of (u_5471 / mention-01
                                                                                                                    :ARG0 (u_5475 / girl)
                                                                                                                    :ARG1-of u_5474))))))))

# ::snt We heard that the men knew that I knew that the astronaut said that the women mentioned that you thought that we slept
# ::tree TP_resolve_coref_1p(heard_resolve_coref,we,TP_CP_1p(knew_coref,men,TP_CP_1p_subj1s(knew_coref,I,TP_CP_1p(said_coref,astronaut,TP_CP_1p(mentioned_coref,women,TP_CP_1p_subj2(thought_coref,you,TP_intr_1p(we_slept)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_pronouns_50
# ::suppl deep_recursion_pronouns_50
(u_5491 / hear-01
        :ARG0 (r / we
                 :ARG0-of (u_5479 / sleep-01
                                  :ARG1-of (u_5477 / think-01
                                                   :ARG0 (u_5482 / you)
                                                   :ARG1-of (u_5480 / mention-01
                                                                    :ARG0 (u_5487 / woman)
                                                                    :ARG1-of (u_5483 / say-01
                                                                                     :ARG0 (a / astronaut)
                                                                                     :ARG1-of (u_5485 / know-01
                                                                                                      :ARG0 (u_5490 / i)
                                                                                                      :ARG1-of (u_5488 / know-01
                                                                                                                       :ARG0 (u_5492 / man)
                                                                                                                       :ARG1-of u_5491))))))))

# ::snt We believed that the kids said that the women said that the girls said that I mentioned that the boys thought that the soldier hated us
# ::tree TP_resolve_coref_1p(believed_resolve_coref,we,TP_CP_1p(said_coref,kids,TP_CP_1p(said_coref,women,TP_CP_1p(said_coref,girls,TP_CP_1p_subj1s(mentioned_coref,I,TP_CP_1p(thought_coref,boys,TP_tr_1p(hated_us,soldier)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_pronouns_51
# ::suppl deep_recursion_pronouns_51
(u_5508 / believe-01
        :ARG0 (r / we
                 :ARG1-of (u_5495 / hate-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_5493 / think-01
                                                   :ARG0 (u_5498 / boy)
                                                   :ARG1-of (u_5496 / mention-01
                                                                    :ARG0 (u_5501 / i)
                                                                    :ARG1-of (u_5499 / say-01
                                                                                     :ARG0 (u_5504 / girl)
                                                                                     :ARG1-of (u_5502 / say-01
                                                                                                      :ARG0 (u_5507 / woman)
                                                                                                      :ARG1-of (u_5505 / say-01
                                                                                                                       :ARG0 (u_5509 / kid)
                                                                                                                       :ARG1-of u_5508))))))))

# ::snt We mentioned that you mentioned that the astronaut thought that I mentioned that the soldier believed that the lawyer heard that we sneezed
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p_subj2(mentioned_coref,you,TP_CP_1p(thought_coref,astronaut,TP_CP_1p_subj1s(mentioned_coref,I,TP_CP_1p(believed_coref,soldier,TP_CP_1p(heard_coref,lawyer,TP_intr_1p(we_sneezed)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_pronouns_52
# ::suppl deep_recursion_pronouns_52
(u_5523 / mention-01
        :ARG0 (r / we
                 :ARG0-of (u_5517 / sneeze-01
                                  :ARG1-of (u_5510 / hear-01
                                                   :ARG0 (m / lawyer)
                                                   :ARG1-of (u_5512 / believe-01
                                                                    :ARG0 (s / soldier)
                                                                    :ARG1-of (u_5515 / mention-01
                                                                                     :ARG0 (u_5522 / i)
                                                                                     :ARG1-of (u_5518 / think-01
                                                                                                      :ARG0 (a / astronaut)
                                                                                                      :ARG1-of (u_5520 / mention-01
                                                                                                                       :ARG0 (u_5524 / you)
                                                                                                                       :ARG1-of u_5523))))))))

# ::snt You thought that we believed that the soldier heard that the girls thought that the lawyer said that the kids thought that the men hated you
# ::tree TP_resolve_coref_2(thought_resolve_coref,you,TP_CP_2_subj1p(believed_coref,we,TP_CP_2(heard_coref,soldier,TP_CP_2(thought_coref,girls,TP_CP_2(said_coref,lawyer,TP_CP_2(thought_coref,kids,TP_tr_2(hated_you,men)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_pronouns_53
# ::suppl deep_recursion_pronouns_53
(u_5535 / think-01
        :ARG0 (r / you
                 :ARG1-of (u_5525 / hate-01
                                  :ARG0 (u_5527 / man)
                                  :ARG1-of (u_5526 / think-01
                                                   :ARG0 (u_5530 / kid)
                                                   :ARG1-of (u_5528 / say-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_5529 / think-01
                                                                                     :ARG0 (u_5534 / girl)
                                                                                     :ARG1-of (u_5531 / hear-01
                                                                                                      :ARG0 (s / soldier)
                                                                                                      :ARG1-of (u_5532 / believe-01
                                                                                                                       :ARG0 (u_5536 / we)
                                                                                                                       :ARG1-of u_5535))))))))

# ::snt We believed that I heard that the doctor knew that the astronaut mentioned that you knew that the girls mentioned that the kids liked us
# ::tree TP_resolve_coref_1p(believed_resolve_coref,we,TP_CP_1p_subj1s(heard_coref,I,TP_CP_1p(knew_coref,doctor,TP_CP_1p(mentioned_coref,astronaut,TP_CP_1p_subj2(knew_coref,you,TP_CP_1p(mentioned_coref,girls,TP_tr_1p(liked_us,kids)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_pronouns_54
# ::suppl deep_recursion_pronouns_54
(u_5546 / believe-01
        :ARG0 (r / we
                 :ARG1-of (u_5537 / like-01
                                  :ARG0 (u_5539 / kid)
                                  :ARG1-of (u_5538 / mention-01
                                                   :ARG0 (u_5541 / girl)
                                                   :ARG1-of (u_5540 / know-01
                                                                    :ARG0 (u_5545 / you)
                                                                    :ARG1-of (u_5542 / mention-01
                                                                                     :ARG0 (a / astronaut)
                                                                                     :ARG1-of (u_5543 / know-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_5544 / hear-01
                                                                                                                       :ARG0 (u_5547 / i)
                                                                                                                       :ARG1-of u_5546))))))))

# ::snt You knew that we heard that the women believed that the boys mentioned that the lawyer said that I heard that you slept
# ::tree TP_resolve_coref_2(knew_resolve_coref,you,TP_CP_2_subj1p(heard_coref,we,TP_CP_2(believed_coref,women,TP_CP_2(mentioned_coref,boys,TP_CP_2(said_coref,lawyer,TP_CP_2_subj1s(heard_coref,I,TP_intr_2(you_slept)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_pronouns_55
# ::suppl deep_recursion_pronouns_55
(u_5562 / know-01
        :ARG0 (r / you
                 :ARG0-of (u_5550 / sleep-01
                                  :ARG1-of (u_5548 / hear-01
                                                   :ARG0 (u_5555 / i)
                                                   :ARG1-of (u_5551 / say-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_5553 / mention-01
                                                                                     :ARG0 (u_5558 / boy)
                                                                                     :ARG1-of (u_5556 / believe-01
                                                                                                      :ARG0 (u_5561 / woman)
                                                                                                      :ARG1-of (u_5559 / hear-01
                                                                                                                       :ARG0 (u_5563 / we)
                                                                                                                       :ARG1-of u_5562))))))))

# ::snt We mentioned that you believed that the girls said that the men believed that the doctor heard that I mentioned that the soldier hated us
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p_subj2(believed_coref,you,TP_CP_1p(said_coref,girls,TP_CP_1p(believed_coref,men,TP_CP_1p(heard_coref,doctor,TP_CP_1p_subj1s(mentioned_coref,I,TP_tr_1p(hated_us,soldier)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_pronouns_56
# ::suppl deep_recursion_pronouns_56
(u_5578 / mention-01
        :ARG0 (r / we
                 :ARG1-of (u_5566 / hate-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_5564 / mention-01
                                                   :ARG0 (u_5571 / i)
                                                   :ARG1-of (u_5567 / hear-01
                                                                    :ARG0 (d / doctor)
                                                                    :ARG1-of (u_5569 / believe-01
                                                                                     :ARG0 (u_5574 / man)
                                                                                     :ARG1-of (u_5572 / say-01
                                                                                                      :ARG0 (u_5577 / girl)
                                                                                                      :ARG1-of (u_5575 / believe-01
                                                                                                                       :ARG0 (u_5579 / you)
                                                                                                                       :ARG1-of u_5578))))))))

# ::snt I thought that we said that the lawyer said that the kids thought that the doctor thought that the astronaut mentioned that the women liked me
# ::tree TP_resolve_coref_1s(thought_resolve_coref,I,TP_CP_1s_subj1p(said_coref,we,TP_CP_1s(said_coref,lawyer,TP_CP_1s(thought_coref,kids,TP_CP_1s(thought_coref,doctor,TP_CP_1s(mentioned_coref,astronaut,TP_tr_1s(liked_me,women)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_pronouns_57
# ::suppl deep_recursion_pronouns_57
(u_5588 / think-01
        :ARG0 (r / i
                 :ARG1-of (u_5580 / like-01
                                  :ARG0 (u_5584 / woman)
                                  :ARG1-of (u_5581 / mention-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_5582 / think-01
                                                                    :ARG0 (d / doctor)
                                                                    :ARG1-of (u_5583 / think-01
                                                                                     :ARG0 (u_5587 / kid)
                                                                                     :ARG1-of (u_5585 / say-01
                                                                                                      :ARG0 (m / lawyer)
                                                                                                      :ARG1-of (u_5586 / say-01
                                                                                                                       :ARG0 (u_5589 / we)
                                                                                                                       :ARG1-of u_5588))))))))

# ::snt I mentioned that the women knew that the kids knew that the men knew that the girls believed that we thought that I slept
# ::tree TP_resolve_coref_1s(mentioned_resolve_coref,I,TP_CP_1s(knew_coref,women,TP_CP_1s(knew_coref,kids,TP_CP_1s(knew_coref,men,TP_CP_1s(believed_coref,girls,TP_CP_1s_subj1p(thought_coref,we,TP_intr_1s(I_slept)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_pronouns_58
# ::suppl deep_recursion_pronouns_58
(u_5605 / mention-01
        :ARG0 (r / i
                 :ARG0-of (u_5592 / sleep-01
                                  :ARG1-of (u_5590 / think-01
                                                   :ARG0 (u_5595 / we)
                                                   :ARG1-of (u_5593 / believe-01
                                                                    :ARG0 (u_5598 / girl)
                                                                    :ARG1-of (u_5596 / know-01
                                                                                     :ARG0 (u_5601 / man)
                                                                                     :ARG1-of (u_5599 / know-01
                                                                                                      :ARG0 (u_5604 / kid)
                                                                                                      :ARG1-of (u_5602 / know-01
                                                                                                                       :ARG0 (u_5606 / woman)
                                                                                                                       :ARG1-of u_5605))))))))

# ::snt You thought that the lawyer knew that the girls mentioned that the doctor mentioned that the soldier knew that I thought that the astronaut liked you
# ::tree TP_resolve_coref_2(thought_resolve_coref,you,TP_CP_2(knew_coref,lawyer,TP_CP_2(mentioned_coref,girls,TP_CP_2(mentioned_coref,doctor,TP_CP_2(knew_coref,soldier,TP_CP_2_subj1s(thought_coref,I,TP_tr_2(liked_you,astronaut)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_pronouns_59
# ::suppl deep_recursion_pronouns_59
(u_5617 / think-01
        :ARG0 (r / you
                 :ARG1-of (u_5608 / like-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_5607 / think-01
                                                   :ARG0 (u_5614 / i)
                                                   :ARG1-of (u_5609 / know-01
                                                                    :ARG0 (s / soldier)
                                                                    :ARG1-of (u_5610 / mention-01
                                                                                     :ARG0 (d / doctor)
                                                                                     :ARG1-of (u_5612 / mention-01
                                                                                                      :ARG0 (u_5618 / girl)
                                                                                                      :ARG1-of (u_5615 / know-01
                                                                                                                       :ARG0 (m / lawyer)
                                                                                                                       :ARG1-of u_5617))))))))

# ::snt We mentioned that the doctor heard that the kids knew that the women thought that you thought that I mentioned that the astronaut knew that the lawyer hated us
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p(heard_coref,doctor,TP_CP_1p(knew_coref,kids,TP_CP_1p(thought_coref,women,TP_CP_1p_subj2(thought_coref,you,TP_CP_1p_subj1s(mentioned_coref,I,TP_CP_1p(knew_coref,astronaut,TP_tr_1p(hated_us,lawyer))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_pronouns_60
# ::suppl deep_recursion_pronouns_60
(u_5629 / mention-01
        :ARG0 (r / we
                 :ARG1-of (u_5621 / hate-01
                                  :ARG0 (m / lawyer)
                                  :ARG1-of (u_5619 / know-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_5620 / mention-01
                                                                    :ARG0 (u_5623 / i)
                                                                    :ARG1-of (u_5622 / think-01
                                                                                     :ARG0 (u_5625 / you)
                                                                                     :ARG1-of (u_5624 / think-01
                                                                                                      :ARG0 (u_5627 / woman)
                                                                                                      :ARG1-of (u_5626 / know-01
                                                                                                                       :ARG0 (u_5630 / kid)
                                                                                                                       :ARG1-of (u_5628 / hear-01
                                                                                                                                        :ARG0 (d / doctor)
                                                                                                                                        :ARG1-of u_5629)))))))))

# ::snt We mentioned that the boys heard that the soldier thought that I believed that the women mentioned that the kids thought that the astronaut heard that we sneezed
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p(heard_coref,boys,TP_CP_1p(thought_coref,soldier,TP_CP_1p_subj1s(believed_coref,I,TP_CP_1p(mentioned_coref,women,TP_CP_1p(thought_coref,kids,TP_CP_1p(heard_coref,astronaut,TP_intr_1p(we_sneezed))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_pronouns_61
# ::suppl deep_recursion_pronouns_61
(u_5648 / mention-01
        :ARG0 (r / we
                 :ARG0-of (u_5635 / sneeze-01
                                  :ARG1-of (u_5631 / hear-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_5633 / think-01
                                                                    :ARG0 (u_5638 / kid)
                                                                    :ARG1-of (u_5636 / mention-01
                                                                                     :ARG0 (u_5641 / woman)
                                                                                     :ARG1-of (u_5639 / believe-01
                                                                                                      :ARG0 (u_5647 / i)
                                                                                                      :ARG1-of (u_5642 / think-01
                                                                                                                       :ARG0 (s / soldier)
                                                                                                                       :ARG1-of (u_5645 / hear-01
                                                                                                                                        :ARG0 (u_5649 / boy)
                                                                                                                                        :ARG1-of u_5648)))))))))

# ::snt The kids thought that you mentioned that the soldier knew that we mentioned that the astronaut heard that the doctor believed that the women heard that I mentioned that the girls knew that the boys knew that the men liked us
# ::tree TP_3p(thought,kids,TP_2(mentioned,you,TP_3p(knew,soldier,TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p(heard_coref,astronaut,TP_CP_1p(believed_coref,doctor,TP_CP_1p(heard_coref,women,TP_CP_1p_subj1s(mentioned_coref,I,TP_CP_1p(knew_coref,girls,TP_CP_1p(knew_coref,boys,TP_tr_1p(liked_us,men)))))))))))
# ::size0 8
# ::size1 11
# ::id deep_recursion_pronouns_62
# ::suppl deep_recursion_pronouns_62
(u_5667 / think-01
        :ARG0 (r / kid)
        :ARG1 (u_5664 / mention-01
                      :ARG0 (u_5669 / you)
                      :ARG1 (u_5663 / know-01
                                    :ARG0 (s / soldier)
                                    :ARG1 (u_5661 / mention-01
                                                  :ARG0 (u_5666 / we
                                                                :ARG1-of (u_5650 / like-01
                                                                                 :ARG0 (u_5652 / man)
                                                                                 :ARG1-of (u_5651 / know-01
                                                                                                  :ARG0 (u_5654 / boy)
                                                                                                  :ARG1-of (u_5653 / know-01
                                                                                                                   :ARG0 (u_5656 / girl)
                                                                                                                   :ARG1-of (u_5655 / mention-01
                                                                                                                                    :ARG0 (u_5658 / i)
                                                                                                                                    :ARG1-of (u_5657 / hear-01
                                                                                                                                                     :ARG0 (u_5662 / woman)
                                                                                                                                                     :ARG1-of (u_5659 / believe-01
                                                                                                                                                                      :ARG0 (d / doctor)
                                                                                                                                                                      :ARG1-of (u_5660 / hear-01
                                                                                                                                                                                       :ARG0 (a / astronaut)
                                                                                                                                                                                       :ARG1-of u_5661))))))))))))

# ::snt We heard that the girls knew that the boys heard that the astronaut mentioned that the soldier heard that the men believed that you heard that we sneezed
# ::tree TP_resolve_coref_1p(heard_resolve_coref,we,TP_CP_1p(knew_coref,girls,TP_CP_1p(heard_coref,boys,TP_CP_1p(mentioned_coref,astronaut,TP_CP_1p(heard_coref,soldier,TP_CP_1p(believed_coref,men,TP_CP_1p_subj2(heard_coref,you,TP_intr_1p(we_sneezed))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_pronouns_63
# ::suppl deep_recursion_pronouns_63
(u_5687 / hear-01
        :ARG0 (r / we
                 :ARG0-of (u_5672 / sneeze-01
                                  :ARG1-of (u_5670 / hear-01
                                                   :ARG0 (u_5675 / you)
                                                   :ARG1-of (u_5673 / believe-01
                                                                    :ARG0 (u_5683 / man)
                                                                    :ARG1-of (u_5676 / hear-01
                                                                                     :ARG0 (s / soldier)
                                                                                     :ARG1-of (u_5679 / mention-01
                                                                                                      :ARG0 (a / astronaut)
                                                                                                      :ARG1-of (u_5681 / hear-01
                                                                                                                       :ARG0 (u_5686 / boy)
                                                                                                                       :ARG1-of (u_5684 / know-01
                                                                                                                                        :ARG0 (u_5688 / girl)
                                                                                                                                        :ARG1-of u_5687)))))))))

# ::snt We believed that the women mentioned that I mentioned that the men knew that you thought that the girls believed that the astronaut said that we sneezed
# ::tree TP_resolve_coref_1p(believed_resolve_coref,we,TP_CP_1p(mentioned_coref,women,TP_CP_1p_subj1s(mentioned_coref,I,TP_CP_1p(knew_coref,men,TP_CP_1p_subj2(thought_coref,you,TP_CP_1p(believed_coref,girls,TP_CP_1p(said_coref,astronaut,TP_intr_1p(we_sneezed))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_pronouns_64
# ::suppl deep_recursion_pronouns_64
(u_5706 / believe-01
        :ARG0 (r / we
                 :ARG0-of (u_5693 / sneeze-01
                                  :ARG1-of (u_5689 / say-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_5691 / believe-01
                                                                    :ARG0 (u_5696 / girl)
                                                                    :ARG1-of (u_5694 / think-01
                                                                                     :ARG0 (u_5699 / you)
                                                                                     :ARG1-of (u_5697 / know-01
                                                                                                      :ARG0 (u_5702 / man)
                                                                                                      :ARG1-of (u_5700 / mention-01
                                                                                                                       :ARG0 (u_5705 / i)
                                                                                                                       :ARG1-of (u_5703 / mention-01
                                                                                                                                        :ARG0 (u_5707 / woman)
                                                                                                                                        :ARG1-of u_5706)))))))))

# ::snt We said that the girls knew that you thought that the doctor believed that the lawyer mentioned that I knew that the kids said that the astronaut liked us
# ::tree TP_resolve_coref_1p(said_resolve_coref,we,TP_CP_1p(knew_coref,girls,TP_CP_1p_subj2(thought_coref,you,TP_CP_1p(believed_coref,doctor,TP_CP_1p(mentioned_coref,lawyer,TP_CP_1p_subj1s(knew_coref,I,TP_CP_1p(said_coref,kids,TP_tr_1p(liked_us,astronaut))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_pronouns_65
# ::suppl deep_recursion_pronouns_65
(u_5718 / say-01
        :ARG0 (r / we
                 :ARG1-of (u_5709 / like-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_5708 / say-01
                                                   :ARG0 (u_5711 / kid)
                                                   :ARG1-of (u_5710 / know-01
                                                                    :ARG0 (u_5715 / i)
                                                                    :ARG1-of (u_5712 / mention-01
                                                                                     :ARG0 (m / lawyer)
                                                                                     :ARG1-of (u_5713 / believe-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_5714 / think-01
                                                                                                                       :ARG0 (u_5717 / you)
                                                                                                                       :ARG1-of (u_5716 / know-01
                                                                                                                                        :ARG0 (u_5719 / girl)
                                                                                                                                        :ARG1-of u_5718)))))))))

# ::snt The boys knew that you believed that we heard that I said that the girls heard that the kids believed that the lawyer knew that the doctor mentioned that you slept
# ::tree TP_3p(knew,boys,TP_resolve_coref_2(believed_resolve_coref,you,TP_CP_2_subj1p(heard_coref,we,TP_CP_2_subj1s(said_coref,I,TP_CP_2(heard_coref,girls,TP_CP_2(believed_coref,kids,TP_CP_2(knew_coref,lawyer,TP_CP_2(mentioned_coref,doctor,TP_intr_2(you_slept)))))))))
# ::size0 8
# ::size1 9
# ::id deep_recursion_pronouns_66
# ::suppl deep_recursion_pronouns_66
(u_5738 / know-01
        :ARG0 (r / boy)
        :ARG1 (u_5736 / believe-01
                      :ARG0 (u_5739 / you
                                    :ARG0-of (u_5726 / sleep-01
                                                     :ARG1-of (u_5720 / mention-01
                                                                      :ARG0 (d / doctor)
                                                                      :ARG1-of (u_5722 / know-01
                                                                                       :ARG0 (m / lawyer)
                                                                                       :ARG1-of (u_5724 / believe-01
                                                                                                        :ARG0 (u_5729 / kid)
                                                                                                        :ARG1-of (u_5727 / hear-01
                                                                                                                         :ARG0 (u_5732 / girl)
                                                                                                                         :ARG1-of (u_5730 / say-01
                                                                                                                                          :ARG0 (u_5735 / i)
                                                                                                                                          :ARG1-of (u_5733 / hear-01
                                                                                                                                                           :ARG0 (u_5737 / we)
                                                                                                                                                           :ARG1-of u_5736))))))))))

# ::snt I said that the soldier said that the boys believed that the astronaut knew that the girls knew that you believed that the men believed that the kids liked me
# ::tree TP_resolve_coref_1s(said_resolve_coref,I,TP_CP_1s(said_coref,soldier,TP_CP_1s(believed_coref,boys,TP_CP_1s(knew_coref,astronaut,TP_CP_1s(knew_coref,girls,TP_CP_1s_subj2(believed_coref,you,TP_CP_1s(believed_coref,men,TP_tr_1s(liked_me,kids))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_pronouns_67
# ::suppl deep_recursion_pronouns_67
(u_5751 / say-01
        :ARG0 (r / i
                 :ARG1-of (u_5740 / like-01
                                  :ARG0 (u_5742 / kid)
                                  :ARG1-of (u_5741 / believe-01
                                                   :ARG0 (u_5744 / man)
                                                   :ARG1-of (u_5743 / believe-01
                                                                    :ARG0 (u_5746 / you)
                                                                    :ARG1-of (u_5745 / know-01
                                                                                     :ARG0 (u_5749 / girl)
                                                                                     :ARG1-of (u_5747 / know-01
                                                                                                      :ARG0 (a / astronaut)
                                                                                                      :ARG1-of (u_5748 / believe-01
                                                                                                                       :ARG0 (u_5752 / boy)
                                                                                                                       :ARG1-of (u_5750 / say-01
                                                                                                                                        :ARG0 (s / soldier)
                                                                                                                                        :ARG1-of u_5751)))))))))

# ::snt You said that the boys knew that the men heard that the lawyer believed that I thought that the doctor believed that we mentioned that you slept
# ::tree TP_resolve_coref_2(said_resolve_coref,you,TP_CP_2(knew_coref,boys,TP_CP_2(heard_coref,men,TP_CP_2(believed_coref,lawyer,TP_CP_2_subj1s(thought_coref,I,TP_CP_2(believed_coref,doctor,TP_CP_2_subj1p(mentioned_coref,we,TP_intr_2(you_slept))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_pronouns_68
# ::suppl deep_recursion_pronouns_68
(u_5769 / say-01
        :ARG0 (r / you
                 :ARG0-of (u_5755 / sleep-01
                                  :ARG1-of (u_5753 / mention-01
                                                   :ARG0 (u_5760 / we)
                                                   :ARG1-of (u_5756 / believe-01
                                                                    :ARG0 (d / doctor)
                                                                    :ARG1-of (u_5758 / think-01
                                                                                     :ARG0 (u_5765 / i)
                                                                                     :ARG1-of (u_5761 / believe-01
                                                                                                      :ARG0 (m / lawyer)
                                                                                                      :ARG1-of (u_5763 / hear-01
                                                                                                                       :ARG0 (u_5768 / man)
                                                                                                                       :ARG1-of (u_5766 / know-01
                                                                                                                                        :ARG0 (u_5770 / boy)
                                                                                                                                        :ARG1-of u_5769)))))))))

# ::snt We knew that the men knew that the boys believed that the soldier believed that I mentioned that the girls heard that the astronaut thought that we slept
# ::tree TP_resolve_coref_1p(knew_resolve_coref,we,TP_CP_1p(knew_coref,men,TP_CP_1p(believed_coref,boys,TP_CP_1p(believed_coref,soldier,TP_CP_1p_subj1s(mentioned_coref,I,TP_CP_1p(heard_coref,girls,TP_CP_1p(thought_coref,astronaut,TP_intr_1p(we_slept))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_pronouns_69
# ::suppl deep_recursion_pronouns_69
(u_5788 / know-01
        :ARG0 (r / we
                 :ARG0-of (u_5775 / sleep-01
                                  :ARG1-of (u_5771 / think-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_5773 / hear-01
                                                                    :ARG0 (u_5778 / girl)
                                                                    :ARG1-of (u_5776 / mention-01
                                                                                     :ARG0 (u_5784 / i)
                                                                                     :ARG1-of (u_5779 / believe-01
                                                                                                      :ARG0 (s / soldier)
                                                                                                      :ARG1-of (u_5782 / believe-01
                                                                                                                       :ARG0 (u_5787 / boy)
                                                                                                                       :ARG1-of (u_5785 / know-01
                                                                                                                                        :ARG0 (u_5789 / man)
                                                                                                                                        :ARG1-of u_5788)))))))))

# ::snt You knew that the astronaut said that we mentioned that the women knew that the girls said that the doctor heard that the men knew that the boys believed that you slept
# ::tree TP_resolve_coref_2(knew_resolve_coref,you,TP_CP_2(said_coref,astronaut,TP_CP_2_subj1p(mentioned_coref,we,TP_CP_2(knew_coref,women,TP_CP_2(said_coref,girls,TP_CP_2(heard_coref,doctor,TP_CP_2(knew_coref,men,TP_CP_2(believed_coref,boys,TP_intr_2(you_slept)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_pronouns_70
# ::suppl deep_recursion_pronouns_70
(u_5809 / know-01
        :ARG0 (r / you
                 :ARG0-of (u_5792 / sleep-01
                                  :ARG1-of (u_5790 / believe-01
                                                   :ARG0 (u_5795 / boy)
                                                   :ARG1-of (u_5793 / know-01
                                                                    :ARG0 (u_5800 / man)
                                                                    :ARG1-of (u_5796 / hear-01
                                                                                     :ARG0 (d / doctor)
                                                                                     :ARG1-of (u_5798 / say-01
                                                                                                      :ARG0 (u_5803 / girl)
                                                                                                      :ARG1-of (u_5801 / know-01
                                                                                                                       :ARG0 (u_5806 / woman)
                                                                                                                       :ARG1-of (u_5804 / mention-01
                                                                                                                                        :ARG0 (u_5810 / we)
                                                                                                                                        :ARG1-of (u_5807 / say-01
                                                                                                                                                         :ARG0 (a / astronaut)
                                                                                                                                                         :ARG1-of u_5809))))))))))

# ::snt The men said that you knew that I heard that the girls thought that the doctor heard that the boys believed that the soldier said that the women believed that the kids mentioned that you slept
# ::tree TP_3p(said,men,TP_resolve_coref_2(knew_resolve_coref,you,TP_CP_2_subj1s(heard_coref,I,TP_CP_2(thought_coref,girls,TP_CP_2(heard_coref,doctor,TP_CP_2(believed_coref,boys,TP_CP_2(said_coref,soldier,TP_CP_2(believed_coref,women,TP_CP_2(mentioned_coref,kids,TP_intr_2(you_slept))))))))))
# ::size0 9
# ::size1 10
# ::id deep_recursion_pronouns_71
# ::suppl deep_recursion_pronouns_71
(u_5833 / say-01
        :ARG0 (r / man)
        :ARG1 (u_5831 / know-01
                      :ARG0 (u_5835 / you
                                    :ARG0-of (u_5813 / sleep-01
                                                     :ARG1-of (u_5811 / mention-01
                                                                      :ARG0 (u_5816 / kid)
                                                                      :ARG1-of (u_5814 / believe-01
                                                                                       :ARG0 (u_5822 / woman)
                                                                                       :ARG1-of (u_5817 / say-01
                                                                                                        :ARG0 (s / soldier)
                                                                                                        :ARG1-of (u_5820 / believe-01
                                                                                                                         :ARG0 (u_5827 / boy)
                                                                                                                         :ARG1-of (u_5823 / hear-01
                                                                                                                                          :ARG0 (d / doctor)
                                                                                                                                          :ARG1-of (u_5825 / think-01
                                                                                                                                                           :ARG0 (u_5830 / girl)
                                                                                                                                                           :ARG1-of (u_5828 / hear-01
                                                                                                                                                                            :ARG0 (u_5832 / i)
                                                                                                                                                                            :ARG1-of u_5831)))))))))))

# ::snt You mentioned that the girls thought that the doctor mentioned that the lawyer mentioned that we thought that the women heard that the astronaut heard that I believed that the boys liked you
# ::tree TP_resolve_coref_2(mentioned_resolve_coref,you,TP_CP_2(thought_coref,girls,TP_CP_2(mentioned_coref,doctor,TP_CP_2(mentioned_coref,lawyer,TP_CP_2_subj1p(thought_coref,we,TP_CP_2(heard_coref,women,TP_CP_2(heard_coref,astronaut,TP_CP_2_subj1s(believed_coref,I,TP_tr_2(liked_you,boys)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_pronouns_72
# ::suppl deep_recursion_pronouns_72
(u_5848 / mention-01
        :ARG0 (r / you
                 :ARG1-of (u_5836 / like-01
                                  :ARG0 (u_5838 / boy)
                                  :ARG1-of (u_5837 / believe-01
                                                   :ARG0 (u_5841 / i)
                                                   :ARG1-of (u_5839 / hear-01
                                                                    :ARG0 (a / astronaut)
                                                                    :ARG1-of (u_5840 / hear-01
                                                                                     :ARG0 (u_5843 / woman)
                                                                                     :ARG1-of (u_5842 / think-01
                                                                                                      :ARG0 (u_5847 / we)
                                                                                                      :ARG1-of (u_5844 / mention-01
                                                                                                                       :ARG0 (m / lawyer)
                                                                                                                       :ARG1-of (u_5845 / mention-01
                                                                                                                                        :ARG0 (d / doctor)
                                                                                                                                        :ARG1-of (u_5846 / think-01
                                                                                                                                                         :ARG0 (u_5849 / girl)
                                                                                                                                                         :ARG1-of u_5848))))))))))

# ::snt The boys said that I heard that you mentioned that the astronaut thought that we said that the kids knew that the doctor knew that the soldier said that the girls believed that I sneezed
# ::tree TP_3p(said,boys,TP_resolve_coref_1s(heard_resolve_coref,I,TP_CP_1s_subj2(mentioned_coref,you,TP_CP_1s(thought_coref,astronaut,TP_CP_1s_subj1p(said_coref,we,TP_CP_1s(knew_coref,kids,TP_CP_1s(knew_coref,doctor,TP_CP_1s(said_coref,soldier,TP_CP_1s(believed_coref,girls,TP_intr_1s(I_sneezed))))))))))
# ::size0 9
# ::size1 10
# ::id deep_recursion_pronouns_73
# ::suppl deep_recursion_pronouns_73
(u_5871 / say-01
        :ARG0 (r / boy)
        :ARG1 (u_5869 / hear-01
                      :ARG0 (u_5873 / i
                                    :ARG0-of (u_5852 / sneeze-01
                                                     :ARG1-of (u_5850 / believe-01
                                                                      :ARG0 (u_5860 / girl)
                                                                      :ARG1-of (u_5853 / say-01
                                                                                       :ARG0 (s / soldier)
                                                                                       :ARG1-of (u_5856 / know-01
                                                                                                        :ARG0 (d / doctor)
                                                                                                        :ARG1-of (u_5858 / know-01
                                                                                                                         :ARG0 (u_5863 / kid)
                                                                                                                         :ARG1-of (u_5861 / say-01
                                                                                                                                          :ARG0 (u_5868 / we)
                                                                                                                                          :ARG1-of (u_5864 / think-01
                                                                                                                                                           :ARG0 (a / astronaut)
                                                                                                                                                           :ARG1-of (u_5866 / mention-01
                                                                                                                                                                            :ARG0 (u_5870 / you)
                                                                                                                                                                            :ARG1-of u_5869)))))))))))

# ::snt We heard that I heard that the men believed that the astronaut heard that the doctor heard that you thought that the women believed that the soldier thought that we slept
# ::tree TP_resolve_coref_1p(heard_resolve_coref,we,TP_CP_1p_subj1s(heard_coref,I,TP_CP_1p(believed_coref,men,TP_CP_1p(heard_coref,astronaut,TP_CP_1p(heard_coref,doctor,TP_CP_1p_subj2(thought_coref,you,TP_CP_1p(believed_coref,women,TP_CP_1p(thought_coref,soldier,TP_intr_1p(we_slept)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_pronouns_74
# ::suppl deep_recursion_pronouns_74
(u_5893 / hear-01
        :ARG0 (r / we
                 :ARG0-of (u_5879 / sleep-01
                                  :ARG1-of (u_5874 / think-01
                                                   :ARG0 (s / soldier)
                                                   :ARG1-of (u_5877 / believe-01
                                                                    :ARG0 (u_5882 / woman)
                                                                    :ARG1-of (u_5880 / think-01
                                                                                     :ARG0 (u_5889 / you)
                                                                                     :ARG1-of (u_5883 / hear-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_5885 / hear-01
                                                                                                                       :ARG0 (a / astronaut)
                                                                                                                       :ARG1-of (u_5887 / believe-01
                                                                                                                                        :ARG0 (u_5892 / man)
                                                                                                                                        :ARG1-of (u_5890 / hear-01
                                                                                                                                                         :ARG0 (u_5894 / i)
                                                                                                                                                         :ARG1-of u_5893))))))))))

# ::snt The doctor believed that you mentioned that the women said that I mentioned that the girls mentioned that the men knew that the astronaut believed that the kids mentioned that we thought that you sneezed
# ::tree TP_3p(believed,doctor,TP_resolve_coref_2(mentioned_resolve_coref,you,TP_CP_2(said_coref,women,TP_CP_2_subj1s(mentioned_coref,I,TP_CP_2(mentioned_coref,girls,TP_CP_2(knew_coref,men,TP_CP_2(believed_coref,astronaut,TP_CP_2(mentioned_coref,kids,TP_CP_2_subj1p(thought_coref,we,TP_intr_2(you_sneezed))))))))))
# ::size0 9
# ::size1 10
# ::id deep_recursion_pronouns_75
# ::suppl deep_recursion_pronouns_75
(u_5917 / believe-01
        :ARG0 (d / doctor)
        :ARG1 (u_5915 / mention-01
                      :ARG0 (r / you
                               :ARG0-of (u_5897 / sneeze-01
                                                :ARG1-of (u_5895 / think-01
                                                                 :ARG0 (u_5900 / we)
                                                                 :ARG1-of (u_5898 / mention-01
                                                                                  :ARG0 (u_5905 / kid)
                                                                                  :ARG1-of (u_5901 / believe-01
                                                                                                   :ARG0 (a / astronaut)
                                                                                                   :ARG1-of (u_5903 / know-01
                                                                                                                    :ARG0 (u_5908 / man)
                                                                                                                    :ARG1-of (u_5906 / mention-01
                                                                                                                                     :ARG0 (u_5911 / girl)
                                                                                                                                     :ARG1-of (u_5909 / mention-01
                                                                                                                                                      :ARG0 (u_5914 / i)
                                                                                                                                                      :ARG1-of (u_5912 / say-01
                                                                                                                                                                       :ARG0 (u_5916 / woman)
                                                                                                                                                                       :ARG1-of u_5915)))))))))))

# ::snt We mentioned that the lawyer knew that I said that you heard that the doctor knew that the men heard that the boys heard that the girls knew that we slept
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p(knew_coref,lawyer,TP_CP_1p_subj1s(said_coref,I,TP_CP_1p_subj2(heard_coref,you,TP_CP_1p(knew_coref,doctor,TP_CP_1p(heard_coref,men,TP_CP_1p(heard_coref,boys,TP_CP_1p(knew_coref,girls,TP_intr_1p(we_slept)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_pronouns_76
# ::suppl deep_recursion_pronouns_76
(u_5937 / mention-01
        :ARG0 (r / we
                 :ARG0-of (u_5920 / sleep-01
                                  :ARG1-of (u_5918 / know-01
                                                   :ARG0 (u_5923 / girl)
                                                   :ARG1-of (u_5921 / hear-01
                                                                    :ARG0 (u_5926 / boy)
                                                                    :ARG1-of (u_5924 / hear-01
                                                                                     :ARG0 (u_5931 / man)
                                                                                     :ARG1-of (u_5927 / know-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_5929 / hear-01
                                                                                                                       :ARG0 (u_5934 / you)
                                                                                                                       :ARG1-of (u_5932 / say-01
                                                                                                                                        :ARG0 (u_5938 / i)
                                                                                                                                        :ARG1-of (u_5935 / know-01
                                                                                                                                                         :ARG0 (m / lawyer)
                                                                                                                                                         :ARG1-of u_5937))))))))))

# ::snt You knew that the kids heard that the girls thought that the soldier knew that the doctor knew that the men knew that we thought that I said that you sneezed
# ::tree TP_resolve_coref_2(knew_resolve_coref,you,TP_CP_2(heard_coref,kids,TP_CP_2(thought_coref,girls,TP_CP_2(knew_coref,soldier,TP_CP_2(knew_coref,doctor,TP_CP_2(knew_coref,men,TP_CP_2_subj1p(thought_coref,we,TP_CP_2_subj1s(said_coref,I,TP_intr_2(you_sneezed)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_pronouns_77
# ::suppl deep_recursion_pronouns_77
(u_5959 / know-01
        :ARG0 (r / you
                 :ARG0-of (u_5941 / sneeze-01
                                  :ARG1-of (u_5939 / say-01
                                                   :ARG0 (u_5944 / i)
                                                   :ARG1-of (u_5942 / think-01
                                                                    :ARG0 (u_5947 / we)
                                                                    :ARG1-of (u_5945 / know-01
                                                                                     :ARG0 (u_5955 / man)
                                                                                     :ARG1-of (u_5948 / know-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_5950 / know-01
                                                                                                                       :ARG0 (s / soldier)
                                                                                                                       :ARG1-of (u_5953 / think-01
                                                                                                                                        :ARG0 (u_5958 / girl)
                                                                                                                                        :ARG1-of (u_5956 / hear-01
                                                                                                                                                         :ARG0 (u_5960 / kid)
                                                                                                                                                         :ARG1-of u_5959))))))))))

# ::snt I believed that the men said that the soldier heard that we mentioned that you said that the doctor knew that the lawyer believed that the women heard that the girls hated me
# ::tree TP_resolve_coref_1s(believed_resolve_coref,I,TP_CP_1s(said_coref,men,TP_CP_1s(heard_coref,soldier,TP_CP_1s_subj1p(mentioned_coref,we,TP_CP_1s_subj2(said_coref,you,TP_CP_1s(knew_coref,doctor,TP_CP_1s(believed_coref,lawyer,TP_CP_1s(heard_coref,women,TP_tr_1s(hated_me,girls)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_pronouns_78
# ::suppl deep_recursion_pronouns_78
(u_5974 / believe-01
        :ARG0 (r / i
                 :ARG1-of (u_5961 / hate-01
                                  :ARG0 (u_5963 / girl)
                                  :ARG1-of (u_5962 / hear-01
                                                   :ARG0 (u_5967 / woman)
                                                   :ARG1-of (u_5964 / believe-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_5965 / know-01
                                                                                     :ARG0 (d / doctor)
                                                                                     :ARG1-of (u_5966 / say-01
                                                                                                      :ARG0 (u_5969 / you)
                                                                                                      :ARG1-of (u_5968 / mention-01
                                                                                                                       :ARG0 (u_5973 / we)
                                                                                                                       :ARG1-of (u_5970 / hear-01
                                                                                                                                        :ARG0 (s / soldier)
                                                                                                                                        :ARG1-of (u_5971 / say-01
                                                                                                                                                         :ARG0 (u_5975 / man)
                                                                                                                                                         :ARG1-of u_5974))))))))))

# ::snt We mentioned that the soldier said that the astronaut thought that you believed that the kids thought that I mentioned that the boys believed that the women mentioned that we sneezed
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p(said_coref,soldier,TP_CP_1p(thought_coref,astronaut,TP_CP_1p_subj2(believed_coref,you,TP_CP_1p(thought_coref,kids,TP_CP_1p_subj1s(mentioned_coref,I,TP_CP_1p(believed_coref,boys,TP_CP_1p(mentioned_coref,women,TP_intr_1p(we_sneezed)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_pronouns_79
# ::suppl deep_recursion_pronouns_79
(u_5996 / mention-01
        :ARG0 (r / we
                 :ARG0-of (u_5978 / sneeze-01
                                  :ARG1-of (u_5976 / mention-01
                                                   :ARG0 (u_5981 / woman)
                                                   :ARG1-of (u_5979 / believe-01
                                                                    :ARG0 (u_5984 / boy)
                                                                    :ARG1-of (u_5982 / mention-01
                                                                                     :ARG0 (u_5987 / i)
                                                                                     :ARG1-of (u_5985 / think-01
                                                                                                      :ARG0 (u_5990 / kid)
                                                                                                      :ARG1-of (u_5988 / believe-01
                                                                                                                       :ARG0 (u_5997 / you)
                                                                                                                       :ARG1-of (u_5991 / think-01
                                                                                                                                        :ARG0 (a / astronaut)
                                                                                                                                        :ARG1-of (u_5993 / say-01
                                                                                                                                                         :ARG0 (s / soldier)
                                                                                                                                                         :ARG1-of u_5996))))))))))

# ::snt You thought that the lawyer thought that the soldier heard that the kids believed that the astronaut knew that we mentioned that the girls heard that I said that the women knew that you slept
# ::tree TP_resolve_coref_2(thought_resolve_coref,you,TP_CP_2(thought_coref,lawyer,TP_CP_2(heard_coref,soldier,TP_CP_2(believed_coref,kids,TP_CP_2(knew_coref,astronaut,TP_CP_2_subj1p(mentioned_coref,we,TP_CP_2(heard_coref,girls,TP_CP_2_subj1s(said_coref,I,TP_CP_2(knew_coref,women,TP_intr_2(you_slept))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_pronouns_80
# ::suppl deep_recursion_pronouns_80
(u_6020 / think-01
        :ARG0 (r / you
                 :ARG0-of (u_6000 / sleep-01
                                  :ARG1-of (u_5998 / know-01
                                                   :ARG0 (u_6003 / woman)
                                                   :ARG1-of (u_6001 / say-01
                                                                    :ARG0 (u_6006 / i)
                                                                    :ARG1-of (u_6004 / hear-01
                                                                                     :ARG0 (u_6009 / girl)
                                                                                     :ARG1-of (u_6007 / mention-01
                                                                                                      :ARG0 (u_6014 / we)
                                                                                                      :ARG1-of (u_6010 / know-01
                                                                                                                       :ARG0 (a / astronaut)
                                                                                                                       :ARG1-of (u_6012 / believe-01
                                                                                                                                        :ARG0 (u_6021 / kid)
                                                                                                                                        :ARG1-of (u_6015 / hear-01
                                                                                                                                                         :ARG0 (s / soldier)
                                                                                                                                                         :ARG1-of (u_6018 / think-01
                                                                                                                                                                          :ARG0 (m / lawyer)
                                                                                                                                                                          :ARG1-of u_6020)))))))))))

# ::snt You believed that we mentioned that I said that the soldier heard that the lawyer heard that the women mentioned that the doctor said that the boys thought that the men said that the astronaut hated you
# ::tree TP_resolve_coref_2(believed_resolve_coref,you,TP_CP_2_subj1p(mentioned_coref,we,TP_CP_2_subj1s(said_coref,I,TP_CP_2(heard_coref,soldier,TP_CP_2(heard_coref,lawyer,TP_CP_2(mentioned_coref,women,TP_CP_2(said_coref,doctor,TP_CP_2(thought_coref,boys,TP_CP_2(said_coref,men,TP_tr_2(hated_you,astronaut))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_pronouns_81
# ::suppl deep_recursion_pronouns_81
(u_6037 / believe-01
        :ARG0 (r / you
                 :ARG1-of (u_6023 / hate-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_6022 / say-01
                                                   :ARG0 (u_6025 / man)
                                                   :ARG1-of (u_6024 / think-01
                                                                    :ARG0 (u_6028 / boy)
                                                                    :ARG1-of (u_6026 / say-01
                                                                                     :ARG0 (d / doctor)
                                                                                     :ARG1-of (u_6027 / mention-01
                                                                                                      :ARG0 (u_6033 / woman)
                                                                                                      :ARG1-of (u_6029 / hear-01
                                                                                                                       :ARG0 (m / lawyer)
                                                                                                                       :ARG1-of (u_6030 / hear-01
                                                                                                                                        :ARG0 (s / soldier)
                                                                                                                                        :ARG1-of (u_6031 / say-01
                                                                                                                                                         :ARG0 (u_6036 / i)
                                                                                                                                                         :ARG1-of (u_6034 / mention-01
                                                                                                                                                                          :ARG0 (u_6038 / we)
                                                                                                                                                                          :ARG1-of u_6037)))))))))))

# ::snt I believed that we believed that the doctor thought that the women heard that the astronaut believed that the lawyer said that you knew that the girls mentioned that the boys thought that I slept
# ::tree TP_resolve_coref_1s(believed_resolve_coref,I,TP_CP_1s_subj1p(believed_coref,we,TP_CP_1s(thought_coref,doctor,TP_CP_1s(heard_coref,women,TP_CP_1s(believed_coref,astronaut,TP_CP_1s(said_coref,lawyer,TP_CP_1s_subj2(knew_coref,you,TP_CP_1s(mentioned_coref,girls,TP_CP_1s(thought_coref,boys,TP_intr_1s(I_slept))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_pronouns_82
# ::suppl deep_recursion_pronouns_82
(u_6060 / believe-01
        :ARG0 (r / i
                 :ARG0-of (u_6041 / sleep-01
                                  :ARG1-of (u_6039 / think-01
                                                   :ARG0 (u_6044 / boy)
                                                   :ARG1-of (u_6042 / mention-01
                                                                    :ARG0 (u_6047 / girl)
                                                                    :ARG1-of (u_6045 / know-01
                                                                                     :ARG0 (u_6054 / you)
                                                                                     :ARG1-of (u_6048 / say-01
                                                                                                      :ARG0 (m / lawyer)
                                                                                                      :ARG1-of (u_6050 / believe-01
                                                                                                                       :ARG0 (a / astronaut)
                                                                                                                       :ARG1-of (u_6052 / hear-01
                                                                                                                                        :ARG0 (u_6059 / woman)
                                                                                                                                        :ARG1-of (u_6055 / think-01
                                                                                                                                                         :ARG0 (d / doctor)
                                                                                                                                                         :ARG1-of (u_6057 / believe-01
                                                                                                                                                                          :ARG0 (u_6061 / we)
                                                                                                                                                                          :ARG1-of u_6060)))))))))))

# ::snt You heard that the lawyer thought that we said that the girls believed that the doctor said that the astronaut heard that I heard that the soldier heard that the boys knew that you sneezed
# ::tree TP_resolve_coref_2(heard_resolve_coref,you,TP_CP_2(thought_coref,lawyer,TP_CP_2_subj1p(said_coref,we,TP_CP_2(believed_coref,girls,TP_CP_2(said_coref,doctor,TP_CP_2(heard_coref,astronaut,TP_CP_2_subj1s(heard_coref,I,TP_CP_2(heard_coref,soldier,TP_CP_2(knew_coref,boys,TP_intr_2(you_sneezed))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_pronouns_83
# ::suppl deep_recursion_pronouns_83
(u_6083 / hear-01
        :ARG0 (r / you
                 :ARG0-of (u_6064 / sneeze-01
                                  :ARG1-of (u_6062 / know-01
                                                   :ARG0 (u_6070 / boy)
                                                   :ARG1-of (u_6065 / hear-01
                                                                    :ARG0 (s / soldier)
                                                                    :ARG1-of (u_6068 / hear-01
                                                                                     :ARG0 (u_6077 / i)
                                                                                     :ARG1-of (u_6071 / hear-01
                                                                                                      :ARG0 (a / astronaut)
                                                                                                      :ARG1-of (u_6073 / say-01
                                                                                                                       :ARG0 (d / doctor)
                                                                                                                       :ARG1-of (u_6075 / believe-01
                                                                                                                                        :ARG0 (u_6080 / girl)
                                                                                                                                        :ARG1-of (u_6078 / say-01
                                                                                                                                                         :ARG0 (u_6084 / we)
                                                                                                                                                         :ARG1-of (u_6081 / think-01
                                                                                                                                                                          :ARG0 (m / lawyer)
                                                                                                                                                                          :ARG1-of u_6083)))))))))))

# ::snt We said that the kids knew that you believed that the doctor knew that the astronaut heard that I mentioned that the women believed that the girls believed that the lawyer believed that the soldier hated us
# ::tree TP_resolve_coref_1p(said_resolve_coref,we,TP_CP_1p(knew_coref,kids,TP_CP_1p_subj2(believed_coref,you,TP_CP_1p(knew_coref,doctor,TP_CP_1p(heard_coref,astronaut,TP_CP_1p_subj1s(mentioned_coref,I,TP_CP_1p(believed_coref,women,TP_CP_1p(believed_coref,girls,TP_CP_1p(believed_coref,lawyer,TP_tr_1p(hated_us,soldier))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_pronouns_84
# ::suppl deep_recursion_pronouns_84
(u_6106 / say-01
        :ARG0 (r / we
                 :ARG1-of (u_6089 / hate-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_6085 / believe-01
                                                   :ARG0 (m / lawyer)
                                                   :ARG1-of (u_6087 / believe-01
                                                                    :ARG0 (u_6092 / girl)
                                                                    :ARG1-of (u_6090 / believe-01
                                                                                     :ARG0 (u_6095 / woman)
                                                                                     :ARG1-of (u_6093 / mention-01
                                                                                                      :ARG0 (u_6102 / i)
                                                                                                      :ARG1-of (u_6096 / hear-01
                                                                                                                       :ARG0 (a / astronaut)
                                                                                                                       :ARG1-of (u_6098 / know-01
                                                                                                                                        :ARG0 (d / doctor)
                                                                                                                                        :ARG1-of (u_6100 / believe-01
                                                                                                                                                         :ARG0 (u_6105 / you)
                                                                                                                                                         :ARG1-of (u_6103 / know-01
                                                                                                                                                                          :ARG0 (u_6107 / kid)
                                                                                                                                                                          :ARG1-of u_6106)))))))))))

# ::snt You thought that I heard that the doctor heard that the soldier thought that the boys thought that we believed that the lawyer thought that the men heard that the girls knew that you sneezed
# ::tree TP_resolve_coref_2(thought_resolve_coref,you,TP_CP_2_subj1s(heard_coref,I,TP_CP_2(heard_coref,doctor,TP_CP_2(thought_coref,soldier,TP_CP_2(thought_coref,boys,TP_CP_2_subj1p(believed_coref,we,TP_CP_2(thought_coref,lawyer,TP_CP_2(heard_coref,men,TP_CP_2(knew_coref,girls,TP_intr_2(you_sneezed))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_pronouns_85
# ::suppl deep_recursion_pronouns_85
(u_6130 / think-01
        :ARG0 (r / you
                 :ARG0-of (u_6110 / sneeze-01
                                  :ARG1-of (u_6108 / know-01
                                                   :ARG0 (u_6113 / girl)
                                                   :ARG1-of (u_6111 / hear-01
                                                                    :ARG0 (u_6118 / man)
                                                                    :ARG1-of (u_6114 / think-01
                                                                                     :ARG0 (m / lawyer)
                                                                                     :ARG1-of (u_6116 / believe-01
                                                                                                      :ARG0 (u_6121 / we)
                                                                                                      :ARG1-of (u_6119 / think-01
                                                                                                                       :ARG0 (u_6129 / boy)
                                                                                                                       :ARG1-of (u_6122 / think-01
                                                                                                                                        :ARG0 (s / soldier)
                                                                                                                                        :ARG1-of (u_6125 / hear-01
                                                                                                                                                         :ARG0 (d / doctor)
                                                                                                                                                         :ARG1-of (u_6127 / hear-01
                                                                                                                                                                          :ARG0 (u_6131 / i)
                                                                                                                                                                          :ARG1-of u_6130)))))))))))

# ::snt We believed that the doctor believed that the men said that the kids believed that I heard that the lawyer heard that the astronaut thought that you knew that the women mentioned that we sneezed
# ::tree TP_resolve_coref_1p(believed_resolve_coref,we,TP_CP_1p(believed_coref,doctor,TP_CP_1p(said_coref,men,TP_CP_1p(believed_coref,kids,TP_CP_1p_subj1s(heard_coref,I,TP_CP_1p(heard_coref,lawyer,TP_CP_1p(thought_coref,astronaut,TP_CP_1p_subj2(knew_coref,you,TP_CP_1p(mentioned_coref,women,TP_intr_1p(we_sneezed))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_pronouns_86
# ::suppl deep_recursion_pronouns_86
(u_6153 / believe-01
        :ARG0 (r / we
                 :ARG0-of (u_6134 / sneeze-01
                                  :ARG1-of (u_6132 / mention-01
                                                   :ARG0 (u_6137 / woman)
                                                   :ARG1-of (u_6135 / know-01
                                                                    :ARG0 (u_6144 / you)
                                                                    :ARG1-of (u_6138 / think-01
                                                                                     :ARG0 (a / astronaut)
                                                                                     :ARG1-of (u_6140 / hear-01
                                                                                                      :ARG0 (m / lawyer)
                                                                                                      :ARG1-of (u_6142 / hear-01
                                                                                                                       :ARG0 (u_6147 / i)
                                                                                                                       :ARG1-of (u_6145 / believe-01
                                                                                                                                        :ARG0 (u_6150 / kid)
                                                                                                                                        :ARG1-of (u_6148 / say-01
                                                                                                                                                         :ARG0 (u_6154 / man)
                                                                                                                                                         :ARG1-of (u_6151 / believe-01
                                                                                                                                                                          :ARG0 (d / doctor)
                                                                                                                                                                          :ARG1-of u_6153)))))))))))

# ::snt You heard that I believed that the soldier believed that the lawyer knew that the doctor mentioned that the women believed that the men heard that the girls thought that the boys said that the kids hated you
# ::tree TP_resolve_coref_2(heard_resolve_coref,you,TP_CP_2_subj1s(believed_coref,I,TP_CP_2(believed_coref,soldier,TP_CP_2(knew_coref,lawyer,TP_CP_2(mentioned_coref,doctor,TP_CP_2(believed_coref,women,TP_CP_2(heard_coref,men,TP_CP_2(thought_coref,girls,TP_CP_2(said_coref,boys,TP_tr_2(hated_you,kids))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_pronouns_87
# ::suppl deep_recursion_pronouns_87
(u_6170 / hear-01
        :ARG0 (r / you
                 :ARG1-of (u_6155 / hate-01
                                  :ARG0 (u_6157 / kid)
                                  :ARG1-of (u_6156 / say-01
                                                   :ARG0 (u_6159 / boy)
                                                   :ARG1-of (u_6158 / think-01
                                                                    :ARG0 (u_6161 / girl)
                                                                    :ARG1-of (u_6160 / hear-01
                                                                                     :ARG0 (u_6163 / man)
                                                                                     :ARG1-of (u_6162 / believe-01
                                                                                                      :ARG0 (u_6169 / woman)
                                                                                                      :ARG1-of (u_6164 / mention-01
                                                                                                                       :ARG0 (d / doctor)
                                                                                                                       :ARG1-of (u_6165 / know-01
                                                                                                                                        :ARG0 (m / lawyer)
                                                                                                                                        :ARG1-of (u_6166 / believe-01
                                                                                                                                                         :ARG0 (s / soldier)
                                                                                                                                                         :ARG1-of (u_6167 / believe-01
                                                                                                                                                                          :ARG0 (u_6171 / i)
                                                                                                                                                                          :ARG1-of u_6170)))))))))))

# ::snt You thought that the boys knew that we thought that the men mentioned that I thought that the doctor said that the girls thought that the lawyer said that the kids thought that you sneezed
# ::tree TP_resolve_coref_2(thought_resolve_coref,you,TP_CP_2(knew_coref,boys,TP_CP_2_subj1p(thought_coref,we,TP_CP_2(mentioned_coref,men,TP_CP_2_subj1s(thought_coref,I,TP_CP_2(said_coref,doctor,TP_CP_2(thought_coref,girls,TP_CP_2(said_coref,lawyer,TP_CP_2(thought_coref,kids,TP_intr_2(you_sneezed))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_pronouns_88
# ::suppl deep_recursion_pronouns_88
(u_6194 / think-01
        :ARG0 (r / you
                 :ARG0-of (u_6174 / sneeze-01
                                  :ARG1-of (u_6172 / think-01
                                                   :ARG0 (u_6179 / kid)
                                                   :ARG1-of (u_6175 / say-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_6177 / think-01
                                                                                     :ARG0 (u_6184 / girl)
                                                                                     :ARG1-of (u_6180 / say-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_6182 / think-01
                                                                                                                       :ARG0 (u_6187 / i)
                                                                                                                       :ARG1-of (u_6185 / mention-01
                                                                                                                                        :ARG0 (u_6190 / man)
                                                                                                                                        :ARG1-of (u_6188 / think-01
                                                                                                                                                         :ARG0 (u_6193 / we)
                                                                                                                                                         :ARG1-of (u_6191 / know-01
                                                                                                                                                                          :ARG0 (u_6195 / boy)
                                                                                                                                                                          :ARG1-of u_6194)))))))))))

# ::snt The girls heard that I thought that the men heard that we mentioned that the doctor heard that the soldier believed that the kids said that you heard that the astronaut mentioned that the lawyer mentioned that the boys hated me
# ::tree TP_3p(heard,girls,TP_resolve_coref_1s(thought_resolve_coref,I,TP_CP_1s(heard_coref,men,TP_CP_1s_subj1p(mentioned_coref,we,TP_CP_1s(heard_coref,doctor,TP_CP_1s(believed_coref,soldier,TP_CP_1s(said_coref,kids,TP_CP_1s_subj2(heard_coref,you,TP_CP_1s(mentioned_coref,astronaut,TP_CP_1s(mentioned_coref,lawyer,TP_tr_1s(hated_me,boys)))))))))))
# ::size0 10
# ::size1 11
# ::id deep_recursion_pronouns_89
# ::suppl deep_recursion_pronouns_89
(u_6214 / hear-01
        :ARG0 (r / girl)
        :ARG1 (u_6212 / think-01
                      :ARG0 (u_6216 / i
                                    :ARG1-of (u_6196 / hate-01
                                                     :ARG0 (u_6200 / boy)
                                                     :ARG1-of (u_6197 / mention-01
                                                                      :ARG0 (m / lawyer)
                                                                      :ARG1-of (u_6198 / mention-01
                                                                                       :ARG0 (a / astronaut)
                                                                                       :ARG1-of (u_6199 / hear-01
                                                                                                        :ARG0 (u_6202 / you)
                                                                                                        :ARG1-of (u_6201 / say-01
                                                                                                                         :ARG0 (u_6208 / kid)
                                                                                                                         :ARG1-of (u_6203 / believe-01
                                                                                                                                          :ARG0 (s / soldier)
                                                                                                                                          :ARG1-of (u_6204 / hear-01
                                                                                                                                                           :ARG0 (d / doctor)
                                                                                                                                                           :ARG1-of (u_6206 / mention-01
                                                                                                                                                                            :ARG0 (u_6211 / we)
                                                                                                                                                                            :ARG1-of (u_6209 / hear-01
                                                                                                                                                                                             :ARG0 (u_6213 / man)
                                                                                                                                                                                             :ARG1-of u_6212))))))))))))

# ::snt You mentioned that the women believed that the men thought that we knew that the soldier knew that the doctor said that the astronaut knew that the girls heard that I mentioned that the kids heard that the boys hated you
# ::tree TP_resolve_coref_2(mentioned_resolve_coref,you,TP_CP_2(believed_coref,women,TP_CP_2(thought_coref,men,TP_CP_2_subj1p(knew_coref,we,TP_CP_2(knew_coref,soldier,TP_CP_2(said_coref,doctor,TP_CP_2(knew_coref,astronaut,TP_CP_2(heard_coref,girls,TP_CP_2_subj1s(mentioned_coref,I,TP_CP_2(heard_coref,kids,TP_tr_2(hated_you,boys)))))))))))
# ::size0 11
# ::size1 11
# ::id deep_recursion_pronouns_90
# ::suppl deep_recursion_pronouns_90
(u_6236 / mention-01
        :ARG0 (r / you
                 :ARG1-of (u_6217 / hate-01
                                  :ARG0 (u_6219 / boy)
                                  :ARG1-of (u_6218 / hear-01
                                                   :ARG0 (u_6221 / kid)
                                                   :ARG1-of (u_6220 / mention-01
                                                                    :ARG0 (u_6223 / i)
                                                                    :ARG1-of (u_6222 / hear-01
                                                                                     :ARG0 (u_6229 / girl)
                                                                                     :ARG1-of (u_6224 / know-01
                                                                                                      :ARG0 (a / astronaut)
                                                                                                      :ARG1-of (u_6225 / say-01
                                                                                                                       :ARG0 (d / doctor)
                                                                                                                       :ARG1-of (u_6226 / know-01
                                                                                                                                        :ARG0 (s / soldier)
                                                                                                                                        :ARG1-of (u_6227 / know-01
                                                                                                                                                         :ARG0 (u_6232 / we)
                                                                                                                                                         :ARG1-of (u_6230 / think-01
                                                                                                                                                                          :ARG0 (u_6235 / man)
                                                                                                                                                                          :ARG1-of (u_6233 / believe-01
                                                                                                                                                                                           :ARG0 (u_6237 / woman)
                                                                                                                                                                                           :ARG1-of u_6236))))))))))))

# ::snt The kids thought that we mentioned that the women mentioned that the astronaut mentioned that I knew that the girls knew that the lawyer knew that the boys thought that the men heard that you knew that the soldier thought that we sneezed
# ::tree TP_3p(thought,kids,TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p(mentioned_coref,women,TP_CP_1p(mentioned_coref,astronaut,TP_CP_1p_subj1s(knew_coref,I,TP_CP_1p(knew_coref,girls,TP_CP_1p(knew_coref,lawyer,TP_CP_1p(thought_coref,boys,TP_CP_1p(heard_coref,men,TP_CP_1p_subj2(knew_coref,you,TP_CP_1p(thought_coref,soldier,TP_intr_1p(we_sneezed))))))))))))
# ::size0 11
# ::size1 12
# ::id deep_recursion_pronouns_91
# ::suppl deep_recursion_pronouns_91
(u_6265 / think-01
        :ARG0 (r / kid)
        :ARG1 (u_6263 / mention-01
                      :ARG0 (u_6267 / we
                                    :ARG0-of (u_6243 / sneeze-01
                                                     :ARG1-of (u_6238 / think-01
                                                                      :ARG0 (s / soldier)
                                                                      :ARG1-of (u_6241 / know-01
                                                                                       :ARG0 (u_6246 / you)
                                                                                       :ARG1-of (u_6244 / hear-01
                                                                                                        :ARG0 (u_6249 / man)
                                                                                                        :ARG1-of (u_6247 / think-01
                                                                                                                         :ARG0 (u_6254 / boy)
                                                                                                                         :ARG1-of (u_6250 / know-01
                                                                                                                                          :ARG0 (m / lawyer)
                                                                                                                                          :ARG1-of (u_6252 / know-01
                                                                                                                                                           :ARG0 (u_6257 / girl)
                                                                                                                                                           :ARG1-of (u_6255 / know-01
                                                                                                                                                                            :ARG0 (u_6262 / i)
                                                                                                                                                                            :ARG1-of (u_6258 / mention-01
                                                                                                                                                                                             :ARG0 (a / astronaut)
                                                                                                                                                                                             :ARG1-of (u_6260 / mention-01
                                                                                                                                                                                                              :ARG0 (u_6264 / woman)
                                                                                                                                                                                                              :ARG1-of u_6263)))))))))))))

# ::snt We said that the boys heard that the girls knew that the doctor knew that the lawyer believed that I knew that you believed that the soldier said that the women mentioned that the kids mentioned that the men hated us
# ::tree TP_resolve_coref_1p(said_resolve_coref,we,TP_CP_1p(heard_coref,boys,TP_CP_1p(knew_coref,girls,TP_CP_1p(knew_coref,doctor,TP_CP_1p(believed_coref,lawyer,TP_CP_1p_subj1s(knew_coref,I,TP_CP_1p_subj2(believed_coref,you,TP_CP_1p(said_coref,soldier,TP_CP_1p(mentioned_coref,women,TP_CP_1p(mentioned_coref,kids,TP_tr_1p(hated_us,men)))))))))))
# ::size0 11
# ::size1 11
# ::id deep_recursion_pronouns_92
# ::suppl deep_recursion_pronouns_92
(u_6290 / say-01
        :ARG0 (r / we
                 :ARG1-of (u_6268 / hate-01
                                  :ARG0 (u_6270 / man)
                                  :ARG1-of (u_6269 / mention-01
                                                   :ARG0 (u_6272 / kid)
                                                   :ARG1-of (u_6271 / mention-01
                                                                    :ARG0 (u_6276 / woman)
                                                                    :ARG1-of (u_6273 / say-01
                                                                                     :ARG0 (s / soldier)
                                                                                     :ARG1-of (u_6274 / believe-01
                                                                                                      :ARG0 (u_6279 / you)
                                                                                                      :ARG1-of (u_6277 / know-01
                                                                                                                       :ARG0 (u_6286 / i)
                                                                                                                       :ARG1-of (u_6280 / believe-01
                                                                                                                                        :ARG0 (m / lawyer)
                                                                                                                                        :ARG1-of (u_6282 / know-01
                                                                                                                                                         :ARG0 (d / doctor)
                                                                                                                                                         :ARG1-of (u_6284 / know-01
                                                                                                                                                                          :ARG0 (u_6289 / girl)
                                                                                                                                                                          :ARG1-of (u_6287 / hear-01
                                                                                                                                                                                           :ARG0 (u_6291 / boy)
                                                                                                                                                                                           :ARG1-of u_6290))))))))))))

# ::snt You heard that the doctor thought that the girls said that I believed that the astronaut heard that the soldier said that the kids thought that we heard that the lawyer heard that the women thought that the men liked you
# ::tree TP_resolve_coref_2(heard_resolve_coref,you,TP_CP_2(thought_coref,doctor,TP_CP_2(said_coref,girls,TP_CP_2_subj1s(believed_coref,I,TP_CP_2(heard_coref,astronaut,TP_CP_2(said_coref,soldier,TP_CP_2(thought_coref,kids,TP_CP_2_subj1p(heard_coref,we,TP_CP_2(heard_coref,lawyer,TP_CP_2(thought_coref,women,TP_tr_2(liked_you,men)))))))))))
# ::size0 11
# ::size1 11
# ::id deep_recursion_pronouns_93
# ::suppl deep_recursion_pronouns_93
(u_6311 / hear-01
        :ARG0 (r / you
                 :ARG1-of (u_6292 / like-01
                                  :ARG0 (u_6294 / man)
                                  :ARG1-of (u_6293 / think-01
                                                   :ARG0 (u_6297 / woman)
                                                   :ARG1-of (u_6295 / hear-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_6296 / hear-01
                                                                                     :ARG0 (u_6299 / we)
                                                                                     :ARG1-of (u_6298 / think-01
                                                                                                      :ARG0 (u_6305 / kid)
                                                                                                      :ARG1-of (u_6300 / say-01
                                                                                                                       :ARG0 (s / soldier)
                                                                                                                       :ARG1-of (u_6301 / hear-01
                                                                                                                                        :ARG0 (a / astronaut)
                                                                                                                                        :ARG1-of (u_6303 / believe-01
                                                                                                                                                         :ARG0 (u_6308 / i)
                                                                                                                                                         :ARG1-of (u_6306 / say-01
                                                                                                                                                                          :ARG0 (u_6312 / girl)
                                                                                                                                                                          :ARG1-of (u_6309 / think-01
                                                                                                                                                                                           :ARG0 (d / doctor)
                                                                                                                                                                                           :ARG1-of u_6311))))))))))))

# ::snt We mentioned that the kids mentioned that the boys knew that the men heard that you thought that the lawyer thought that the doctor believed that the girls knew that I thought that the women heard that we sneezed
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p(mentioned_coref,kids,TP_CP_1p(knew_coref,boys,TP_CP_1p(heard_coref,men,TP_CP_1p_subj2(thought_coref,you,TP_CP_1p(thought_coref,lawyer,TP_CP_1p(believed_coref,doctor,TP_CP_1p(knew_coref,girls,TP_CP_1p_subj1s(thought_coref,I,TP_CP_1p(heard_coref,women,TP_intr_1p(we_sneezed)))))))))))
# ::size0 11
# ::size1 11
# ::id deep_recursion_pronouns_94
# ::suppl deep_recursion_pronouns_94
(u_6338 / mention-01
        :ARG0 (r / we
                 :ARG0-of (u_6315 / sneeze-01
                                  :ARG1-of (u_6313 / hear-01
                                                   :ARG0 (u_6318 / woman)
                                                   :ARG1-of (u_6316 / think-01
                                                                    :ARG0 (u_6321 / i)
                                                                    :ARG1-of (u_6319 / know-01
                                                                                     :ARG0 (u_6328 / girl)
                                                                                     :ARG1-of (u_6322 / believe-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_6324 / think-01
                                                                                                                       :ARG0 (m / lawyer)
                                                                                                                       :ARG1-of (u_6326 / think-01
                                                                                                                                        :ARG0 (u_6331 / you)
                                                                                                                                        :ARG1-of (u_6329 / hear-01
                                                                                                                                                         :ARG0 (u_6334 / man)
                                                                                                                                                         :ARG1-of (u_6332 / know-01
                                                                                                                                                                          :ARG0 (u_6337 / boy)
                                                                                                                                                                          :ARG1-of (u_6335 / mention-01
                                                                                                                                                                                           :ARG0 (u_6339 / kid)
                                                                                                                                                                                           :ARG1-of u_6338))))))))))))

# ::snt We mentioned that the soldier believed that the lawyer mentioned that the girls believed that you thought that the astronaut mentioned that the men heard that I believed that the women knew that the boys heard that we sneezed
# ::tree TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p(believed_coref,soldier,TP_CP_1p(mentioned_coref,lawyer,TP_CP_1p(believed_coref,girls,TP_CP_1p_subj2(thought_coref,you,TP_CP_1p(mentioned_coref,astronaut,TP_CP_1p(heard_coref,men,TP_CP_1p_subj1s(believed_coref,I,TP_CP_1p(knew_coref,women,TP_CP_1p(heard_coref,boys,TP_intr_1p(we_sneezed)))))))))))
# ::size0 11
# ::size1 11
# ::id deep_recursion_pronouns_95
# ::suppl deep_recursion_pronouns_95
(u_6365 / mention-01
        :ARG0 (r / we
                 :ARG0-of (u_6342 / sneeze-01
                                  :ARG1-of (u_6340 / hear-01
                                                   :ARG0 (u_6345 / boy)
                                                   :ARG1-of (u_6343 / know-01
                                                                    :ARG0 (u_6348 / woman)
                                                                    :ARG1-of (u_6346 / believe-01
                                                                                     :ARG0 (u_6351 / i)
                                                                                     :ARG1-of (u_6349 / hear-01
                                                                                                      :ARG0 (u_6356 / man)
                                                                                                      :ARG1-of (u_6352 / mention-01
                                                                                                                       :ARG0 (a / astronaut)
                                                                                                                       :ARG1-of (u_6354 / think-01
                                                                                                                                        :ARG0 (u_6359 / you)
                                                                                                                                        :ARG1-of (u_6357 / believe-01
                                                                                                                                                         :ARG0 (u_6366 / girl)
                                                                                                                                                         :ARG1-of (u_6360 / mention-01
                                                                                                                                                                          :ARG0 (m / lawyer)
                                                                                                                                                                          :ARG1-of (u_6362 / believe-01
                                                                                                                                                                                           :ARG0 (s / soldier)
                                                                                                                                                                                           :ARG1-of u_6365))))))))))))

# ::snt We thought that the kids heard that the soldier knew that the men said that you believed that the girls believed that the doctor knew that the lawyer believed that I said that the boys heard that the women hated us
# ::tree TP_resolve_coref_1p(thought_resolve_coref,we,TP_CP_1p(heard_coref,kids,TP_CP_1p(knew_coref,soldier,TP_CP_1p(said_coref,men,TP_CP_1p_subj2(believed_coref,you,TP_CP_1p(believed_coref,girls,TP_CP_1p(knew_coref,doctor,TP_CP_1p(believed_coref,lawyer,TP_CP_1p_subj1s(said_coref,I,TP_CP_1p(heard_coref,boys,TP_tr_1p(hated_us,women)))))))))))
# ::size0 11
# ::size1 11
# ::id deep_recursion_pronouns_96
# ::suppl deep_recursion_pronouns_96
(u_6384 / think-01
        :ARG0 (r / we
                 :ARG1-of (u_6367 / hate-01
                                  :ARG0 (u_6369 / woman)
                                  :ARG1-of (u_6368 / hear-01
                                                   :ARG0 (u_6371 / boy)
                                                   :ARG1-of (u_6370 / say-01
                                                                    :ARG0 (u_6375 / i)
                                                                    :ARG1-of (u_6372 / believe-01
                                                                                     :ARG0 (m / lawyer)
                                                                                     :ARG1-of (u_6373 / know-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_6374 / believe-01
                                                                                                                       :ARG0 (u_6377 / girl)
                                                                                                                       :ARG1-of (u_6376 / believe-01
                                                                                                                                        :ARG0 (u_6379 / you)
                                                                                                                                        :ARG1-of (u_6378 / say-01
                                                                                                                                                         :ARG0 (u_6383 / man)
                                                                                                                                                         :ARG1-of (u_6380 / know-01
                                                                                                                                                                          :ARG0 (s / soldier)
                                                                                                                                                                          :ARG1-of (u_6381 / hear-01
                                                                                                                                                                                           :ARG0 (u_6385 / kid)
                                                                                                                                                                                           :ARG1-of u_6384))))))))))))

# ::snt The men mentioned that you thought that I heard that the kids thought that the doctor mentioned that the boys thought that the soldier heard that the astronaut thought that we heard that the women knew that the girls believed that the lawyer knew that I sneezed
# ::tree TP_3p(mentioned,men,TP_2(thought,you,TP_resolve_coref_1s(heard_resolve_coref,I,TP_CP_1s(thought_coref,kids,TP_CP_1s(mentioned_coref,doctor,TP_CP_1s(thought_coref,boys,TP_CP_1s(heard_coref,soldier,TP_CP_1s(thought_coref,astronaut,TP_CP_1s_subj1p(heard_coref,we,TP_CP_1s(knew_coref,women,TP_CP_1s(believed_coref,girls,TP_CP_1s(knew_coref,lawyer,TP_intr_1s(I_sneezed)))))))))))))
# ::size0 11
# ::size1 13
# ::id deep_recursion_pronouns_97
# ::suppl deep_recursion_pronouns_97
(u_6415 / mention-01
        :ARG0 (r / man)
        :ARG1 (u_6412 / think-01
                      :ARG0 (u_6417 / you)
                      :ARG1 (u_6410 / hear-01
                                    :ARG0 (u_6414 / i
                                                  :ARG0-of (u_6390 / sneeze-01
                                                                   :ARG1-of (u_6386 / know-01
                                                                                    :ARG0 (m / lawyer)
                                                                                    :ARG1-of (u_6388 / believe-01
                                                                                                     :ARG0 (u_6393 / girl)
                                                                                                     :ARG1-of (u_6391 / know-01
                                                                                                                      :ARG0 (u_6396 / woman)
                                                                                                                      :ARG1-of (u_6394 / hear-01
                                                                                                                                       :ARG0 (u_6404 / we)
                                                                                                                                       :ARG1-of (u_6397 / think-01
                                                                                                                                                        :ARG0 (a / astronaut)
                                                                                                                                                        :ARG1-of (u_6399 / hear-01
                                                                                                                                                                         :ARG0 (s / soldier)
                                                                                                                                                                         :ARG1-of (u_6402 / think-01
                                                                                                                                                                                          :ARG0 (u_6409 / boy)
                                                                                                                                                                                          :ARG1-of (u_6405 / mention-01
                                                                                                                                                                                                           :ARG0 (d / doctor)
                                                                                                                                                                                                           :ARG1-of (u_6407 / think-01
                                                                                                                                                                                                                            :ARG0 (u_6411 / kid)
                                                                                                                                                                                                                            :ARG1-of u_6410))))))))))))))

# ::snt I mentioned that we mentioned that you knew that the kids said that the soldier believed that the doctor mentioned that the boys believed that the lawyer mentioned that the girls mentioned that the women thought that the astronaut believed that we sneezed
# ::tree TP_1s(mentioned,I,TP_resolve_coref_1p(mentioned_resolve_coref,we,TP_CP_1p_subj2(knew_coref,you,TP_CP_1p(said_coref,kids,TP_CP_1p(believed_coref,soldier,TP_CP_1p(mentioned_coref,doctor,TP_CP_1p(believed_coref,boys,TP_CP_1p(mentioned_coref,lawyer,TP_CP_1p(mentioned_coref,girls,TP_CP_1p(thought_coref,women,TP_CP_1p(believed_coref,astronaut,TP_intr_1p(we_sneezed))))))))))))
# ::size0 11
# ::size1 12
# ::id deep_recursion_pronouns_98
# ::suppl deep_recursion_pronouns_98
(u_6444 / mention-01
        :ARG0 (r / i)
        :ARG1 (u_6442 / mention-01
                      :ARG0 (u_6446 / we
                                    :ARG0-of (u_6422 / sneeze-01
                                                     :ARG1-of (u_6418 / believe-01
                                                                      :ARG0 (a / astronaut)
                                                                      :ARG1-of (u_6420 / think-01
                                                                                       :ARG0 (u_6425 / woman)
                                                                                       :ARG1-of (u_6423 / mention-01
                                                                                                        :ARG0 (u_6430 / girl)
                                                                                                        :ARG1-of (u_6426 / mention-01
                                                                                                                         :ARG0 (m / lawyer)
                                                                                                                         :ARG1-of (u_6428 / believe-01
                                                                                                                                          :ARG0 (u_6438 / boy)
                                                                                                                                          :ARG1-of (u_6431 / mention-01
                                                                                                                                                           :ARG0 (d / doctor)
                                                                                                                                                           :ARG1-of (u_6433 / believe-01
                                                                                                                                                                            :ARG0 (s / soldier)
                                                                                                                                                                            :ARG1-of (u_6436 / say-01
                                                                                                                                                                                             :ARG0 (u_6441 / kid)
                                                                                                                                                                                             :ARG1-of (u_6439 / know-01
                                                                                                                                                                                                              :ARG0 (u_6443 / you)
                                                                                                                                                                                                              :ARG1-of u_6442)))))))))))))

# ::snt I thought that the astronaut believed that you mentioned that the lawyer thought that the doctor mentioned that the women knew that the boys believed that the soldier thought that we believed that the kids said that I sneezed
# ::tree TP_resolve_coref_1s(thought_resolve_coref,I,TP_CP_1s(believed_coref,astronaut,TP_CP_1s_subj2(mentioned_coref,you,TP_CP_1s(thought_coref,lawyer,TP_CP_1s(mentioned_coref,doctor,TP_CP_1s(knew_coref,women,TP_CP_1s(believed_coref,boys,TP_CP_1s(thought_coref,soldier,TP_CP_1s_subj1p(believed_coref,we,TP_CP_1s(said_coref,kids,TP_intr_1s(I_sneezed)))))))))))
# ::size0 11
# ::size1 11
# ::id deep_recursion_pronouns_99
# ::suppl deep_recursion_pronouns_99
(u_6471 / think-01
        :ARG0 (r / i
                 :ARG0-of (u_6449 / sneeze-01
                                  :ARG1-of (u_6447 / say-01
                                                   :ARG0 (u_6452 / kid)
                                                   :ARG1-of (u_6450 / believe-01
                                                                    :ARG0 (u_6458 / we)
                                                                    :ARG1-of (u_6453 / think-01
                                                                                     :ARG0 (s / soldier)
                                                                                     :ARG1-of (u_6456 / believe-01
                                                                                                      :ARG0 (u_6461 / boy)
                                                                                                      :ARG1-of (u_6459 / know-01
                                                                                                                       :ARG0 (u_6468 / woman)
                                                                                                                       :ARG1-of (u_6462 / mention-01
                                                                                                                                        :ARG0 (d / doctor)
                                                                                                                                        :ARG1-of (u_6464 / think-01
                                                                                                                                                         :ARG0 (m / lawyer)
                                                                                                                                                         :ARG1-of (u_6466 / mention-01
                                                                                                                                                                          :ARG0 (u_6472 / you)
                                                                                                                                                                          :ARG1-of (u_6469 / believe-01
                                                                                                                                                                                           :ARG0 (a / astronaut)
                                                                                                                                                                                           :ARG1-of u_6471))))))))))))

# ::snt Sophie saw the journalist with the large eyebrows .
# ::id pp_attachment_0
# ::suppl pp_attachment_0
(r / see-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (z0 / journalist
             :poss-of (e / eyebrow
                         :mod (l / large))))

# ::snt John peeked at the stranger with the red t-shirt .
# ::id pp_attachment_1
# ::suppl pp_attachment_1
(u_26 / peek-01
      :ARG0 (p / person
               :name (n / name
                        :op1 "John"))
      :ARG1 (p2 / stranger
                :poss-of (t / t-shirt
                            :ARG1-of (r / red-02))))

# ::snt Sophie observed the girl with the weird hair .
# ::id pp_attachment_2
# ::suppl pp_attachment_2
(r / observe-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (g / girl
            :poss-of (h / hair
                        :mod (w / weird))))

# ::snt The baker peeked at the soldier with the weird hair .
# ::id pp_attachment_3
# ::suppl pp_attachment_3
(r / peek-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (z0 / soldier
             :poss-of (h / hair
                         :mod (w / weird))))

# ::snt John saw the journalist with the large eyebrows .
# ::id pp_attachment_4
# ::suppl pp_attachment_4
(r / see-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (z0 / journalist
             :poss-of (e / eyebrow
                         :mod (l / large))))

# ::snt John saw the soldier with the large eyebrows .
# ::id pp_attachment_5
# ::suppl pp_attachment_5
(r / see-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (z0 / soldier
             :poss-of (e / eyebrow
                         :mod (l / large))))

# ::snt The professor saw the soldier with the weird hair .
# ::id pp_attachment_6
# ::suppl pp_attachment_6
(r / see-01
   :ARG0 (p / professor)
   :ARG1 (z0 / soldier
             :poss-of (h / hair
                         :mod (w / weird))))

# ::snt The baker saw the soldier with the weird hair .
# ::id pp_attachment_7
# ::suppl pp_attachment_7
(r / see-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (z0 / soldier
             :poss-of (h / hair
                         :mod (w / weird))))

# ::snt Sophie observed the stranger with the large eyebrows .
# ::id pp_attachment_8
# ::suppl pp_attachment_8
(r / observe-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (p2 / stranger
             :poss-of (e / eyebrow
                         :mod (l / large))))

# ::snt Sophie saw the soldier with the weird hair .
# ::id pp_attachment_9
# ::suppl pp_attachment_9
(r / see-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (z0 / soldier
             :poss-of (h / hair
                         :mod (w / weird))))

# ::snt The professor addressed the journalist with the spyglass .
# ::id pp_attachment_10
# ::suppl pp_attachment_10
(r / address-01
   :ARG0 (p / professor)
   :ARG2 (z0 / journalist
             :poss-of (b / spyglass)))

# ::snt Sophie addressed the journalist with the spyglass .
# ::id pp_attachment_11
# ::suppl pp_attachment_11
(r / address-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG2 (z0 / journalist
             :poss-of (b / spyglass)))

# ::snt The baker hated the soldier with the binoculars .
# ::id pp_attachment_12
# ::suppl pp_attachment_12
(r / hate-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (z0 / soldier
             :poss-of (u_34 / binoculars)))

# ::snt The professor knew the stranger with the spyglass .
# ::id pp_attachment_13
# ::suppl pp_attachment_13
(r / know-01
   :ARG0 (p / professor)
   :ARG1 (p2 / stranger
             :poss-of (b / spyglass)))

# ::snt The baker sang to the girl with the binoculars .
# ::id pp_attachment_14
# ::suppl pp_attachment_14
(r / sing-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG2 (g / girl
            :poss-of (u_35 / binoculars)))

# ::snt John sang to the soldier with the binoculars .
# ::id pp_attachment_15
# ::suppl pp_attachment_15
(r / sing-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG2 (z0 / soldier
             :poss-of (b / binoculars)))

# ::snt The professor sang to the girl with the spyglass .
# ::id pp_attachment_16
# ::suppl pp_attachment_16
(r / sing-01
   :ARG0 (p / professor)
   :ARG2 (g / girl
            :poss-of (b / spyglass)))

# ::snt The professor addressed the journalist with the telescope .
# ::id pp_attachment_17
# ::suppl pp_attachment_17
(r / address-01
   :ARG0 (p / professor)
   :ARG2 (z0 / journalist
             :poss-of (t / telescope)))

# ::snt John hated the stranger with the telescope .
# ::id pp_attachment_18
# ::suppl pp_attachment_18
(r / hate-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (p2 / stranger
             :poss-of (t / telescope)))

# ::snt The baker sang to the girl with the telescope .
# ::id pp_attachment_19
# ::suppl pp_attachment_19
(r / sing-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG2 (g / girl
            :poss-of (t / telescope)))

# ::snt Sophie looked at the army with the spyglass .
# ::id pp_attachment_20
# ::suppl pp_attachment_20
(r / look-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (a / army)
   :instrument (b / spyglass))

# ::snt Sophie saw the moon with the spyglass .
# ::id pp_attachment_21
# ::suppl pp_attachment_21
(r / see-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (m / moon)
   :instrument (b / spyglass))

# ::snt The baker peeked at the northern lights with the telescope .
# ::id pp_attachment_22
# ::suppl pp_attachment_22
(r / peek-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (c / light
            :location (n / north))
   :instrument (t / telescope))

# ::snt John looked at the moon with the binoculars .
# ::id pp_attachment_23
# ::suppl pp_attachment_23
(r / look-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (m / moon)
   :instrument (b / binoculars))

# ::snt Sophie saw the rainfall with the spyglass .
# ::id pp_attachment_24
# ::suppl pp_attachment_24
(r / see-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (b / rainfall)
   :instrument (u_41 / spyglass))

# ::snt Sophie peeked at the moon with the telescope .
# ::id pp_attachment_25
# ::suppl pp_attachment_25
(r / peek-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (m / moon)
   :instrument (t / telescope))

# ::snt The professor looked at the army with the binoculars .
# ::id pp_attachment_26
# ::suppl pp_attachment_26
(r / look-01
   :ARG0 (p / professor)
   :ARG1 (a / army)
   :instrument (b / binoculars))

# ::snt John looked at the rainfall with the telescope .
# ::id pp_attachment_27
# ::suppl pp_attachment_27
(r / look-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "John"))
   :ARG1 (b / rainfall)
   :instrument (t / telescope))

# ::snt Sophie saw the rainfall with the telescope .
# ::id pp_attachment_28
# ::suppl pp_attachment_28
(r / see-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sophie"))
   :ARG1 (b / rainfall)
   :instrument (t / telescope))

# ::snt The baker saw the moon with the spyglass .
# ::id pp_attachment_29
# ::suppl pp_attachment_29
(r / see-01
   :ARG0 (p / person
            :ARG0-of (b / bake-01))
   :ARG1 (m / moon)
   :instrument (u_46 / spyglass))

# ::snt The doctor heard that the girls thought that you thought that I mentioned that the astronaut said that the soldier hated her, the astronaut
# ::tree TP_CP(heard,make_singular(doctor),TP_CP(thought,girls,TP_CP(thought,you,TP_CP(mentioned,I,TP_resolve_coref(said_resolve_coref,astronaut,TP_tr(hated_her,make_singular(soldier)))))))
# ::size0 3
# ::size1 7
# ::id deep_recursion_3s_0
# ::suppl deep_recursion_3s_0
(u_7218 / hear-01
        :ARG0 (d / doctor)
        :ARG1 (u_7215 / think-01
                      :ARG0 (r / girl)
                      :ARG1 (u_7212 / think-01
                                    :ARG0 (u_7217 / you)
                                    :ARG1 (u_7209 / mention-01
                                                  :ARG0 (u_7214 / i)
                                                  :ARG1 (u_7208 / say-01
                                                                :ARG0 (a / astronaut
                                                                         :ARG1-of (u_7211 / hate-01
                                                                                          :ARG0 (s / soldier)
                                                                                          :ARG1-of u_7208)))))))

# ::snt The boys knew that the kids heard that the doctor knew that I said that we saw her, the doctor
# ::tree TP_CP(knew,boys,TP_CP(heard,kids,TP_resolve_coref(knew_resolve_coref,doctor,TP_CP_coref(said_coref,I,TP_tr(saw_her,we)))))
# ::size0 3
# ::size1 5
# ::id deep_recursion_3s_1
# ::suppl deep_recursion_3s_1
(u_7226 / know-01
        :ARG0 (r / boy)
        :ARG1 (u_7224 / hear-01
                      :ARG0 (u_7227 / kid)
                      :ARG1 (u_7223 / know-01
                                    :ARG0 (d / doctor
                                             :ARG1-of (u_7220 / see-01
                                                              :ARG0 (u_7222 / we)
                                                              :ARG1-of (u_7221 / say-01
                                                                               :ARG0 (u_7225 / i)
                                                                               :ARG1-of u_7223))))))

# ::snt The girls knew that the astronaut thought that the lawyer amused him, the astronaut
# ::tree TP_CP(knew,girls,TP_resolve_coref(thought_resolve_coref,astronaut,TP_tr(amused_him,make_singular(lawyer))))
# ::size0 3
# ::size1 4
# ::id deep_recursion_3s_2
# ::suppl deep_recursion_3s_2
(u_7229 / know-01
        :ARG0 (r / girl)
        :ARG1 (u_7228 / think-01
                      :ARG0 (a / astronaut
                               :ARG1-of (u_7230 / amuse-01
                                                :ARG0 (m / lawyer)
                                                :ARG1-of u_7228))))

# ::snt The boys mentioned that the doctor mentioned that the soldier hated her, the doctor
# ::tree TP_CP(mentioned,boys,TP_resolve_coref(mentioned_resolve_coref,doctor,TP_tr(hated_her,make_singular(soldier))))
# ::size0 3
# ::size1 4
# ::id deep_recursion_3s_3
# ::suppl deep_recursion_3s_3
(u_7232 / mention-01
        :ARG0 (r / boy)
        :ARG1 (u_7231 / mention-01
                      :ARG0 (d / doctor
                               :ARG1-of (u_7234 / hate-01
                                                :ARG0 (s / soldier)
                                                :ARG1-of u_7231))))

# ::snt The lawyer believed that the astronaut amused him, the lawyer
# ::tree TP_resolve_coref(believed_resolve_coref,lawyer,TP_tr(amused_him,make_singular(astronaut)))
# ::size0 3
# ::size1 3
# ::id deep_recursion_3s_4
# ::suppl deep_recursion_3s_4
(u_7235 / believe-01
        :ARG0 (m / lawyer
                 :ARG1-of (r / amuse-01
                             :ARG0 (a / astronaut)
                             :ARG1-of u_7235)))

# ::snt The astronaut thought that the doctor heard that I believed that we liked him, the doctor
# ::tree TP_CP(thought,make_singular(astronaut),TP_resolve_coref(heard_resolve_coref,doctor,TP_CP_coref(believed_coref,I,TP_tr(liked_him,we))))
# ::size0 3
# ::size1 4
# ::id deep_recursion_3s_5
# ::suppl deep_recursion_3s_5
(u_7240 / think-01
        :ARG0 (a / astronaut)
        :ARG1 (u_7239 / hear-01
                      :ARG0 (d / doctor
                               :ARG1-of (u_7236 / like-01
                                                :ARG0 (u_7238 / we)
                                                :ARG1-of (u_7237 / believe-01
                                                                 :ARG0 (r / i)
                                                                 :ARG1-of u_7239)))))

# ::snt We knew that the lawyer knew that the astronaut believed that I liked him, the lawyer
# ::tree TP_CP(knew,we,TP_resolve_coref(knew_resolve_coref,lawyer,TP_CP_coref(believed_coref,make_singular(astronaut),TP_tr(liked_him,I))))
# ::size0 3
# ::size1 4
# ::id deep_recursion_3s_6
# ::suppl deep_recursion_3s_6
(u_7244 / know-01
        :ARG0 (r / we)
        :ARG1 (u_7243 / know-01
                      :ARG0 (m / lawyer
                               :ARG1-of (u_7241 / like-01
                                                :ARG0 (u_7245 / i)
                                                :ARG1-of (u_7242 / believe-01
                                                                 :ARG0 (a / astronaut)
                                                                 :ARG1-of u_7243)))))

# ::snt The kids thought that the soldier thought that the boys thought that the girls saw him, the soldier
# ::tree TP_CP(thought,kids,TP_resolve_coref(thought_resolve_coref,soldier,TP_CP_coref(thought_coref,boys,TP_tr(saw_him,girls))))
# ::size0 3
# ::size1 4
# ::id deep_recursion_3s_7
# ::suppl deep_recursion_3s_7
(u_7250 / think-01
        :ARG0 (r / kid)
        :ARG1 (u_7249 / think-01
                      :ARG0 (s / soldier
                               :ARG1-of (u_7246 / see-01
                                                :ARG0 (u_7248 / girl)
                                                :ARG1-of (u_7247 / think-01
                                                                 :ARG0 (u_7252 / boy)
                                                                 :ARG1-of u_7249)))))

# ::snt The boys heard that the astronaut said that you said that the girls hated him, the astronaut
# ::tree TP_CP(heard,boys,TP_resolve_coref(said_resolve_coref,astronaut,TP_CP_coref(said_coref,you,TP_tr(hated_him,girls))))
# ::size0 3
# ::size1 4
# ::id deep_recursion_3s_8
# ::suppl deep_recursion_3s_8
(u_7257 / hear-01
        :ARG0 (r / boy)
        :ARG1 (u_7256 / say-01
                      :ARG0 (a / astronaut
                               :ARG1-of (u_7253 / hate-01
                                                :ARG0 (u_7255 / girl)
                                                :ARG1-of (u_7254 / say-01
                                                                 :ARG0 (u_7258 / you)
                                                                 :ARG1-of u_7256)))))

# ::snt The boys heard that we thought that the astronaut mentioned that the doctor amused her, the astronaut
# ::tree TP_CP(heard,boys,TP_CP(thought,we,TP_resolve_coref(mentioned_resolve_coref,astronaut,TP_tr(amused_her,make_singular(doctor)))))
# ::size0 3
# ::size1 5
# ::id deep_recursion_3s_9
# ::suppl deep_recursion_3s_9
(u_7262 / hear-01
        :ARG0 (r / boy)
        :ARG1 (u_7260 / think-01
                      :ARG0 (u_7263 / we)
                      :ARG1 (u_7259 / mention-01
                                    :ARG0 (a / astronaut
                                             :ARG1-of (u_7261 / amuse-01
                                                              :ARG0 (d / doctor)
                                                              :ARG1-of u_7259)))))

# ::snt The soldier heard that we knew that the lawyer saw him, the soldier
# ::tree TP_resolve_coref(heard_resolve_coref,soldier,TP_CP_coref(knew_coref,we,TP_tr(saw_him,make_singular(lawyer))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_3s_10
# ::suppl deep_recursion_3s_10
(u_7266 / hear-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7265 / see-01
                                  :ARG0 (m / lawyer)
                                  :ARG1-of (u_7264 / know-01
                                                   :ARG0 (r / we)
                                                   :ARG1-of u_7266))))

# ::snt The kids heard that the soldier knew that we knew that I believed that you liked him, the soldier
# ::tree TP_CP(heard,kids,TP_resolve_coref(knew_resolve_coref,soldier,TP_CP_coref(knew_coref,we,TP_CP_coref(believed_coref,I,TP_tr(liked_him,you)))))
# ::size0 4
# ::size1 5
# ::id deep_recursion_3s_11
# ::suppl deep_recursion_3s_11
(u_7273 / hear-01
        :ARG0 (r / kid)
        :ARG1 (u_7272 / know-01
                      :ARG0 (s / soldier
                               :ARG1-of (u_7267 / like-01
                                                :ARG0 (u_7269 / you)
                                                :ARG1-of (u_7268 / believe-01
                                                                 :ARG0 (u_7271 / i)
                                                                 :ARG1-of (u_7270 / know-01
                                                                                  :ARG0 (u_7275 / we)
                                                                                  :ARG1-of u_7272))))))

# ::snt The doctor knew that the kids mentioned that the lawyer liked him, the doctor
# ::tree TP_resolve_coref(knew_resolve_coref,doctor,TP_CP_coref(mentioned_coref,kids,TP_tr(liked_him,make_singular(lawyer))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_3s_12
# ::suppl deep_recursion_3s_12
(u_7278 / know-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7277 / like-01
                                  :ARG0 (m / lawyer)
                                  :ARG1-of (u_7276 / mention-01
                                                   :ARG0 (r / kid)
                                                   :ARG1-of u_7278))))

# ::snt The astronaut heard that the doctor believed that the boys believed that we liked him, the astronaut
# ::tree TP_resolve_coref(heard_resolve_coref,astronaut,TP_CP_coref(believed_coref,make_singular(doctor),TP_CP_coref(believed_coref,boys,TP_tr(liked_him,we))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_3s_13
# ::suppl deep_recursion_3s_13
(u_7283 / hear-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7279 / like-01
                                  :ARG0 (u_7281 / we)
                                  :ARG1-of (u_7280 / believe-01
                                                   :ARG0 (r / boy)
                                                   :ARG1-of (u_7282 / believe-01
                                                                    :ARG0 (d / doctor)
                                                                    :ARG1-of u_7283)))))

# ::snt I thought that the doctor heard that we mentioned that the lawyer mentioned that the girls hated him, the doctor
# ::tree TP_CP(thought,I,TP_resolve_coref(heard_resolve_coref,doctor,TP_CP_coref(mentioned_coref,we,TP_CP_coref(mentioned_coref,make_singular(lawyer),TP_tr(hated_him,girls)))))
# ::size0 4
# ::size1 5
# ::id deep_recursion_3s_14
# ::suppl deep_recursion_3s_14
(u_7289 / think-01
        :ARG0 (r / i)
        :ARG1 (u_7288 / hear-01
                      :ARG0 (d / doctor
                               :ARG1-of (u_7284 / hate-01
                                                :ARG0 (u_7287 / girl)
                                                :ARG1-of (u_7285 / mention-01
                                                                 :ARG0 (m / lawyer)
                                                                 :ARG1-of (u_7286 / mention-01
                                                                                  :ARG0 (u_7290 / we)
                                                                                  :ARG1-of u_7288))))))

# ::snt The astronaut knew that the boys heard that I said that we hated him, the astronaut
# ::tree TP_resolve_coref(knew_resolve_coref,astronaut,TP_CP_coref(heard_coref,boys,TP_CP_coref(said_coref,I,TP_tr(hated_him,we))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_3s_15
# ::suppl deep_recursion_3s_15
(u_7296 / know-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7291 / hate-01
                                  :ARG0 (u_7293 / we)
                                  :ARG1-of (u_7292 / say-01
                                                   :ARG0 (u_7295 / i)
                                                   :ARG1-of (u_7294 / hear-01
                                                                    :ARG0 (r / boy)
                                                                    :ARG1-of u_7296)))))

# ::snt The lawyer knew that the boys mentioned that the girls said that the kids liked her, the lawyer
# ::tree TP_resolve_coref(knew_resolve_coref,lawyer,TP_CP_coref(mentioned_coref,boys,TP_CP_coref(said_coref,girls,TP_tr(liked_her,kids))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_3s_16
# ::suppl deep_recursion_3s_16
(u_7302 / know-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7297 / like-01
                                  :ARG0 (u_7299 / kid)
                                  :ARG1-of (u_7298 / say-01
                                                   :ARG0 (u_7301 / girl)
                                                   :ARG1-of (u_7300 / mention-01
                                                                    :ARG0 (r / boy)
                                                                    :ARG1-of u_7302)))))

# ::snt The astronaut mentioned that the kids said that you knew that the girls hated her, the astronaut
# ::tree TP_resolve_coref(mentioned_resolve_coref,astronaut,TP_CP_coref(said_coref,kids,TP_CP_coref(knew_coref,you,TP_tr(hated_her,girls))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_3s_17
# ::suppl deep_recursion_3s_17
(u_7308 / mention-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7303 / hate-01
                                  :ARG0 (u_7305 / girl)
                                  :ARG1-of (u_7304 / know-01
                                                   :ARG0 (u_7307 / you)
                                                   :ARG1-of (u_7306 / say-01
                                                                    :ARG0 (r / kid)
                                                                    :ARG1-of u_7308)))))

# ::snt The soldier said that the boys heard that the astronaut hated him, the soldier
# ::tree TP_resolve_coref(said_resolve_coref,soldier,TP_CP_coref(heard_coref,boys,TP_tr(hated_him,make_singular(astronaut))))
# ::size0 4
# ::size1 4
# ::id deep_recursion_3s_18
# ::suppl deep_recursion_3s_18
(u_7311 / say-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7310 / hate-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_7309 / hear-01
                                                   :ARG0 (r / boy)
                                                   :ARG1-of u_7311))))

# ::snt I mentioned that the lawyer said that the girls said that the kids knew that we hated her, the lawyer
# ::tree TP_CP(mentioned,I,TP_resolve_coref(said_resolve_coref,lawyer,TP_CP_coref(said_coref,girls,TP_CP_coref(knew_coref,kids,TP_tr(hated_her,we)))))
# ::size0 4
# ::size1 5
# ::id deep_recursion_3s_19
# ::suppl deep_recursion_3s_19
(u_7318 / mention-01
        :ARG0 (r / i)
        :ARG1 (u_7317 / say-01
                      :ARG0 (m / lawyer
                               :ARG1-of (u_7312 / hate-01
                                                :ARG0 (u_7314 / we)
                                                :ARG1-of (u_7313 / know-01
                                                                 :ARG0 (u_7316 / kid)
                                                                 :ARG1-of (u_7315 / say-01
                                                                                  :ARG0 (u_7319 / girl)
                                                                                  :ARG1-of u_7317))))))

# ::snt The lawyer heard that the kids believed that the astronaut said that the boys said that you hated her, the lawyer
# ::tree TP_resolve_coref(heard_resolve_coref,lawyer,TP_CP_coref(believed_coref,kids,TP_CP_coref(said_coref,make_singular(astronaut),TP_CP_coref(said_coref,boys,TP_tr(hated_her,you)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_3s_20
# ::suppl deep_recursion_3s_20
(u_7326 / hear-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7320 / hate-01
                                  :ARG0 (u_7322 / you)
                                  :ARG1-of (u_7321 / say-01
                                                   :ARG0 (u_7325 / boy)
                                                   :ARG1-of (u_7323 / say-01
                                                                    :ARG0 (a / astronaut)
                                                                    :ARG1-of (u_7324 / believe-01
                                                                                     :ARG0 (r / kid)
                                                                                     :ARG1-of u_7326))))))

# ::snt The soldier believed that I knew that the boys mentioned that we heard that the girls liked her, the soldier
# ::tree TP_resolve_coref(believed_resolve_coref,soldier,TP_CP_coref(knew_coref,I,TP_CP_coref(mentioned_coref,boys,TP_CP_coref(heard_coref,we,TP_tr(liked_her,girls)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_3s_21
# ::suppl deep_recursion_3s_21
(u_7334 / believe-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7327 / like-01
                                  :ARG0 (u_7329 / girl)
                                  :ARG1-of (u_7328 / hear-01
                                                   :ARG0 (u_7331 / we)
                                                   :ARG1-of (u_7330 / mention-01
                                                                    :ARG0 (u_7333 / boy)
                                                                    :ARG1-of (u_7332 / know-01
                                                                                     :ARG0 (r / i)
                                                                                     :ARG1-of u_7334))))))

# ::snt The lawyer thought that we said that the girls heard that the kids believed that I amused him, the lawyer
# ::tree TP_resolve_coref(thought_resolve_coref,lawyer,TP_CP_coref(said_coref,we,TP_CP_coref(heard_coref,girls,TP_CP_coref(believed_coref,kids,TP_tr(amused_him,I)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_3s_22
# ::suppl deep_recursion_3s_22
(u_7342 / think-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7335 / amuse-01
                                  :ARG0 (u_7337 / i)
                                  :ARG1-of (u_7336 / believe-01
                                                   :ARG0 (u_7339 / kid)
                                                   :ARG1-of (u_7338 / hear-01
                                                                    :ARG0 (u_7341 / girl)
                                                                    :ARG1-of (u_7340 / say-01
                                                                                     :ARG0 (r / we)
                                                                                     :ARG1-of u_7342))))))

# ::snt The lawyer believed that the astronaut heard that we knew that you believed that the boys liked her, the lawyer
# ::tree TP_resolve_coref(believed_resolve_coref,lawyer,TP_CP_coref(heard_coref,make_singular(astronaut),TP_CP_coref(knew_coref,we,TP_CP_coref(believed_coref,you,TP_tr(liked_her,boys)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_3s_23
# ::suppl deep_recursion_3s_23
(u_7349 / believe-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7343 / like-01
                                  :ARG0 (u_7345 / boy)
                                  :ARG1-of (u_7344 / believe-01
                                                   :ARG0 (u_7347 / you)
                                                   :ARG1-of (u_7346 / know-01
                                                                    :ARG0 (r / we)
                                                                    :ARG1-of (u_7348 / hear-01
                                                                                     :ARG0 (a / astronaut)
                                                                                     :ARG1-of u_7349))))))

# ::snt The astronaut said that you said that the girls believed that I heard that we hated him, the astronaut
# ::tree TP_resolve_coref(said_resolve_coref,astronaut,TP_CP_coref(said_coref,you,TP_CP_coref(believed_coref,girls,TP_CP_coref(heard_coref,I,TP_tr(hated_him,we)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_3s_24
# ::suppl deep_recursion_3s_24
(u_7357 / say-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7350 / hate-01
                                  :ARG0 (u_7352 / we)
                                  :ARG1-of (u_7351 / hear-01
                                                   :ARG0 (u_7354 / i)
                                                   :ARG1-of (u_7353 / believe-01
                                                                    :ARG0 (u_7356 / girl)
                                                                    :ARG1-of (u_7355 / say-01
                                                                                     :ARG0 (r / you)
                                                                                     :ARG1-of u_7357))))))

# ::snt The soldier thought that the lawyer knew that the boys heard that the kids said that we saw her, the soldier
# ::tree TP_resolve_coref(thought_resolve_coref,soldier,TP_CP_coref(knew_coref,make_singular(lawyer),TP_CP_coref(heard_coref,boys,TP_CP_coref(said_coref,kids,TP_tr(saw_her,we)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_3s_25
# ::suppl deep_recursion_3s_25
(u_7364 / think-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7358 / see-01
                                  :ARG0 (u_7360 / we)
                                  :ARG1-of (u_7359 / say-01
                                                   :ARG0 (u_7362 / kid)
                                                   :ARG1-of (u_7361 / hear-01
                                                                    :ARG0 (r / boy)
                                                                    :ARG1-of (u_7363 / know-01
                                                                                     :ARG0 (m / lawyer)
                                                                                     :ARG1-of u_7364))))))

# ::snt The doctor believed that the boys said that the girls believed that the lawyer amused him, the doctor
# ::tree TP_resolve_coref(believed_resolve_coref,doctor,TP_CP_coref(said_coref,boys,TP_CP_coref(believed_coref,girls,TP_tr(amused_him,make_singular(lawyer)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_3s_26
# ::suppl deep_recursion_3s_26
(u_7369 / believe-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7366 / amuse-01
                                  :ARG0 (m / lawyer)
                                  :ARG1-of (u_7365 / believe-01
                                                   :ARG0 (u_7368 / girl)
                                                   :ARG1-of (u_7367 / say-01
                                                                    :ARG0 (r / boy)
                                                                    :ARG1-of u_7369)))))

# ::snt I said that the astronaut mentioned that the doctor mentioned that the girls thought that we mentioned that the kids amused him, the astronaut
# ::tree TP_CP(said,I,TP_resolve_coref(mentioned_resolve_coref,astronaut,TP_CP_coref(mentioned_coref,make_singular(doctor),TP_CP_coref(thought_coref,girls,TP_CP_coref(mentioned_coref,we,TP_tr(amused_him,kids))))))
# ::size0 5
# ::size1 6
# ::id deep_recursion_3s_27
# ::suppl deep_recursion_3s_27
(u_7377 / say-01
        :ARG0 (r / i)
        :ARG1 (u_7376 / mention-01
                      :ARG0 (a / astronaut
                               :ARG1-of (u_7370 / amuse-01
                                                :ARG0 (u_7372 / kid)
                                                :ARG1-of (u_7371 / mention-01
                                                                 :ARG0 (u_7374 / we)
                                                                 :ARG1-of (u_7373 / think-01
                                                                                  :ARG0 (u_7378 / girl)
                                                                                  :ARG1-of (u_7375 / mention-01
                                                                                                   :ARG0 (d / doctor)
                                                                                                   :ARG1-of u_7376)))))))

# ::snt The doctor thought that the soldier said that the lawyer heard that the kids believed that I knew that the girls hated him, the soldier
# ::tree TP_CP(thought,make_singular(doctor),TP_resolve_coref(said_resolve_coref,soldier,TP_CP_coref(heard_coref,make_singular(lawyer),TP_CP_coref(believed_coref,kids,TP_CP_coref(knew_coref,I,TP_tr(hated_him,girls))))))
# ::size0 5
# ::size1 6
# ::id deep_recursion_3s_28
# ::suppl deep_recursion_3s_28
(u_7386 / think-01
        :ARG0 (d / doctor)
        :ARG1 (u_7385 / say-01
                      :ARG0 (s / soldier
                               :ARG1-of (u_7379 / hate-01
                                                :ARG0 (u_7381 / girl)
                                                :ARG1-of (u_7380 / know-01
                                                                 :ARG0 (u_7383 / i)
                                                                 :ARG1-of (u_7382 / believe-01
                                                                                  :ARG0 (r / kid)
                                                                                  :ARG1-of (u_7384 / hear-01
                                                                                                   :ARG0 (m / lawyer)
                                                                                                   :ARG1-of u_7385)))))))

# ::snt The astronaut heard that you knew that the lawyer mentioned that the boys said that I hated her, the astronaut
# ::tree TP_resolve_coref(heard_resolve_coref,astronaut,TP_CP_coref(knew_coref,you,TP_CP_coref(mentioned_coref,make_singular(lawyer),TP_CP_coref(said_coref,boys,TP_tr(hated_her,I)))))
# ::size0 5
# ::size1 5
# ::id deep_recursion_3s_29
# ::suppl deep_recursion_3s_29
(u_7394 / hear-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7388 / hate-01
                                  :ARG0 (u_7390 / i)
                                  :ARG1-of (u_7389 / say-01
                                                   :ARG0 (u_7393 / boy)
                                                   :ARG1-of (u_7391 / mention-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_7392 / know-01
                                                                                     :ARG0 (r / you)
                                                                                     :ARG1-of u_7394))))))

# ::snt The doctor thought that the boys knew that I thought that the soldier said that the astronaut liked him, the doctor
# ::tree TP_resolve_coref(thought_resolve_coref,doctor,TP_CP_coref(knew_coref,boys,TP_CP_coref(thought_coref,I,TP_CP_coref(said_coref,make_singular(soldier),TP_tr(liked_him,make_singular(astronaut))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_3s_30
# ::suppl deep_recursion_3s_30
(u_7402 / think-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7398 / like-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_7395 / say-01
                                                   :ARG0 (s / soldier)
                                                   :ARG1-of (u_7396 / think-01
                                                                    :ARG0 (u_7401 / i)
                                                                    :ARG1-of (u_7399 / know-01
                                                                                     :ARG0 (r / boy)
                                                                                     :ARG1-of u_7402))))))

# ::snt The girls said that the doctor heard that the lawyer said that you believed that I mentioned that the boys knew that we liked her, the doctor
# ::tree TP_CP(said,girls,TP_resolve_coref(heard_resolve_coref,doctor,TP_CP_coref(said_coref,make_singular(lawyer),TP_CP_coref(believed_coref,you,TP_CP_coref(mentioned_coref,I,TP_CP_coref(knew_coref,boys,TP_tr(liked_her,we)))))))
# ::size0 6
# ::size1 7
# ::id deep_recursion_3s_31
# ::suppl deep_recursion_3s_31
(u_7412 / say-01
        :ARG0 (r / girl)
        :ARG1 (u_7411 / hear-01
                      :ARG0 (d / doctor
                               :ARG1-of (u_7403 / like-01
                                                :ARG0 (u_7405 / we)
                                                :ARG1-of (u_7404 / know-01
                                                                 :ARG0 (u_7407 / boy)
                                                                 :ARG1-of (u_7406 / mention-01
                                                                                  :ARG0 (u_7409 / i)
                                                                                  :ARG1-of (u_7408 / believe-01
                                                                                                   :ARG0 (u_7413 / you)
                                                                                                   :ARG1-of (u_7410 / say-01
                                                                                                                    :ARG0 (m / lawyer)
                                                                                                                    :ARG1-of u_7411))))))))

# ::snt We thought that the astronaut mentioned that I mentioned that the lawyer thought that the boys heard that the girls mentioned that the kids said that the soldier hated him, the lawyer
# ::tree TP_CP(thought,we,TP_CP(mentioned,make_singular(astronaut),TP_CP(mentioned,I,TP_resolve_coref(thought_resolve_coref,lawyer,TP_CP_coref(heard_coref,boys,TP_CP_coref(mentioned_coref,girls,TP_CP_coref(said_coref,kids,TP_tr(hated_him,make_singular(soldier)))))))))
# ::size0 6
# ::size1 9
# ::id deep_recursion_3s_32
# ::suppl deep_recursion_3s_32
(u_7429 / think-01
        :ARG0 (r / we)
        :ARG1 (u_7427 / mention-01
                      :ARG0 (a / astronaut)
                      :ARG1 (u_7424 / mention-01
                                    :ARG0 (u_7431 / i)
                                    :ARG1 (u_7423 / think-01
                                                  :ARG0 (m / lawyer
                                                           :ARG1-of (u_7416 / hate-01
                                                                            :ARG0 (s / soldier)
                                                                            :ARG1-of (u_7414 / say-01
                                                                                             :ARG0 (u_7419 / kid)
                                                                                             :ARG1-of (u_7417 / mention-01
                                                                                                              :ARG0 (u_7422 / girl)
                                                                                                              :ARG1-of (u_7420 / hear-01
                                                                                                                               :ARG0 (u_7426 / boy)
                                                                                                                               :ARG1-of u_7423)))))))))

# ::snt The boys believed that the soldier thought that the doctor believed that I thought that you knew that the lawyer saw her, the soldier
# ::tree TP_CP(believed,boys,TP_resolve_coref(thought_resolve_coref,soldier,TP_CP_coref(believed_coref,make_singular(doctor),TP_CP_coref(thought_coref,I,TP_CP_coref(knew_coref,you,TP_tr(saw_her,make_singular(lawyer)))))))
# ::size0 6
# ::size1 7
# ::id deep_recursion_3s_33
# ::suppl deep_recursion_3s_33
(u_7438 / believe-01
        :ARG0 (r / boy)
        :ARG1 (u_7437 / think-01
                      :ARG0 (s / soldier
                               :ARG1-of (u_7433 / see-01
                                                :ARG0 (m / lawyer)
                                                :ARG1-of (u_7432 / know-01
                                                                 :ARG0 (u_7435 / you)
                                                                 :ARG1-of (u_7434 / think-01
                                                                                  :ARG0 (u_7440 / i)
                                                                                  :ARG1-of (u_7436 / believe-01
                                                                                                   :ARG0 (d / doctor)
                                                                                                   :ARG1-of u_7437)))))))

# ::snt The lawyer said that I said that the girls heard that we knew that the kids said that you saw her, the lawyer
# ::tree TP_resolve_coref(said_resolve_coref,lawyer,TP_CP_coref(said_coref,I,TP_CP_coref(heard_coref,girls,TP_CP_coref(knew_coref,we,TP_CP_coref(said_coref,kids,TP_tr(saw_her,you))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_3s_34
# ::suppl deep_recursion_3s_34
(u_7450 / say-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7441 / see-01
                                  :ARG0 (u_7443 / you)
                                  :ARG1-of (u_7442 / say-01
                                                   :ARG0 (u_7445 / kid)
                                                   :ARG1-of (u_7444 / know-01
                                                                    :ARG0 (u_7447 / we)
                                                                    :ARG1-of (u_7446 / hear-01
                                                                                     :ARG0 (u_7449 / girl)
                                                                                     :ARG1-of (u_7448 / say-01
                                                                                                      :ARG0 (r / i)
                                                                                                      :ARG1-of u_7450)))))))

# ::snt The astronaut knew that I said that the kids knew that the lawyer mentioned that the boys said that the girls hated her, the astronaut
# ::tree TP_resolve_coref(knew_resolve_coref,astronaut,TP_CP_coref(said_coref,I,TP_CP_coref(knew_coref,kids,TP_CP_coref(mentioned_coref,make_singular(lawyer),TP_CP_coref(said_coref,boys,TP_tr(hated_her,girls))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_3s_35
# ::suppl deep_recursion_3s_35
(u_7459 / know-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7451 / hate-01
                                  :ARG0 (u_7453 / girl)
                                  :ARG1-of (u_7452 / say-01
                                                   :ARG0 (u_7456 / boy)
                                                   :ARG1-of (u_7454 / mention-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_7455 / know-01
                                                                                     :ARG0 (u_7458 / kid)
                                                                                     :ARG1-of (u_7457 / say-01
                                                                                                      :ARG0 (r / i)
                                                                                                      :ARG1-of u_7459)))))))

# ::snt The girls knew that the doctor heard that the soldier knew that the boys said that the kids mentioned that you heard that we amused her, the doctor
# ::tree TP_CP(knew,girls,TP_resolve_coref(heard_resolve_coref,doctor,TP_CP_coref(knew_coref,make_singular(soldier),TP_CP_coref(said_coref,boys,TP_CP_coref(mentioned_coref,kids,TP_CP_coref(heard_coref,you,TP_tr(amused_her,we)))))))
# ::size0 6
# ::size1 7
# ::id deep_recursion_3s_36
# ::suppl deep_recursion_3s_36
(u_7469 / know-01
        :ARG0 (r / girl)
        :ARG1 (u_7468 / hear-01
                      :ARG0 (d / doctor
                               :ARG1-of (u_7460 / amuse-01
                                                :ARG0 (u_7462 / we)
                                                :ARG1-of (u_7461 / hear-01
                                                                 :ARG0 (u_7464 / you)
                                                                 :ARG1-of (u_7463 / mention-01
                                                                                  :ARG0 (u_7466 / kid)
                                                                                  :ARG1-of (u_7465 / say-01
                                                                                                   :ARG0 (u_7471 / boy)
                                                                                                   :ARG1-of (u_7467 / know-01
                                                                                                                    :ARG0 (s / soldier)
                                                                                                                    :ARG1-of u_7468))))))))

# ::snt The doctor heard that the astronaut mentioned that the boys heard that you thought that the kids believed that I liked her, the doctor
# ::tree TP_resolve_coref(heard_resolve_coref,doctor,TP_CP_coref(mentioned_coref,make_singular(astronaut),TP_CP_coref(heard_coref,boys,TP_CP_coref(thought_coref,you,TP_CP_coref(believed_coref,kids,TP_tr(liked_her,I))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_3s_37
# ::suppl deep_recursion_3s_37
(u_7480 / hear-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7472 / like-01
                                  :ARG0 (u_7474 / i)
                                  :ARG1-of (u_7473 / believe-01
                                                   :ARG0 (u_7476 / kid)
                                                   :ARG1-of (u_7475 / think-01
                                                                    :ARG0 (u_7478 / you)
                                                                    :ARG1-of (u_7477 / hear-01
                                                                                     :ARG0 (r / boy)
                                                                                     :ARG1-of (u_7479 / mention-01
                                                                                                      :ARG0 (a / astronaut)
                                                                                                      :ARG1-of u_7480)))))))

# ::snt The doctor heard that the kids believed that the girls said that you thought that the lawyer hated her, the doctor
# ::tree TP_resolve_coref(heard_resolve_coref,doctor,TP_CP_coref(believed_coref,kids,TP_CP_coref(said_coref,girls,TP_CP_coref(thought_coref,you,TP_tr(hated_her,make_singular(lawyer))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_3s_38
# ::suppl deep_recursion_3s_38
(u_7487 / hear-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7482 / hate-01
                                  :ARG0 (m / lawyer)
                                  :ARG1-of (u_7481 / think-01
                                                   :ARG0 (u_7484 / you)
                                                   :ARG1-of (u_7483 / say-01
                                                                    :ARG0 (u_7486 / girl)
                                                                    :ARG1-of (u_7485 / believe-01
                                                                                     :ARG0 (r / kid)
                                                                                     :ARG1-of u_7487))))))

# ::snt The doctor heard that I knew that the kids said that the astronaut believed that we thought that the girls saw her, the doctor
# ::tree TP_resolve_coref(heard_resolve_coref,doctor,TP_CP_coref(knew_coref,I,TP_CP_coref(said_coref,kids,TP_CP_coref(believed_coref,make_singular(astronaut),TP_CP_coref(thought_coref,we,TP_tr(saw_her,girls))))))
# ::size0 6
# ::size1 6
# ::id deep_recursion_3s_39
# ::suppl deep_recursion_3s_39
(u_7496 / hear-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7488 / see-01
                                  :ARG0 (u_7490 / girl)
                                  :ARG1-of (u_7489 / think-01
                                                   :ARG0 (u_7493 / we)
                                                   :ARG1-of (u_7491 / believe-01
                                                                    :ARG0 (a / astronaut)
                                                                    :ARG1-of (u_7492 / say-01
                                                                                     :ARG0 (u_7495 / kid)
                                                                                     :ARG1-of (u_7494 / know-01
                                                                                                      :ARG0 (r / i)
                                                                                                      :ARG1-of u_7496)))))))

# ::snt The soldier mentioned that the doctor mentioned that you believed that I heard that we believed that the lawyer believed that the girls amused him, the soldier
# ::tree TP_resolve_coref(mentioned_resolve_coref,soldier,TP_CP_coref(mentioned_coref,make_singular(doctor),TP_CP_coref(believed_coref,you,TP_CP_coref(heard_coref,I,TP_CP_coref(believed_coref,we,TP_CP_coref(believed_coref,make_singular(lawyer),TP_tr(amused_him,girls)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_3s_40
# ::suppl deep_recursion_3s_40
(u_7506 / mention-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7497 / amuse-01
                                  :ARG0 (u_7500 / girl)
                                  :ARG1-of (u_7498 / believe-01
                                                   :ARG0 (m / lawyer)
                                                   :ARG1-of (u_7499 / believe-01
                                                                    :ARG0 (u_7502 / we)
                                                                    :ARG1-of (u_7501 / hear-01
                                                                                     :ARG0 (u_7504 / i)
                                                                                     :ARG1-of (u_7503 / believe-01
                                                                                                      :ARG0 (r / you)
                                                                                                      :ARG1-of (u_7505 / mention-01
                                                                                                                       :ARG0 (d / doctor)
                                                                                                                       :ARG1-of u_7506))))))))

# ::snt The boys knew that the kids heard that the lawyer thought that the girls said that I knew that you thought that we heard that the soldier saw her, the lawyer
# ::tree TP_CP(knew,boys,TP_CP(heard,kids,TP_resolve_coref(thought_resolve_coref,lawyer,TP_CP_coref(said_coref,girls,TP_CP_coref(knew_coref,I,TP_CP_coref(thought_coref,you,TP_CP_coref(heard_coref,we,TP_tr(saw_her,make_singular(soldier)))))))))
# ::size0 7
# ::size1 9
# ::id deep_recursion_3s_41
# ::suppl deep_recursion_3s_41
(u_7523 / know-01
        :ARG0 (r / boy)
        :ARG1 (u_7520 / hear-01
                      :ARG0 (u_7525 / kid)
                      :ARG1 (u_7519 / think-01
                                    :ARG0 (m / lawyer
                                             :ARG1-of (u_7509 / see-01
                                                              :ARG0 (s / soldier)
                                                              :ARG1-of (u_7507 / hear-01
                                                                               :ARG0 (u_7512 / we)
                                                                               :ARG1-of (u_7510 / think-01
                                                                                                :ARG0 (u_7515 / you)
                                                                                                :ARG1-of (u_7513 / know-01
                                                                                                                 :ARG0 (u_7518 / i)
                                                                                                                 :ARG1-of (u_7516 / say-01
                                                                                                                                  :ARG0 (u_7522 / girl)
                                                                                                                                  :ARG1-of u_7519)))))))))

# ::snt The astronaut knew that I heard that you mentioned that we heard that the kids thought that the boys believed that the girls hated her, the astronaut
# ::tree TP_resolve_coref(knew_resolve_coref,astronaut,TP_CP_coref(heard_coref,I,TP_CP_coref(mentioned_coref,you,TP_CP_coref(heard_coref,we,TP_CP_coref(thought_coref,kids,TP_CP_coref(believed_coref,boys,TP_tr(hated_her,girls)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_3s_42
# ::suppl deep_recursion_3s_42
(u_7537 / know-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7526 / hate-01
                                  :ARG0 (u_7528 / girl)
                                  :ARG1-of (u_7527 / believe-01
                                                   :ARG0 (u_7530 / boy)
                                                   :ARG1-of (u_7529 / think-01
                                                                    :ARG0 (u_7532 / kid)
                                                                    :ARG1-of (u_7531 / hear-01
                                                                                     :ARG0 (u_7534 / we)
                                                                                     :ARG1-of (u_7533 / mention-01
                                                                                                      :ARG0 (u_7536 / you)
                                                                                                      :ARG1-of (u_7535 / hear-01
                                                                                                                       :ARG0 (r / i)
                                                                                                                       :ARG1-of u_7537))))))))

# ::snt The astronaut heard that you mentioned that the kids believed that the girls thought that I knew that the soldier saw him, the astronaut
# ::tree TP_resolve_coref(heard_resolve_coref,astronaut,TP_CP_coref(mentioned_coref,you,TP_CP_coref(believed_coref,kids,TP_CP_coref(thought_coref,girls,TP_CP_coref(knew_coref,I,TP_tr(saw_him,make_singular(soldier)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_3s_43
# ::suppl deep_recursion_3s_43
(u_7550 / hear-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7540 / see-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_7538 / know-01
                                                   :ARG0 (u_7543 / i)
                                                   :ARG1-of (u_7541 / think-01
                                                                    :ARG0 (u_7546 / girl)
                                                                    :ARG1-of (u_7544 / believe-01
                                                                                     :ARG0 (u_7549 / kid)
                                                                                     :ARG1-of (u_7547 / mention-01
                                                                                                      :ARG0 (r / you)
                                                                                                      :ARG1-of u_7550)))))))

# ::snt The lawyer knew that the soldier believed that I heard that we thought that the boys heard that you thought that the doctor liked him, the soldier
# ::tree TP_CP(knew,make_singular(lawyer),TP_resolve_coref(believed_resolve_coref,soldier,TP_CP_coref(heard_coref,I,TP_CP_coref(thought_coref,we,TP_CP_coref(heard_coref,boys,TP_CP_coref(thought_coref,you,TP_tr(liked_him,make_singular(doctor))))))))
# ::size0 7
# ::size1 8
# ::id deep_recursion_3s_44
# ::suppl deep_recursion_3s_44
(u_7560 / know-01
        :ARG0 (m / lawyer)
        :ARG1 (u_7559 / believe-01
                      :ARG0 (s / soldier
                               :ARG1-of (u_7552 / like-01
                                                :ARG0 (d / doctor)
                                                :ARG1-of (u_7551 / think-01
                                                                 :ARG0 (u_7554 / you)
                                                                 :ARG1-of (u_7553 / hear-01
                                                                                  :ARG0 (u_7556 / boy)
                                                                                  :ARG1-of (u_7555 / think-01
                                                                                                   :ARG0 (u_7558 / we)
                                                                                                   :ARG1-of (u_7557 / hear-01
                                                                                                                    :ARG0 (r / i)
                                                                                                                    :ARG1-of u_7559))))))))

# ::snt The boys believed that the soldier mentioned that the girls said that we thought that you thought that the kids thought that the doctor knew that I liked her, the soldier
# ::tree TP_CP(believed,boys,TP_resolve_coref(mentioned_resolve_coref,soldier,TP_CP_coref(said_coref,girls,TP_CP_coref(thought_coref,we,TP_CP_coref(thought_coref,you,TP_CP_coref(thought_coref,kids,TP_CP_coref(knew_coref,make_singular(doctor),TP_tr(liked_her,I))))))))
# ::size0 7
# ::size1 8
# ::id deep_recursion_3s_45
# ::suppl deep_recursion_3s_45
(u_7573 / believe-01
        :ARG0 (r / boy)
        :ARG1 (u_7572 / mention-01
                      :ARG0 (s / soldier
                               :ARG1-of (u_7562 / like-01
                                                :ARG0 (u_7565 / i)
                                                :ARG1-of (u_7563 / know-01
                                                                 :ARG0 (d / doctor)
                                                                 :ARG1-of (u_7564 / think-01
                                                                                  :ARG0 (u_7567 / kid)
                                                                                  :ARG1-of (u_7566 / think-01
                                                                                                   :ARG0 (u_7569 / you)
                                                                                                   :ARG1-of (u_7568 / think-01
                                                                                                                    :ARG0 (u_7571 / we)
                                                                                                                    :ARG1-of (u_7570 / say-01
                                                                                                                                     :ARG0 (u_7575 / girl)
                                                                                                                                     :ARG1-of u_7572)))))))))

# ::snt The doctor believed that the soldier heard that the girls said that the kids believed that I mentioned that the lawyer said that the boys said that we liked her, the soldier
# ::tree TP_CP(believed,make_singular(doctor),TP_resolve_coref(heard_resolve_coref,soldier,TP_CP_coref(said_coref,girls,TP_CP_coref(believed_coref,kids,TP_CP_coref(mentioned_coref,I,TP_CP_coref(said_coref,make_singular(lawyer),TP_CP_coref(said_coref,boys,TP_tr(liked_her,we))))))))
# ::size0 7
# ::size1 8
# ::id deep_recursion_3s_46
# ::suppl deep_recursion_3s_46
(u_7587 / believe-01
        :ARG0 (d / doctor)
        :ARG1 (u_7586 / hear-01
                      :ARG0 (s / soldier
                               :ARG1-of (u_7576 / like-01
                                                :ARG0 (u_7578 / we)
                                                :ARG1-of (u_7577 / say-01
                                                                 :ARG0 (u_7581 / boy)
                                                                 :ARG1-of (u_7579 / say-01
                                                                                  :ARG0 (m / lawyer)
                                                                                  :ARG1-of (u_7580 / mention-01
                                                                                                   :ARG0 (u_7583 / i)
                                                                                                   :ARG1-of (u_7582 / believe-01
                                                                                                                    :ARG0 (u_7585 / kid)
                                                                                                                    :ARG1-of (u_7584 / say-01
                                                                                                                                     :ARG0 (r / girl)
                                                                                                                                     :ARG1-of u_7586)))))))))

# ::snt The soldier said that the boys said that the kids believed that you said that I thought that the doctor amused her, the soldier
# ::tree TP_resolve_coref(said_resolve_coref,soldier,TP_CP_coref(said_coref,boys,TP_CP_coref(believed_coref,kids,TP_CP_coref(said_coref,you,TP_CP_coref(thought_coref,I,TP_tr(amused_her,make_singular(doctor)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_3s_47
# ::suppl deep_recursion_3s_47
(u_7597 / say-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7590 / amuse-01
                                  :ARG0 (d / doctor)
                                  :ARG1-of (u_7589 / think-01
                                                   :ARG0 (u_7592 / i)
                                                   :ARG1-of (u_7591 / say-01
                                                                    :ARG0 (u_7594 / you)
                                                                    :ARG1-of (u_7593 / believe-01
                                                                                     :ARG0 (u_7596 / kid)
                                                                                     :ARG1-of (u_7595 / say-01
                                                                                                      :ARG0 (r / boy)
                                                                                                      :ARG1-of u_7597)))))))

# ::snt The lawyer heard that the girls said that the doctor said that the kids said that we heard that I knew that the boys saw her, the lawyer
# ::tree TP_resolve_coref(heard_resolve_coref,lawyer,TP_CP_coref(said_coref,girls,TP_CP_coref(said_coref,make_singular(doctor),TP_CP_coref(said_coref,kids,TP_CP_coref(heard_coref,we,TP_CP_coref(knew_coref,I,TP_tr(saw_her,boys)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_3s_48
# ::suppl deep_recursion_3s_48
(u_7608 / hear-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7598 / see-01
                                  :ARG0 (u_7600 / boy)
                                  :ARG1-of (u_7599 / know-01
                                                   :ARG0 (u_7602 / i)
                                                   :ARG1-of (u_7601 / hear-01
                                                                    :ARG0 (u_7604 / we)
                                                                    :ARG1-of (u_7603 / say-01
                                                                                     :ARG0 (u_7607 / kid)
                                                                                     :ARG1-of (u_7605 / say-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_7606 / say-01
                                                                                                                       :ARG0 (r / girl)
                                                                                                                       :ARG1-of u_7608))))))))

# ::snt The lawyer heard that the astronaut said that the kids believed that the boys knew that you heard that the doctor hated him, the lawyer
# ::tree TP_resolve_coref(heard_resolve_coref,lawyer,TP_CP_coref(said_coref,make_singular(astronaut),TP_CP_coref(believed_coref,kids,TP_CP_coref(knew_coref,boys,TP_CP_coref(heard_coref,you,TP_tr(hated_him,make_singular(doctor)))))))
# ::size0 7
# ::size1 7
# ::id deep_recursion_3s_49
# ::suppl deep_recursion_3s_49
(u_7616 / hear-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7610 / hate-01
                                  :ARG0 (d / doctor)
                                  :ARG1-of (u_7609 / hear-01
                                                   :ARG0 (u_7612 / you)
                                                   :ARG1-of (u_7611 / know-01
                                                                    :ARG0 (u_7614 / boy)
                                                                    :ARG1-of (u_7613 / believe-01
                                                                                     :ARG0 (r / kid)
                                                                                     :ARG1-of (u_7615 / say-01
                                                                                                      :ARG0 (a / astronaut)
                                                                                                      :ARG1-of u_7616)))))))

# ::snt The soldier heard that the astronaut heard that we heard that the girls said that the lawyer knew that the kids said that you believed that the doctor liked him, the astronaut
# ::tree TP_CP(heard,make_singular(soldier),TP_resolve_coref(heard_resolve_coref,astronaut,TP_CP_coref(heard_coref,we,TP_CP_coref(said_coref,girls,TP_CP_coref(knew_coref,make_singular(lawyer),TP_CP_coref(said_coref,kids,TP_CP_coref(believed_coref,you,TP_tr(liked_him,make_singular(doctor)))))))))
# ::size0 8
# ::size1 9
# ::id deep_recursion_3s_50
# ::suppl deep_recursion_3s_50
(u_7627 / hear-01
        :ARG0 (s / soldier)
        :ARG1 (u_7626 / hear-01
                      :ARG0 (a / astronaut
                               :ARG1-of (u_7618 / like-01
                                                :ARG0 (d / doctor)
                                                :ARG1-of (u_7617 / believe-01
                                                                 :ARG0 (u_7620 / you)
                                                                 :ARG1-of (u_7619 / say-01
                                                                                  :ARG0 (u_7623 / kid)
                                                                                  :ARG1-of (u_7621 / know-01
                                                                                                   :ARG0 (m / lawyer)
                                                                                                   :ARG1-of (u_7622 / say-01
                                                                                                                    :ARG0 (u_7625 / girl)
                                                                                                                    :ARG1-of (u_7624 / hear-01
                                                                                                                                     :ARG0 (r / we)
                                                                                                                                     :ARG1-of u_7626)))))))))

# ::snt The lawyer mentioned that the soldier knew that the boys thought that the girls knew that the doctor heard that the kids mentioned that you knew that we hated her, the lawyer
# ::tree TP_resolve_coref(mentioned_resolve_coref,lawyer,TP_CP_coref(knew_coref,make_singular(soldier),TP_CP_coref(thought_coref,boys,TP_CP_coref(knew_coref,girls,TP_CP_coref(heard_coref,make_singular(doctor),TP_CP_coref(mentioned_coref,kids,TP_CP_coref(knew_coref,you,TP_tr(hated_her,we))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_3s_51
# ::suppl deep_recursion_3s_51
(u_7639 / mention-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7628 / hate-01
                                  :ARG0 (u_7630 / we)
                                  :ARG1-of (u_7629 / know-01
                                                   :ARG0 (u_7632 / you)
                                                   :ARG1-of (u_7631 / mention-01
                                                                    :ARG0 (u_7635 / kid)
                                                                    :ARG1-of (u_7633 / hear-01
                                                                                     :ARG0 (d / doctor)
                                                                                     :ARG1-of (u_7634 / know-01
                                                                                                      :ARG0 (u_7637 / girl)
                                                                                                      :ARG1-of (u_7636 / think-01
                                                                                                                       :ARG0 (r / boy)
                                                                                                                       :ARG1-of (u_7638 / know-01
                                                                                                                                        :ARG0 (s / soldier)
                                                                                                                                        :ARG1-of u_7639)))))))))

# ::snt The lawyer heard that the soldier said that I believed that the boys knew that the kids knew that we believed that the astronaut knew that the girls saw her, the lawyer
# ::tree TP_resolve_coref(heard_resolve_coref,lawyer,TP_CP_coref(said_coref,make_singular(soldier),TP_CP_coref(believed_coref,I,TP_CP_coref(knew_coref,boys,TP_CP_coref(knew_coref,kids,TP_CP_coref(believed_coref,we,TP_CP_coref(knew_coref,make_singular(astronaut),TP_tr(saw_her,girls))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_3s_52
# ::suppl deep_recursion_3s_52
(u_7651 / hear-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7640 / see-01
                                  :ARG0 (u_7643 / girl)
                                  :ARG1-of (u_7641 / know-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_7642 / believe-01
                                                                    :ARG0 (u_7645 / we)
                                                                    :ARG1-of (u_7644 / know-01
                                                                                     :ARG0 (u_7647 / kid)
                                                                                     :ARG1-of (u_7646 / know-01
                                                                                                      :ARG0 (u_7649 / boy)
                                                                                                      :ARG1-of (u_7648 / believe-01
                                                                                                                       :ARG0 (r / i)
                                                                                                                       :ARG1-of (u_7650 / say-01
                                                                                                                                        :ARG0 (s / soldier)
                                                                                                                                        :ARG1-of u_7651)))))))))

# ::snt The doctor thought that we thought that the girls mentioned that the soldier believed that the boys mentioned that I knew that the kids thought that you amused him, the doctor
# ::tree TP_resolve_coref(thought_resolve_coref,doctor,TP_CP_coref(thought_coref,we,TP_CP_coref(mentioned_coref,girls,TP_CP_coref(believed_coref,make_singular(soldier),TP_CP_coref(mentioned_coref,boys,TP_CP_coref(knew_coref,I,TP_CP_coref(thought_coref,kids,TP_tr(amused_him,you))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_3s_53
# ::suppl deep_recursion_3s_53
(u_7666 / think-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7652 / amuse-01
                                  :ARG0 (u_7654 / you)
                                  :ARG1-of (u_7653 / think-01
                                                   :ARG0 (u_7656 / kid)
                                                   :ARG1-of (u_7655 / know-01
                                                                    :ARG0 (u_7658 / i)
                                                                    :ARG1-of (u_7657 / mention-01
                                                                                     :ARG0 (u_7662 / boy)
                                                                                     :ARG1-of (u_7659 / believe-01
                                                                                                      :ARG0 (s / soldier)
                                                                                                      :ARG1-of (u_7660 / mention-01
                                                                                                                       :ARG0 (u_7665 / girl)
                                                                                                                       :ARG1-of (u_7663 / think-01
                                                                                                                                        :ARG0 (r / we)
                                                                                                                                        :ARG1-of u_7666)))))))))

# ::snt We thought that the lawyer said that the kids heard that I said that you heard that the girls mentioned that the boys thought that the doctor hated her, the lawyer
# ::tree TP_CP(thought,we,TP_resolve_coref(said_resolve_coref,lawyer,TP_CP_coref(heard_coref,kids,TP_CP_coref(said_coref,I,TP_CP_coref(heard_coref,you,TP_CP_coref(mentioned_coref,girls,TP_CP_coref(thought_coref,boys,TP_tr(hated_her,make_singular(doctor)))))))))
# ::size0 8
# ::size1 9
# ::id deep_recursion_3s_54
# ::suppl deep_recursion_3s_54
(u_7678 / think-01
        :ARG0 (r / we)
        :ARG1 (u_7677 / say-01
                      :ARG0 (m / lawyer
                               :ARG1-of (u_7668 / hate-01
                                                :ARG0 (d / doctor)
                                                :ARG1-of (u_7667 / think-01
                                                                 :ARG0 (u_7670 / boy)
                                                                 :ARG1-of (u_7669 / mention-01
                                                                                  :ARG0 (u_7672 / girl)
                                                                                  :ARG1-of (u_7671 / hear-01
                                                                                                   :ARG0 (u_7674 / you)
                                                                                                   :ARG1-of (u_7673 / say-01
                                                                                                                    :ARG0 (u_7676 / i)
                                                                                                                    :ARG1-of (u_7675 / hear-01
                                                                                                                                     :ARG0 (u_7679 / kid)
                                                                                                                                     :ARG1-of u_7677)))))))))

# ::snt The lawyer heard that the boys knew that we mentioned that the kids mentioned that the girls said that I said that the soldier hated her, the lawyer
# ::tree TP_resolve_coref(heard_resolve_coref,lawyer,TP_CP_coref(knew_coref,boys,TP_CP_coref(mentioned_coref,we,TP_CP_coref(mentioned_coref,kids,TP_CP_coref(said_coref,girls,TP_CP_coref(said_coref,I,TP_tr(hated_her,make_singular(soldier))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_3s_55
# ::suppl deep_recursion_3s_55
(u_7695 / hear-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7682 / hate-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_7680 / say-01
                                                   :ARG0 (u_7685 / i)
                                                   :ARG1-of (u_7683 / say-01
                                                                    :ARG0 (u_7688 / girl)
                                                                    :ARG1-of (u_7686 / mention-01
                                                                                     :ARG0 (u_7691 / kid)
                                                                                     :ARG1-of (u_7689 / mention-01
                                                                                                      :ARG0 (u_7694 / we)
                                                                                                      :ARG1-of (u_7692 / know-01
                                                                                                                       :ARG0 (r / boy)
                                                                                                                       :ARG1-of u_7695))))))))

# ::snt The soldier said that I believed that you believed that the boys mentioned that the girls thought that the lawyer knew that the astronaut hated him, the soldier
# ::tree TP_resolve_coref(said_resolve_coref,soldier,TP_CP_coref(believed_coref,I,TP_CP_coref(believed_coref,you,TP_CP_coref(mentioned_coref,boys,TP_CP_coref(thought_coref,girls,TP_CP_coref(knew_coref,make_singular(lawyer),TP_tr(hated_him,make_singular(astronaut))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_3s_56
# ::suppl deep_recursion_3s_56
(u_7705 / say-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7698 / hate-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_7696 / know-01
                                                   :ARG0 (m / lawyer)
                                                   :ARG1-of (u_7697 / think-01
                                                                    :ARG0 (u_7700 / girl)
                                                                    :ARG1-of (u_7699 / mention-01
                                                                                     :ARG0 (u_7702 / boy)
                                                                                     :ARG1-of (u_7701 / believe-01
                                                                                                      :ARG0 (u_7704 / you)
                                                                                                      :ARG1-of (u_7703 / believe-01
                                                                                                                       :ARG0 (r / i)
                                                                                                                       :ARG1-of u_7705))))))))

# ::snt The astronaut thought that the girls mentioned that the lawyer knew that the kids knew that I said that you thought that the doctor liked him, the astronaut
# ::tree TP_resolve_coref(thought_resolve_coref,astronaut,TP_CP_coref(mentioned_coref,girls,TP_CP_coref(knew_coref,make_singular(lawyer),TP_CP_coref(knew_coref,kids,TP_CP_coref(said_coref,I,TP_CP_coref(thought_coref,you,TP_tr(liked_him,make_singular(doctor))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_3s_57
# ::suppl deep_recursion_3s_57
(u_7715 / think-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7707 / like-01
                                  :ARG0 (d / doctor)
                                  :ARG1-of (u_7706 / think-01
                                                   :ARG0 (u_7709 / you)
                                                   :ARG1-of (u_7708 / say-01
                                                                    :ARG0 (u_7711 / i)
                                                                    :ARG1-of (u_7710 / know-01
                                                                                     :ARG0 (u_7714 / kid)
                                                                                     :ARG1-of (u_7712 / know-01
                                                                                                      :ARG0 (m / lawyer)
                                                                                                      :ARG1-of (u_7713 / mention-01
                                                                                                                       :ARG0 (r / girl)
                                                                                                                       :ARG1-of u_7715))))))))

# ::snt The soldier thought that the doctor said that the lawyer said that we said that you said that the girls mentioned that the boys believed that I hated him, the soldier
# ::tree TP_resolve_coref(thought_resolve_coref,soldier,TP_CP_coref(said_coref,make_singular(doctor),TP_CP_coref(said_coref,make_singular(lawyer),TP_CP_coref(said_coref,we,TP_CP_coref(said_coref,you,TP_CP_coref(mentioned_coref,girls,TP_CP_coref(believed_coref,boys,TP_tr(hated_him,I))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_3s_58
# ::suppl deep_recursion_3s_58
(u_7727 / think-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7716 / hate-01
                                  :ARG0 (u_7718 / i)
                                  :ARG1-of (u_7717 / believe-01
                                                   :ARG0 (u_7720 / boy)
                                                   :ARG1-of (u_7719 / mention-01
                                                                    :ARG0 (u_7722 / girl)
                                                                    :ARG1-of (u_7721 / say-01
                                                                                     :ARG0 (u_7724 / you)
                                                                                     :ARG1-of (u_7723 / say-01
                                                                                                      :ARG0 (r / we)
                                                                                                      :ARG1-of (u_7725 / say-01
                                                                                                                       :ARG0 (m / lawyer)
                                                                                                                       :ARG1-of (u_7726 / say-01
                                                                                                                                        :ARG0 (d / doctor)
                                                                                                                                        :ARG1-of u_7727)))))))))

# ::snt The doctor believed that we said that the girls believed that the soldier knew that I mentioned that the boys knew that the astronaut saw her, the doctor
# ::tree TP_resolve_coref(believed_resolve_coref,doctor,TP_CP_coref(said_coref,we,TP_CP_coref(believed_coref,girls,TP_CP_coref(knew_coref,make_singular(soldier),TP_CP_coref(mentioned_coref,I,TP_CP_coref(knew_coref,boys,TP_tr(saw_her,make_singular(astronaut))))))))
# ::size0 8
# ::size1 8
# ::id deep_recursion_3s_59
# ::suppl deep_recursion_3s_59
(u_7739 / believe-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7729 / see-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_7728 / know-01
                                                   :ARG0 (u_7731 / boy)
                                                   :ARG1-of (u_7730 / mention-01
                                                                    :ARG0 (u_7735 / i)
                                                                    :ARG1-of (u_7732 / know-01
                                                                                     :ARG0 (s / soldier)
                                                                                     :ARG1-of (u_7733 / believe-01
                                                                                                      :ARG0 (u_7738 / girl)
                                                                                                      :ARG1-of (u_7736 / say-01
                                                                                                                       :ARG0 (r / we)
                                                                                                                       :ARG1-of u_7739))))))))

# ::snt The soldier said that we knew that the astronaut said that the lawyer thought that the kids mentioned that the girls heard that the doctor knew that I mentioned that you saw him, the soldier
# ::tree TP_resolve_coref(said_resolve_coref,soldier,TP_CP_coref(knew_coref,we,TP_CP_coref(said_coref,make_singular(astronaut),TP_CP_coref(thought_coref,make_singular(lawyer),TP_CP_coref(mentioned_coref,kids,TP_CP_coref(heard_coref,girls,TP_CP_coref(knew_coref,make_singular(doctor),TP_CP_coref(mentioned_coref,I,TP_tr(saw_him,you)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_3s_60
# ::suppl deep_recursion_3s_60
(u_7752 / say-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7740 / see-01
                                  :ARG0 (u_7742 / you)
                                  :ARG1-of (u_7741 / mention-01
                                                   :ARG0 (u_7745 / i)
                                                   :ARG1-of (u_7743 / know-01
                                                                    :ARG0 (d / doctor)
                                                                    :ARG1-of (u_7744 / hear-01
                                                                                     :ARG0 (u_7747 / girl)
                                                                                     :ARG1-of (u_7746 / mention-01
                                                                                                      :ARG0 (u_7751 / kid)
                                                                                                      :ARG1-of (u_7748 / think-01
                                                                                                                       :ARG0 (m / lawyer)
                                                                                                                       :ARG1-of (u_7749 / say-01
                                                                                                                                        :ARG0 (a / astronaut)
                                                                                                                                        :ARG1-of (u_7750 / know-01
                                                                                                                                                         :ARG0 (r / we)
                                                                                                                                                         :ARG1-of u_7752))))))))))

# ::snt The astronaut thought that I heard that the soldier knew that you said that the kids knew that the girls said that the doctor knew that the boys knew that we liked her, the astronaut
# ::tree TP_resolve_coref(thought_resolve_coref,astronaut,TP_CP_coref(heard_coref,I,TP_CP_coref(knew_coref,make_singular(soldier),TP_CP_coref(said_coref,you,TP_CP_coref(knew_coref,kids,TP_CP_coref(said_coref,girls,TP_CP_coref(knew_coref,make_singular(doctor),TP_CP_coref(knew_coref,boys,TP_tr(liked_her,we)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_3s_61
# ::suppl deep_recursion_3s_61
(u_7767 / think-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7753 / like-01
                                  :ARG0 (u_7755 / we)
                                  :ARG1-of (u_7754 / know-01
                                                   :ARG0 (u_7758 / boy)
                                                   :ARG1-of (u_7756 / know-01
                                                                    :ARG0 (d / doctor)
                                                                    :ARG1-of (u_7757 / say-01
                                                                                     :ARG0 (u_7760 / girl)
                                                                                     :ARG1-of (u_7759 / know-01
                                                                                                      :ARG0 (u_7762 / kid)
                                                                                                      :ARG1-of (u_7761 / say-01
                                                                                                                       :ARG0 (u_7766 / you)
                                                                                                                       :ARG1-of (u_7763 / know-01
                                                                                                                                        :ARG0 (s / soldier)
                                                                                                                                        :ARG1-of (u_7764 / hear-01
                                                                                                                                                         :ARG0 (r / i)
                                                                                                                                                         :ARG1-of u_7767))))))))))

# ::snt The lawyer believed that the astronaut said that the boys believed that you said that we believed that the girls believed that the kids knew that the soldier mentioned that I hated him, the lawyer
# ::tree TP_resolve_coref(believed_resolve_coref,lawyer,TP_CP_coref(said_coref,make_singular(astronaut),TP_CP_coref(believed_coref,boys,TP_CP_coref(said_coref,you,TP_CP_coref(believed_coref,we,TP_CP_coref(believed_coref,girls,TP_CP_coref(knew_coref,kids,TP_CP_coref(mentioned_coref,make_singular(soldier),TP_tr(hated_him,I)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_3s_62
# ::suppl deep_recursion_3s_62
(u_7787 / believe-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7768 / hate-01
                                  :ARG0 (u_7772 / i)
                                  :ARG1-of (u_7769 / mention-01
                                                   :ARG0 (s / soldier)
                                                   :ARG1-of (u_7770 / know-01
                                                                    :ARG0 (u_7775 / kid)
                                                                    :ARG1-of (u_7773 / believe-01
                                                                                     :ARG0 (u_7778 / girl)
                                                                                     :ARG1-of (u_7776 / believe-01
                                                                                                      :ARG0 (u_7781 / we)
                                                                                                      :ARG1-of (u_7779 / say-01
                                                                                                                       :ARG0 (u_7784 / you)
                                                                                                                       :ARG1-of (u_7782 / believe-01
                                                                                                                                        :ARG0 (r / boy)
                                                                                                                                        :ARG1-of (u_7785 / say-01
                                                                                                                                                         :ARG0 (a / astronaut)
                                                                                                                                                         :ARG1-of u_7787))))))))))

# ::snt The doctor thought that the soldier heard that the astronaut thought that the lawyer heard that the kids heard that you believed that the girls mentioned that we said that I saw her, the doctor
# ::tree TP_resolve_coref(thought_resolve_coref,doctor,TP_CP_coref(heard_coref,make_singular(soldier),TP_CP_coref(thought_coref,make_singular(astronaut),TP_CP_coref(heard_coref,make_singular(lawyer),TP_CP_coref(heard_coref,kids,TP_CP_coref(believed_coref,you,TP_CP_coref(mentioned_coref,girls,TP_CP_coref(said_coref,we,TP_tr(saw_her,I)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_3s_63
# ::suppl deep_recursion_3s_63
(u_7800 / think-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7788 / see-01
                                  :ARG0 (u_7790 / i)
                                  :ARG1-of (u_7789 / say-01
                                                   :ARG0 (u_7792 / we)
                                                   :ARG1-of (u_7791 / mention-01
                                                                    :ARG0 (u_7794 / girl)
                                                                    :ARG1-of (u_7793 / believe-01
                                                                                     :ARG0 (u_7796 / you)
                                                                                     :ARG1-of (u_7795 / hear-01
                                                                                                      :ARG0 (r / kid)
                                                                                                      :ARG1-of (u_7797 / hear-01
                                                                                                                       :ARG0 (m / lawyer)
                                                                                                                       :ARG1-of (u_7798 / think-01
                                                                                                                                        :ARG0 (a / astronaut)
                                                                                                                                        :ARG1-of (u_7799 / hear-01
                                                                                                                                                         :ARG0 (s / soldier)
                                                                                                                                                         :ARG1-of u_7800))))))))))

# ::snt The lawyer said that the kids said that the doctor heard that the girls heard that the boys heard that I believed that we knew that the soldier hated her, the lawyer
# ::tree TP_resolve_coref(said_resolve_coref,lawyer,TP_CP_coref(said_coref,kids,TP_CP_coref(heard_coref,make_singular(doctor),TP_CP_coref(heard_coref,girls,TP_CP_coref(heard_coref,boys,TP_CP_coref(believed_coref,I,TP_CP_coref(knew_coref,we,TP_tr(hated_her,make_singular(soldier)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_3s_64
# ::suppl deep_recursion_3s_64
(u_7818 / say-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7803 / hate-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_7801 / know-01
                                                   :ARG0 (u_7806 / we)
                                                   :ARG1-of (u_7804 / believe-01
                                                                    :ARG0 (u_7809 / i)
                                                                    :ARG1-of (u_7807 / hear-01
                                                                                     :ARG0 (u_7812 / boy)
                                                                                     :ARG1-of (u_7810 / hear-01
                                                                                                      :ARG0 (u_7817 / girl)
                                                                                                      :ARG1-of (u_7813 / hear-01
                                                                                                                       :ARG0 (d / doctor)
                                                                                                                       :ARG1-of (u_7815 / say-01
                                                                                                                                        :ARG0 (r / kid)
                                                                                                                                        :ARG1-of u_7818)))))))))

# ::snt The astronaut believed that you thought that I believed that the kids heard that the boys knew that the girls thought that we mentioned that the lawyer liked her, the astronaut
# ::tree TP_resolve_coref(believed_resolve_coref,astronaut,TP_CP_coref(thought_coref,you,TP_CP_coref(believed_coref,I,TP_CP_coref(heard_coref,kids,TP_CP_coref(knew_coref,boys,TP_CP_coref(thought_coref,girls,TP_CP_coref(mentioned_coref,we,TP_tr(liked_her,make_singular(lawyer)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_3s_65
# ::suppl deep_recursion_3s_65
(u_7831 / believe-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7820 / like-01
                                  :ARG0 (m / lawyer)
                                  :ARG1-of (u_7819 / mention-01
                                                   :ARG0 (u_7822 / we)
                                                   :ARG1-of (u_7821 / think-01
                                                                    :ARG0 (u_7824 / girl)
                                                                    :ARG1-of (u_7823 / know-01
                                                                                     :ARG0 (u_7826 / boy)
                                                                                     :ARG1-of (u_7825 / hear-01
                                                                                                      :ARG0 (u_7828 / kid)
                                                                                                      :ARG1-of (u_7827 / believe-01
                                                                                                                       :ARG0 (u_7830 / i)
                                                                                                                       :ARG1-of (u_7829 / think-01
                                                                                                                                        :ARG0 (r / you)
                                                                                                                                        :ARG1-of u_7831)))))))))

# ::snt The lawyer thought that you knew that the kids mentioned that the doctor knew that we heard that the boys believed that I said that the astronaut saw him, the lawyer
# ::tree TP_resolve_coref(thought_resolve_coref,lawyer,TP_CP_coref(knew_coref,you,TP_CP_coref(mentioned_coref,kids,TP_CP_coref(knew_coref,make_singular(doctor),TP_CP_coref(heard_coref,we,TP_CP_coref(believed_coref,boys,TP_CP_coref(said_coref,I,TP_tr(saw_him,make_singular(astronaut)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_3s_66
# ::suppl deep_recursion_3s_66
(u_7843 / think-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7833 / see-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_7832 / say-01
                                                   :ARG0 (u_7835 / i)
                                                   :ARG1-of (u_7834 / believe-01
                                                                    :ARG0 (u_7837 / boy)
                                                                    :ARG1-of (u_7836 / hear-01
                                                                                     :ARG0 (u_7840 / we)
                                                                                     :ARG1-of (u_7838 / know-01
                                                                                                      :ARG0 (d / doctor)
                                                                                                      :ARG1-of (u_7839 / mention-01
                                                                                                                       :ARG0 (u_7842 / kid)
                                                                                                                       :ARG1-of (u_7841 / know-01
                                                                                                                                        :ARG0 (r / you)
                                                                                                                                        :ARG1-of u_7843)))))))))

# ::snt The soldier heard that you believed that the lawyer believed that the kids heard that I thought that the boys said that we believed that the doctor liked him, the soldier
# ::tree TP_resolve_coref(heard_resolve_coref,soldier,TP_CP_coref(believed_coref,you,TP_CP_coref(believed_coref,make_singular(lawyer),TP_CP_coref(heard_coref,kids,TP_CP_coref(thought_coref,I,TP_CP_coref(said_coref,boys,TP_CP_coref(believed_coref,we,TP_tr(liked_him,make_singular(doctor)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_3s_67
# ::suppl deep_recursion_3s_67
(u_7855 / hear-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7845 / like-01
                                  :ARG0 (d / doctor)
                                  :ARG1-of (u_7844 / believe-01
                                                   :ARG0 (u_7847 / we)
                                                   :ARG1-of (u_7846 / say-01
                                                                    :ARG0 (u_7849 / boy)
                                                                    :ARG1-of (u_7848 / think-01
                                                                                     :ARG0 (u_7851 / i)
                                                                                     :ARG1-of (u_7850 / hear-01
                                                                                                      :ARG0 (u_7854 / kid)
                                                                                                      :ARG1-of (u_7852 / believe-01
                                                                                                                       :ARG0 (m / lawyer)
                                                                                                                       :ARG1-of (u_7853 / believe-01
                                                                                                                                        :ARG0 (r / you)
                                                                                                                                        :ARG1-of u_7855)))))))))

# ::snt The soldier believed that the doctor thought that the kids thought that the girls knew that you knew that the boys mentioned that we said that the astronaut saw him, the soldier
# ::tree TP_resolve_coref(believed_resolve_coref,soldier,TP_CP_coref(thought_coref,make_singular(doctor),TP_CP_coref(thought_coref,kids,TP_CP_coref(knew_coref,girls,TP_CP_coref(knew_coref,you,TP_CP_coref(mentioned_coref,boys,TP_CP_coref(said_coref,we,TP_tr(saw_him,make_singular(astronaut)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_3s_68
# ::suppl deep_recursion_3s_68
(u_7867 / believe-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7857 / see-01
                                  :ARG0 (a / astronaut)
                                  :ARG1-of (u_7856 / say-01
                                                   :ARG0 (u_7859 / we)
                                                   :ARG1-of (u_7858 / mention-01
                                                                    :ARG0 (u_7861 / boy)
                                                                    :ARG1-of (u_7860 / know-01
                                                                                     :ARG0 (u_7863 / you)
                                                                                     :ARG1-of (u_7862 / know-01
                                                                                                      :ARG0 (u_7865 / girl)
                                                                                                      :ARG1-of (u_7864 / think-01
                                                                                                                       :ARG0 (r / kid)
                                                                                                                       :ARG1-of (u_7866 / think-01
                                                                                                                                        :ARG0 (d / doctor)
                                                                                                                                        :ARG1-of u_7867)))))))))

# ::snt The soldier mentioned that the boys mentioned that the girls knew that the astronaut heard that the lawyer said that the doctor heard that I said that you mentioned that we liked him, the soldier
# ::tree TP_resolve_coref(mentioned_resolve_coref,soldier,TP_CP_coref(mentioned_coref,boys,TP_CP_coref(knew_coref,girls,TP_CP_coref(heard_coref,make_singular(astronaut),TP_CP_coref(said_coref,make_singular(lawyer),TP_CP_coref(heard_coref,make_singular(doctor),TP_CP_coref(said_coref,I,TP_CP_coref(mentioned_coref,you,TP_tr(liked_him,we)))))))))
# ::size0 9
# ::size1 9
# ::id deep_recursion_3s_69
# ::suppl deep_recursion_3s_69
(u_7880 / mention-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7868 / like-01
                                  :ARG0 (u_7870 / we)
                                  :ARG1-of (u_7869 / mention-01
                                                   :ARG0 (u_7872 / you)
                                                   :ARG1-of (u_7871 / say-01
                                                                    :ARG0 (u_7877 / i)
                                                                    :ARG1-of (u_7873 / hear-01
                                                                                     :ARG0 (d / doctor)
                                                                                     :ARG1-of (u_7874 / say-01
                                                                                                      :ARG0 (m / lawyer)
                                                                                                      :ARG1-of (u_7875 / hear-01
                                                                                                                       :ARG0 (a / astronaut)
                                                                                                                       :ARG1-of (u_7876 / know-01
                                                                                                                                        :ARG0 (u_7879 / girl)
                                                                                                                                        :ARG1-of (u_7878 / mention-01
                                                                                                                                                         :ARG0 (r / boy)
                                                                                                                                                         :ARG1-of u_7880))))))))))

# ::snt The astronaut believed that the kids heard that I said that we thought that the lawyer believed that you thought that the girls knew that the boys said that the soldier amused him, the astronaut
# ::tree TP_resolve_coref(believed_resolve_coref,astronaut,TP_CP_coref(heard_coref,kids,TP_CP_coref(said_coref,I,TP_CP_coref(thought_coref,we,TP_CP_coref(believed_coref,make_singular(lawyer),TP_CP_coref(thought_coref,you,TP_CP_coref(knew_coref,girls,TP_CP_coref(said_coref,boys,TP_tr(amused_him,make_singular(soldier))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_3s_70
# ::suppl deep_recursion_3s_70
(u_7901 / believe-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_7883 / amuse-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_7881 / say-01
                                                   :ARG0 (u_7886 / boy)
                                                   :ARG1-of (u_7884 / know-01
                                                                    :ARG0 (u_7889 / girl)
                                                                    :ARG1-of (u_7887 / think-01
                                                                                     :ARG0 (u_7894 / you)
                                                                                     :ARG1-of (u_7890 / believe-01
                                                                                                      :ARG0 (m / lawyer)
                                                                                                      :ARG1-of (u_7892 / think-01
                                                                                                                       :ARG0 (u_7897 / we)
                                                                                                                       :ARG1-of (u_7895 / say-01
                                                                                                                                        :ARG0 (u_7900 / i)
                                                                                                                                        :ARG1-of (u_7898 / hear-01
                                                                                                                                                         :ARG0 (r / kid)
                                                                                                                                                         :ARG1-of u_7901))))))))))

# ::snt The doctor knew that the girls said that I mentioned that you mentioned that we believed that the boys heard that the kids thought that the astronaut mentioned that the soldier amused her, the doctor
# ::tree TP_resolve_coref(knew_resolve_coref,doctor,TP_CP_coref(said_coref,girls,TP_CP_coref(mentioned_coref,I,TP_CP_coref(mentioned_coref,you,TP_CP_coref(believed_coref,we,TP_CP_coref(heard_coref,boys,TP_CP_coref(thought_coref,kids,TP_CP_coref(mentioned_coref,make_singular(astronaut),TP_tr(amused_her,make_singular(soldier))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_3s_71
# ::suppl deep_recursion_3s_71
(u_7922 / know-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7906 / amuse-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_7902 / mention-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_7904 / think-01
                                                                    :ARG0 (u_7909 / kid)
                                                                    :ARG1-of (u_7907 / hear-01
                                                                                     :ARG0 (u_7912 / boy)
                                                                                     :ARG1-of (u_7910 / believe-01
                                                                                                      :ARG0 (u_7915 / we)
                                                                                                      :ARG1-of (u_7913 / mention-01
                                                                                                                       :ARG0 (u_7918 / you)
                                                                                                                       :ARG1-of (u_7916 / mention-01
                                                                                                                                        :ARG0 (u_7921 / i)
                                                                                                                                        :ARG1-of (u_7919 / say-01
                                                                                                                                                         :ARG0 (r / girl)
                                                                                                                                                         :ARG1-of u_7922))))))))))

# ::snt The lawyer believed that the kids said that the astronaut knew that the boys believed that you said that I thought that the girls believed that we knew that the doctor hated him, the lawyer
# ::tree TP_resolve_coref(believed_resolve_coref,lawyer,TP_CP_coref(said_coref,kids,TP_CP_coref(knew_coref,make_singular(astronaut),TP_CP_coref(believed_coref,boys,TP_CP_coref(said_coref,you,TP_CP_coref(thought_coref,I,TP_CP_coref(believed_coref,girls,TP_CP_coref(knew_coref,we,TP_tr(hated_him,make_singular(doctor))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_3s_72
# ::suppl deep_recursion_3s_72
(u_7936 / believe-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7924 / hate-01
                                  :ARG0 (d / doctor)
                                  :ARG1-of (u_7923 / know-01
                                                   :ARG0 (u_7926 / we)
                                                   :ARG1-of (u_7925 / believe-01
                                                                    :ARG0 (u_7928 / girl)
                                                                    :ARG1-of (u_7927 / think-01
                                                                                     :ARG0 (u_7930 / i)
                                                                                     :ARG1-of (u_7929 / say-01
                                                                                                      :ARG0 (u_7932 / you)
                                                                                                      :ARG1-of (u_7931 / believe-01
                                                                                                                       :ARG0 (u_7935 / boy)
                                                                                                                       :ARG1-of (u_7933 / know-01
                                                                                                                                        :ARG0 (a / astronaut)
                                                                                                                                        :ARG1-of (u_7934 / say-01
                                                                                                                                                         :ARG0 (r / kid)
                                                                                                                                                         :ARG1-of u_7936))))))))))

# ::snt The doctor heard that the boys mentioned that the girls said that I mentioned that the astronaut knew that the kids mentioned that the lawyer believed that you mentioned that the soldier liked her, the doctor
# ::tree TP_resolve_coref(heard_resolve_coref,doctor,TP_CP_coref(mentioned_coref,boys,TP_CP_coref(said_coref,girls,TP_CP_coref(mentioned_coref,I,TP_CP_coref(knew_coref,make_singular(astronaut),TP_CP_coref(mentioned_coref,kids,TP_CP_coref(believed_coref,make_singular(lawyer),TP_CP_coref(mentioned_coref,you,TP_tr(liked_her,make_singular(soldier))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_3s_73
# ::suppl deep_recursion_3s_73
(u_7956 / hear-01
        :ARG0 (d / doctor
                 :ARG1-of (u_7939 / like-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_7937 / mention-01
                                                   :ARG0 (u_7944 / you)
                                                   :ARG1-of (u_7940 / believe-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_7942 / mention-01
                                                                                     :ARG0 (u_7949 / kid)
                                                                                     :ARG1-of (u_7945 / know-01
                                                                                                      :ARG0 (a / astronaut)
                                                                                                      :ARG1-of (u_7947 / mention-01
                                                                                                                       :ARG0 (u_7952 / i)
                                                                                                                       :ARG1-of (u_7950 / say-01
                                                                                                                                        :ARG0 (u_7955 / girl)
                                                                                                                                        :ARG1-of (u_7953 / mention-01
                                                                                                                                                         :ARG0 (r / boy)
                                                                                                                                                         :ARG1-of u_7956))))))))))

# ::snt The soldier mentioned that the doctor believed that I knew that you mentioned that the boys mentioned that the girls knew that the kids knew that the astronaut said that the lawyer saw her, the soldier
# ::tree TP_resolve_coref(mentioned_resolve_coref,soldier,TP_CP_coref(believed_coref,make_singular(doctor),TP_CP_coref(knew_coref,I,TP_CP_coref(mentioned_coref,you,TP_CP_coref(mentioned_coref,boys,TP_CP_coref(knew_coref,girls,TP_CP_coref(knew_coref,kids,TP_CP_coref(said_coref,make_singular(astronaut),TP_tr(saw_her,make_singular(lawyer))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_3s_74
# ::suppl deep_recursion_3s_74
(u_7969 / mention-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7959 / see-01
                                  :ARG0 (m / lawyer)
                                  :ARG1-of (u_7957 / say-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_7958 / know-01
                                                                    :ARG0 (u_7961 / kid)
                                                                    :ARG1-of (u_7960 / know-01
                                                                                     :ARG0 (u_7963 / girl)
                                                                                     :ARG1-of (u_7962 / mention-01
                                                                                                      :ARG0 (u_7965 / boy)
                                                                                                      :ARG1-of (u_7964 / mention-01
                                                                                                                       :ARG0 (u_7967 / you)
                                                                                                                       :ARG1-of (u_7966 / know-01
                                                                                                                                        :ARG0 (r / i)
                                                                                                                                        :ARG1-of (u_7968 / believe-01
                                                                                                                                                         :ARG0 (d / doctor)
                                                                                                                                                         :ARG1-of u_7969))))))))))

# ::snt The soldier thought that the girls said that the lawyer mentioned that you thought that the astronaut heard that the kids thought that the doctor said that we said that I said that the boys amused her, the soldier
# ::tree TP_resolve_coref(thought_resolve_coref,soldier,TP_CP_coref(said_coref,girls,TP_CP_coref(mentioned_coref,make_singular(lawyer),TP_CP_coref(thought_coref,you,TP_CP_coref(heard_coref,make_singular(astronaut),TP_CP_coref(thought_coref,kids,TP_CP_coref(said_coref,make_singular(doctor),TP_CP_coref(said_coref,we,TP_CP_coref(said_coref,I,TP_tr(amused_her,boys))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_3s_75
# ::suppl deep_recursion_3s_75
(u_7984 / think-01
        :ARG0 (s / soldier
                 :ARG1-of (u_7970 / amuse-01
                                  :ARG0 (u_7972 / boy)
                                  :ARG1-of (u_7971 / say-01
                                                   :ARG0 (u_7974 / i)
                                                   :ARG1-of (u_7973 / say-01
                                                                    :ARG0 (u_7977 / we)
                                                                    :ARG1-of (u_7975 / say-01
                                                                                     :ARG0 (d / doctor)
                                                                                     :ARG1-of (u_7976 / think-01
                                                                                                      :ARG0 (u_7980 / kid)
                                                                                                      :ARG1-of (u_7978 / hear-01
                                                                                                                       :ARG0 (a / astronaut)
                                                                                                                       :ARG1-of (u_7979 / think-01
                                                                                                                                        :ARG0 (u_7983 / you)
                                                                                                                                        :ARG1-of (u_7981 / mention-01
                                                                                                                                                         :ARG0 (m / lawyer)
                                                                                                                                                         :ARG1-of (u_7982 / say-01
                                                                                                                                                                          :ARG0 (r / girl)
                                                                                                                                                                          :ARG1-of u_7984)))))))))))

# ::snt The lawyer mentioned that we thought that the girls mentioned that the astronaut knew that I heard that the kids said that the boys said that you thought that the soldier saw her, the lawyer
# ::tree TP_resolve_coref(mentioned_resolve_coref,lawyer,TP_CP_coref(thought_coref,we,TP_CP_coref(mentioned_coref,girls,TP_CP_coref(knew_coref,make_singular(astronaut),TP_CP_coref(heard_coref,I,TP_CP_coref(said_coref,kids,TP_CP_coref(said_coref,boys,TP_CP_coref(thought_coref,you,TP_tr(saw_her,make_singular(soldier))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_3s_76
# ::suppl deep_recursion_3s_76
(u_8005 / mention-01
        :ARG0 (m / lawyer
                 :ARG1-of (u_7987 / see-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_7985 / think-01
                                                   :ARG0 (u_7990 / you)
                                                   :ARG1-of (u_7988 / say-01
                                                                    :ARG0 (u_7993 / boy)
                                                                    :ARG1-of (u_7991 / say-01
                                                                                     :ARG0 (u_7996 / kid)
                                                                                     :ARG1-of (u_7994 / hear-01
                                                                                                      :ARG0 (u_8001 / i)
                                                                                                      :ARG1-of (u_7997 / know-01
                                                                                                                       :ARG0 (a / astronaut)
                                                                                                                       :ARG1-of (u_7999 / mention-01
                                                                                                                                        :ARG0 (u_8004 / girl)
                                                                                                                                        :ARG1-of (u_8002 / think-01
                                                                                                                                                         :ARG0 (r / we)
                                                                                                                                                         :ARG1-of u_8005))))))))))

# ::snt The doctor heard that I knew that the lawyer knew that you believed that the girls said that we heard that the boys believed that the kids mentioned that the soldier saw him, the doctor
# ::tree TP_resolve_coref(heard_resolve_coref,doctor,TP_CP_coref(knew_coref,I,TP_CP_coref(knew_coref,make_singular(lawyer),TP_CP_coref(believed_coref,you,TP_CP_coref(said_coref,girls,TP_CP_coref(heard_coref,we,TP_CP_coref(believed_coref,boys,TP_CP_coref(mentioned_coref,kids,TP_tr(saw_him,make_singular(soldier))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_3s_77
# ::suppl deep_recursion_3s_77
(u_8026 / hear-01
        :ARG0 (d / doctor
                 :ARG1-of (u_8008 / see-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_8006 / mention-01
                                                   :ARG0 (u_8011 / kid)
                                                   :ARG1-of (u_8009 / believe-01
                                                                    :ARG0 (u_8014 / boy)
                                                                    :ARG1-of (u_8012 / hear-01
                                                                                     :ARG0 (u_8017 / we)
                                                                                     :ARG1-of (u_8015 / say-01
                                                                                                      :ARG0 (u_8020 / girl)
                                                                                                      :ARG1-of (u_8018 / believe-01
                                                                                                                       :ARG0 (u_8025 / you)
                                                                                                                       :ARG1-of (u_8021 / know-01
                                                                                                                                        :ARG0 (m / lawyer)
                                                                                                                                        :ARG1-of (u_8023 / know-01
                                                                                                                                                         :ARG0 (r / i)
                                                                                                                                                         :ARG1-of u_8026))))))))))

# ::snt The soldier believed that the doctor heard that I thought that you said that we heard that the girls said that the astronaut believed that the kids believed that the lawyer hated her, the soldier
# ::tree TP_resolve_coref(believed_resolve_coref,soldier,TP_CP_coref(heard_coref,make_singular(doctor),TP_CP_coref(thought_coref,I,TP_CP_coref(said_coref,you,TP_CP_coref(heard_coref,we,TP_CP_coref(said_coref,girls,TP_CP_coref(believed_coref,make_singular(astronaut),TP_CP_coref(believed_coref,kids,TP_tr(hated_her,make_singular(lawyer))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_3s_78
# ::suppl deep_recursion_3s_78
(u_8039 / believe-01
        :ARG0 (s / soldier
                 :ARG1-of (u_8028 / hate-01
                                  :ARG0 (m / lawyer)
                                  :ARG1-of (u_8027 / believe-01
                                                   :ARG0 (u_8031 / kid)
                                                   :ARG1-of (u_8029 / believe-01
                                                                    :ARG0 (a / astronaut)
                                                                    :ARG1-of (u_8030 / say-01
                                                                                     :ARG0 (u_8033 / girl)
                                                                                     :ARG1-of (u_8032 / hear-01
                                                                                                      :ARG0 (u_8035 / we)
                                                                                                      :ARG1-of (u_8034 / say-01
                                                                                                                       :ARG0 (u_8037 / you)
                                                                                                                       :ARG1-of (u_8036 / think-01
                                                                                                                                        :ARG0 (r / i)
                                                                                                                                        :ARG1-of (u_8038 / hear-01
                                                                                                                                                         :ARG0 (d / doctor)
                                                                                                                                                         :ARG1-of u_8039))))))))))

# ::snt The doctor mentioned that the girls thought that the kids believed that you said that we mentioned that I said that the lawyer knew that the astronaut believed that the soldier liked him, the doctor
# ::tree TP_resolve_coref(mentioned_resolve_coref,doctor,TP_CP_coref(thought_coref,girls,TP_CP_coref(believed_coref,kids,TP_CP_coref(said_coref,you,TP_CP_coref(mentioned_coref,we,TP_CP_coref(said_coref,I,TP_CP_coref(knew_coref,make_singular(lawyer),TP_CP_coref(believed_coref,make_singular(astronaut),TP_tr(liked_him,make_singular(soldier))))))))))
# ::size0 10
# ::size1 10
# ::id deep_recursion_3s_79
# ::suppl deep_recursion_3s_79
(u_8059 / mention-01
        :ARG0 (d / doctor
                 :ARG1-of (u_8046 / like-01
                                  :ARG0 (s / soldier)
                                  :ARG1-of (u_8040 / believe-01
                                                   :ARG0 (a / astronaut)
                                                   :ARG1-of (u_8042 / know-01
                                                                    :ARG0 (m / lawyer)
                                                                    :ARG1-of (u_8044 / say-01
                                                                                     :ARG0 (u_8049 / i)
                                                                                     :ARG1-of (u_8047 / mention-01
                                                                                                      :ARG0 (u_8052 / we)
                                                                                                      :ARG1-of (u_8050 / say-01
                                                                                                                       :ARG0 (u_8055 / you)
                                                                                                                       :ARG1-of (u_8053 / believe-01
                                                                                                                                        :ARG0 (u_8058 / kid)
                                                                                                                                        :ARG1-of (u_8056 / think-01
                                                                                                                                                         :ARG0 (r / girl)
                                                                                                                                                         :ARG1-of u_8059))))))))))

# ::snt The astronaut knew that the girls heard that we thought that the soldier believed that I heard that the kids heard that you mentioned that the boys said that the lawyer knew that the doctor hated him, the astronaut
# ::tree TP_resolve_coref(knew_resolve_coref,astronaut,TP_CP_coref(heard_coref,girls,TP_CP_coref(thought_coref,we,TP_CP_coref(believed_coref,make_singular(soldier),TP_CP_coref(heard_coref,I,TP_CP_coref(heard_coref,kids,TP_CP_coref(mentioned_coref,you,TP_CP_coref(said_coref,boys,TP_CP_coref(knew_coref,make_singular(lawyer),TP_tr(hated_him,make_singular(doctor)))))))))))
# ::size0 11
# ::size1 11
# ::id deep_recursion_3s_80
# ::suppl deep_recursion_3s_80
(u_8076 / know-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_8062 / hate-01
                                  :ARG0 (d / doctor)
                                  :ARG1-of (u_8060 / know-01
                                                   :ARG0 (m / lawyer)
                                                   :ARG1-of (u_8061 / say-01
                                                                    :ARG0 (u_8064 / boy)
                                                                    :ARG1-of (u_8063 / mention-01
                                                                                     :ARG0 (u_8066 / you)
                                                                                     :ARG1-of (u_8065 / hear-01
                                                                                                      :ARG0 (u_8068 / kid)
                                                                                                      :ARG1-of (u_8067 / hear-01
                                                                                                                       :ARG0 (u_8072 / i)
                                                                                                                       :ARG1-of (u_8069 / believe-01
                                                                                                                                        :ARG0 (s / soldier)
                                                                                                                                        :ARG1-of (u_8070 / think-01
                                                                                                                                                         :ARG0 (u_8075 / we)
                                                                                                                                                         :ARG1-of (u_8073 / hear-01
                                                                                                                                                                          :ARG0 (r / girl)
                                                                                                                                                                          :ARG1-of u_8076)))))))))))

# ::snt The astronaut believed that the boys believed that the lawyer thought that we knew that the girls heard that the kids knew that the soldier knew that I heard that you knew that the doctor hated him, the astronaut
# ::tree TP_resolve_coref(believed_resolve_coref,astronaut,TP_CP_coref(believed_coref,boys,TP_CP_coref(thought_coref,make_singular(lawyer),TP_CP_coref(knew_coref,we,TP_CP_coref(heard_coref,girls,TP_CP_coref(knew_coref,kids,TP_CP_coref(knew_coref,make_singular(soldier),TP_CP_coref(heard_coref,I,TP_CP_coref(knew_coref,you,TP_tr(hated_him,make_singular(doctor)))))))))))
# ::size0 11
# ::size1 11
# ::id deep_recursion_3s_81
# ::suppl deep_recursion_3s_81
(u_8096 / believe-01
        :ARG0 (a / astronaut
                 :ARG1-of (u_8078 / hate-01
                                  :ARG0 (d / doctor)
                                  :ARG1-of (u_8077 / know-01
                                                   :ARG0 (u_8080 / you)
                                                   :ARG1-of (u_8079 / hear-01
                                                                    :ARG0 (u_8084 / i)
                                                                    :ARG1-of (u_8081 / know-01
                                                                                     :ARG0 (s / soldier)
                                                                                     :ARG1-of (u_8082 / know-01
                                                                                                      :ARG0 (u_8087 / kid)
                                                                                                      :ARG1-of (u_8085 / hear-01
                                                                                                                       :ARG0 (u_8090 / girl)
                                                                                                                       :ARG1-of (u_8088 / know-01
                                                                                                                                        :ARG0 (u_8095 / we)
                                                                                                                                        :ARG1-of (u_8091 / think-01
                                                                                                                                                         :ARG0 (m / lawyer)
                                                                                                                                                         :ARG1-of (u_8093 / believe-01
                                                                                                                                                                          :ARG0 (r / boy)
                                                                                                                                                                          :ARG1-of u_8096)))))))))))

# ::id unseen_senses_new_sentences_0
# ::snt Sick ski jump, bro!
# ::sense sick-03
# ::suppl unseen_senses_new_sentences_0
(d / dummy)

# ::id unseen_senses_new_sentences_1
# ::snt Sick ski jump, bro! That flip was amazing.
# ::sense sick-03
# ::suppl unseen_senses_new_sentences_1
(d / dummy)

# ::id unseen_senses_new_sentences_2
# ::snt The young reporter filled in for the usual news anchors.
# ::sense fill-in-07
# ::suppl unseen_senses_new_sentences_2
(d / dummy)

# ::id unseen_senses_new_sentences_3
# ::snt The young reporter filled in for the usual news anchors while they were on vacation.
# ::sense fill-in-07
# ::suppl unseen_senses_new_sentences_3
(d / dummy)

# ::id unseen_senses_new_sentences_4
# ::snt I was so stressed last year that I was beginning to crack up.
# ::sense crack-up-04
# ::suppl unseen_senses_new_sentences_4
(d / dummy)

# ::id unseen_senses_new_sentences_5
# ::snt I was so stressed last year that I was beginning to crack up and lose sleep.
# ::sense crack-up-04
# ::suppl unseen_senses_new_sentences_5
(d / dummy)

# ::id unseen_senses_new_sentences_6
# ::snt The nerd teased the cool kid on the playground.
# ::sense tease-02
# ::suppl unseen_senses_new_sentences_6
(d / dummy)

# ::id unseen_senses_new_sentences_7
# ::snt The nerd teased the cool kid on the playground by singing mean songs.
# ::sense tease-02
# ::suppl unseen_senses_new_sentences_7
(d / dummy)

# ::id unseen_senses_new_sentences_8
# ::snt I had my impacted wisdom teeth removed.
# ::sense impact-03
# ::suppl unseen_senses_new_sentences_8
(d / dummy)

# ::id unseen_senses_new_sentences_9
# ::snt I had my impacted wisdom teeth removed because they were stuck in my gums.
# ::sense impact-03
# ::suppl unseen_senses_new_sentences_9
(d / dummy)

# ::id unseen_senses_new_sentences_10
# ::snt We hired several more employees to fill out the team.
# ::sense fill-out-04
# ::suppl unseen_senses_new_sentences_10
(d / dummy)

# ::id unseen_senses_new_sentences_11
# ::snt We hired several more employees to fill out the team and now we’re complete.
# ::sense fill-out-04
# ::suppl unseen_senses_new_sentences_11
(d / dummy)

# ::id unseen_senses_new_sentences_12
# ::snt The comedian has a dry sense of humor.
# ::sense dry-04
# ::suppl unseen_senses_new_sentences_12
(d / dummy)

# ::id unseen_senses_new_sentences_13
# ::snt The comedian has a dry sense of humor lacking any warmth.
# ::sense dry-04
# ::suppl unseen_senses_new_sentences_13
(d / dummy)

# ::id unseen_senses_new_sentences_14
# ::snt Jonas paced around the room.
# ::sense pace-02
# ::suppl unseen_senses_new_sentences_14
(d / dummy)

# ::id unseen_senses_new_sentences_15
# ::snt Jonas paced around the room nervously.
# ::sense pace-02
# ::suppl unseen_senses_new_sentences_15
(d / dummy)

# ::id unseen_senses_new_sentences_16
# ::snt The students always sneak cookies from the dining hall.
# ::sense sneak-02
# ::suppl unseen_senses_new_sentences_16
(d / dummy)

# ::id unseen_senses_new_sentences_17
# ::snt The students always sneak cookies from the dining hall and never get caught.
# ::sense sneak-02
# ::suppl unseen_senses_new_sentences_17
(d / dummy)

# ::id unseen_senses_new_sentences_18
# ::snt The couple got spliced in Las Vegas.
# ::sense splice-02
# ::suppl unseen_senses_new_sentences_18
(d / dummy)

# ::id unseen_senses_new_sentences_19
# ::snt The couple got spliced in Las Vegas and spent their honeymoon in Hawaii.
# ::sense splice-02
# ::suppl unseen_senses_new_sentences_19
(d / dummy)

# ::id unseen_senses_new_sentences_20
# ::snt She wrung the wet cloth.
# ::sense wring-02
# ::suppl unseen_senses_new_sentences_20
(d / dummy)

# ::id unseen_senses_new_sentences_21
# ::snt She wrung the wet cloth, so it was no longer dripping.
# ::sense wring-02
# ::suppl unseen_senses_new_sentences_21
(d / dummy)

# ::id unseen_senses_new_sentences_22
# ::snt The Republicans tangled with the Democrats.
# ::sense tangle-03
# ::suppl unseen_senses_new_sentences_22
(d / dummy)

# ::id unseen_senses_new_sentences_23
# ::snt The Republicans tangled with the Democrats over tax cuts.
# ::sense tangle-03
# ::suppl unseen_senses_new_sentences_23
(d / dummy)

# ::id unseen_senses_new_sentences_24
# ::snt What’s the square of 5?
# ::sense square-02
# ::suppl unseen_senses_new_sentences_24
(d / dummy)

# ::id unseen_senses_new_sentences_25
# ::snt What’s the square of 5? Is it 25?
# ::sense square-02
# ::suppl unseen_senses_new_sentences_25
(d / dummy)

# ::id unseen_senses_new_sentences_26
# ::snt This tune really swings!
# ::sense swing-04
# ::suppl unseen_senses_new_sentences_26
(d / dummy)

# ::id unseen_senses_new_sentences_27
# ::snt This tune really swings and has great rhythm!
# ::sense swing-04
# ::suppl unseen_senses_new_sentences_27
(d / dummy)

# ::id unseen_senses_new_sentences_28
# ::snt The lawyers excepted to everything.
# ::sense except-02
# ::suppl unseen_senses_new_sentences_28
(d / dummy)

# ::id unseen_senses_new_sentences_29
# ::snt The lawyers excepted to everything and the judge got mad.
# ::sense except-02
# ::suppl unseen_senses_new_sentences_29
(d / dummy)

# ::id unseen_senses_new_sentences_30
# ::snt The jazz trio jammed all night.
# ::sense jam-02
# ::suppl unseen_senses_new_sentences_30
(d / dummy)

# ::id unseen_senses_new_sentences_31
# ::snt The jazz trio jammed all night to the delight of the audience.
# ::sense jam-02
# ::suppl unseen_senses_new_sentences_31
(d / dummy)

# ::id unseen_senses_new_sentences_32
# ::snt The event wound up around midnight.
# ::sense wind-up-05
# ::suppl unseen_senses_new_sentences_32
(d / dummy)

# ::id unseen_senses_new_sentences_33
# ::snt The event wound up around midnight and everyone went home.
# ::sense wind-up-05
# ::suppl unseen_senses_new_sentences_33
(d / dummy)

# ::id unseen_senses_new_sentences_34
# ::snt The election really wound me up.
# ::sense wind-up-03
# ::suppl unseen_senses_new_sentences_34
(d / dummy)

# ::id unseen_senses_new_sentences_35
# ::snt The election really wound me up and I couldn’t sleep.
# ::sense wind-up-03
# ::suppl unseen_senses_new_sentences_35
(d / dummy)

# ::id unseen_senses_new_sentences_36
# ::snt Ouch that really smarts!
# ::sense smart-03
# ::suppl unseen_senses_new_sentences_36
(d / dummy)

# ::id unseen_senses_new_sentences_37
# ::snt Ouch that really smarts! I got a paper cut.
# ::sense smart-03
# ::suppl unseen_senses_new_sentences_37
(d / dummy)

# ::id unseen_senses_new_sentences_38
# ::snt The vocal folds abduct when you breathe out.
# ::sense abduct-02
# ::suppl unseen_senses_new_sentences_38
(d / dummy)

# ::id unseen_senses_new_sentences_39
# ::snt The vocal folds abduct when you breathe out so the air can escape.
# ::sense abduct-02
# ::suppl unseen_senses_new_sentences_39
(d / dummy)

# ::snt Dana bought tomatoes for a few dollars.
# ::tree templateBuyForAmount(Dana,bought_for,tomatoes,few_dollars)
# ::id bought_for_0
# ::suppl bought_for_0
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Dana"))
   :ARG1 (p2 / tomato)
   :ARG3 (m / monetary-quantity
            :quant (f / few)
            :unit (d / dollar)))

# ::snt Dana acquired tomatoes for a few dollars.
# ::tree templateBuyForAmount(Dana,acquired_for,tomatoes,few_dollars)
# ::id bought_for_1
# ::suppl bought_for_1
(a / acquire-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Dana"))
   :ARG1 (p2 / tomato)
   :ARG3 (m / monetary-quantity
            :quant (f / few)
            :unit (d / dollar)))

# ::snt Kim purchased carrots for a few dollars.
# ::tree templateBuyForAmount(Kim,purchased_for,carrots,few_dollars)
# ::id bought_for_2
# ::suppl bought_for_2
(u_764 / purchase-01
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Kim"))
       :ARG1 (p2 / carrot)
       :ARG3 (m / monetary-quantity
                :quant (f / few)
                :unit (d / dollar)))

# ::snt Kim picked up tomatoes for a few dollars.
# ::tree templateBuyForAmount(Kim,picked_up_for,tomatoes,few_dollars)
# ::id bought_for_3
# ::suppl bought_for_3
(u_767 / pick-up-04
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Kim"))
       :ARG1 (p2 / tomato)
       :ARG3 (m / monetary-quantity
                :quant (f / few)
                :unit (d / dollar)))

# ::snt Kim acquired mushrooms for a few dollars.
# ::tree templateBuyForAmount(Kim,acquired_for,mushrooms,few_dollars)
# ::id bought_for_4
# ::suppl bought_for_4
(a / acquire-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Kim"))
   :ARG1 (p2 / mushroom)
   :ARG3 (m / monetary-quantity
            :quant (f / few)
            :unit (d / dollar)))

# ::snt Dana acquired mushrooms for an unreasonable amount of money.
# ::tree templateBuyForAmount(Dana,acquired_for,mushrooms,unreasonable_amount)
# ::id bought_for_5
# ::suppl bought_for_5
(a / acquire-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Dana"))
   :ARG1 (p2 / mushroom)
   :ARG3 (m2 / monetary-quantity
             :ARG1-of (u / reasonable-02
                         :polarity -)))

# ::snt Kim bought carrots for $10.
# ::tree templateBuyForAmount(Kim,bought_for,carrots,ten_dollars)
# ::id bought_for_6
# ::suppl bought_for_6
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Kim"))
   :ARG1 (p2 / carrot)
   :ARG3 (m / monetary-quantity
            :quant 10
            :unit (d / dollar)))

# ::snt Kim acquired mushrooms for $5.
# ::tree templateBuyForAmount(Kim,acquired_for,mushrooms,five_dollars)
# ::id bought_for_7
# ::suppl bought_for_7
(a / acquire-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Kim"))
   :ARG1 (p2 / mushroom)
   :ARG3 (m / monetary-quantity
            :quant 5
            :unit (d / dollar)))

# ::snt Dana picked up mushrooms for a few dollars.
# ::tree templateBuyForAmount(Dana,picked_up_for,mushrooms,few_dollars)
# ::id bought_for_8
# ::suppl bought_for_8
(u_781 / pick-up-04
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Dana"))
       :ARG1 (p2 / mushroom)
       :ARG3 (m / monetary-quantity
                :quant (f / few)
                :unit (d / dollar)))

# ::snt The chef acquired carrots for a few dollars.
# ::tree templateBuyForAmount(chef,acquired_for,carrots,few_dollars)
# ::id bought_for_9
# ::suppl bought_for_9
(a / acquire-01
   :ARG0 (p / chef)
   :ARG1 (p2 / carrot)
   :ARG3 (m / monetary-quantity
            :quant (f / few)
            :unit (d / dollar)))

# ::snt Kim picked up mushrooms for a few dollars.
# ::tree templateBuyForAmount(Kim,picked_up_for,mushrooms,few_dollars)
# ::id bought_for_10
# ::suppl bought_for_10
(u_784 / pick-up-04
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Kim"))
       :ARG1 (p2 / mushroom)
       :ARG3 (m / monetary-quantity
                :quant (f / few)
                :unit (d / dollar)))

# ::snt Dana bought carrots for almost nothing.
# ::tree templateBuyForAmount(Dana,bought_for,carrots,almost_nothing)
# ::id bought_for_11
# ::suppl bought_for_11
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Dana"))
   :ARG1 (p2 / carrot)
   :ARG3 (a / almost
            :op1 (n2 / nothing)))

# ::snt Dana bought tomatoes for almost nothing.
# ::tree templateBuyForAmount(Dana,bought_for,tomatoes,almost_nothing)
# ::id bought_for_12
# ::suppl bought_for_12
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Dana"))
   :ARG1 (p2 / tomato)
   :ARG3 (a / almost
            :op1 (n2 / nothing)))

# ::snt The chef purchased carrots for almost nothing.
# ::tree templateBuyForAmount(chef,purchased_for,carrots,almost_nothing)
# ::id bought_for_13
# ::suppl bought_for_13
(u_789 / purchase-01
       :ARG0 (p / chef)
       :ARG1 (p2 / carrot)
       :ARG3 (a / almost
                :op1 (n2 / nothing)))

# ::snt Kim acquired carrots for almost nothing.
# ::tree templateBuyForAmount(Kim,acquired_for,carrots,almost_nothing)
# ::id bought_for_14
# ::suppl bought_for_14
(u_790 / acquire-01
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Kim"))
       :ARG1 (p2 / carrot)
       :ARG3 (a / almost
                :op1 (n2 / nothing)))

# ::snt The chef purchased mushrooms for $10.
# ::tree templateBuyForAmount(chef,purchased_for,mushrooms,ten_dollars)
# ::id bought_for_15
# ::suppl bought_for_15
(u_794 / purchase-01
       :ARG0 (p / chef)
       :ARG1 (p2 / mushroom)
       :ARG3 (m / monetary-quantity
                :quant 10
                :unit (d / dollar)))

# ::snt Kim bought tomatoes for an unreasonable amount of money.
# ::tree templateBuyForAmount(Kim,bought_for,tomatoes,unreasonable_amount)
# ::id bought_for_16
# ::suppl bought_for_16
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Kim"))
   :ARG1 (p2 / tomato)
   :ARG3 (m2 / monetary-quantity
             :ARG1-of (u / reasonable-02
                         :polarity -)))

# ::snt Kim picked up carrots for an unreasonable amount of money.
# ::tree templateBuyForAmount(Kim,picked_up_for,carrots,unreasonable_amount)
# ::id bought_for_17
# ::suppl bought_for_17
(u_801 / pick-up-04
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Kim"))
       :ARG1 (p2 / carrot)
       :ARG3 (m2 / monetary-quantity
                 :ARG1-of (u / reasonable-02
                             :polarity -)))

# ::snt The chef picked up carrots for an unreasonable amount of money.
# ::tree templateBuyForAmount(chef,picked_up_for,carrots,unreasonable_amount)
# ::id bought_for_18
# ::suppl bought_for_18
(u_803 / pick-up-04
       :ARG0 (p / chef)
       :ARG1 (p2 / carrot)
       :ARG3 (m2 / monetary-quantity
                 :ARG1-of (u / reasonable-02
                             :polarity -)))

# ::snt The chef picked up tomatoes for almost nothing.
# ::tree templateBuyForAmount(chef,picked_up_for,tomatoes,almost_nothing)
# ::id bought_for_19
# ::suppl bought_for_19
(u_804 / pick-up-04
       :ARG0 (p / chef)
       :ARG1 (p2 / tomato)
       :ARG3 (a / almost
                :op1 (n2 / nothing)))

# ::snt The chef bought tomatoes for $5.
# ::tree templateBuyForAmount(chef,bought_for,tomatoes,five_dollars)
# ::id bought_for_20
# ::suppl bought_for_20
(b / buy-01
   :ARG0 (p / chef)
   :ARG1 (p2 / tomato)
   :ARG3 (m / monetary-quantity
            :quant 5
            :unit (d / dollar)))

# ::snt The chef bought mushrooms for almost nothing.
# ::tree templateBuyForAmount(chef,bought_for,mushrooms,almost_nothing)
# ::id bought_for_21
# ::suppl bought_for_21
(b / buy-01
   :ARG0 (p / chef)
   :ARG1 (p2 / mushroom)
   :ARG3 (a / almost
            :op1 (n2 / nothing)))

# ::snt Kim acquired carrots for a few dollars.
# ::tree templateBuyForAmount(Kim,acquired_for,carrots,few_dollars)
# ::id bought_for_22
# ::suppl bought_for_22
(a / acquire-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Kim"))
   :ARG1 (p2 / carrot)
   :ARG3 (m / monetary-quantity
            :quant (f / few)
            :unit (d / dollar)))

# ::snt The chef bought mushrooms for a few dollars.
# ::tree templateBuyForAmount(chef,bought_for,mushrooms,few_dollars)
# ::id bought_for_23
# ::suppl bought_for_23
(b / buy-01
   :ARG0 (p / chef)
   :ARG1 (p2 / mushroom)
   :ARG3 (m / monetary-quantity
            :quant (f / few)
            :unit (d / dollar)))

# ::snt Dana picked up mushrooms for almost nothing.
# ::tree templateBuyForAmount(Dana,picked_up_for,mushrooms,almost_nothing)
# ::id bought_for_24
# ::suppl bought_for_24
(u_810 / pick-up-04
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Dana"))
       :ARG1 (p2 / mushroom)
       :ARG3 (a / almost
                :op1 (n2 / nothing)))

# ::snt Kim picked up tomatoes for the soup.
# ::tree templateBuyForDish(Kim,picked_up,tomatoes,soup)
# ::id bought_for_25
# ::suppl bought_for_25
(u_811 / pick-up-04
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Kim"))
       :ARG1 (p2 / tomato
                 :purpose (u_814 / soup)))

# ::snt Dana purchased carrots for the salad.
# ::tree templateBuyForDish(Dana,purchased,carrots,salad)
# ::id bought_for_26
# ::suppl bought_for_26
(u_815 / purchase-01
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Dana"))
       :ARG1 (p2 / carrot
                 :purpose (u_818 / salad)))

# ::snt Kim bought carrots for the pasta sauce.
# ::tree templateBuyForDish(Kim,bought,carrots,pasta_sauce)
# ::id bought_for_27
# ::suppl bought_for_27
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Kim"))
   :ARG1 (p2 / carrot
             :purpose (u_821 / sauce
                             :mod (t / pasta))))

# ::snt Dana purchased mushrooms for the salad.
# ::tree templateBuyForDish(Dana,purchased,mushrooms,salad)
# ::id bought_for_28
# ::suppl bought_for_28
(u_822 / purchase-01
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Dana"))
       :ARG1 (p2 / mushroom
                 :purpose (u_825 / salad)))

# ::snt The chef purchased carrots for the salad.
# ::tree templateBuyForDish(chef,purchased,carrots,salad)
# ::id bought_for_29
# ::suppl bought_for_29
(u_826 / purchase-01
       :ARG0 (p / chef)
       :ARG1 (p2 / carrot
                 :purpose (u_827 / salad)))

# ::snt Kim purchased carrots for the pasta sauce.
# ::tree templateBuyForDish(Kim,purchased,carrots,pasta_sauce)
# ::id bought_for_30
# ::suppl bought_for_30
(u_828 / purchase-01
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Kim"))
       :ARG1 (p2 / carrot
                 :purpose (u_831 / sauce
                                 :mod (t / pasta))))

# ::snt The chef acquired mushrooms for the pasta sauce.
# ::tree templateBuyForDish(chef,acquired,mushrooms,pasta_sauce)
# ::id bought_for_31
# ::suppl bought_for_31
(a / acquire-01
   :ARG0 (p / chef)
   :ARG1 (p2 / mushroom
             :purpose (u_832 / sauce
                             :mod (t / pasta))))

# ::snt Dana picked up carrots for the pasta sauce.
# ::tree templateBuyForDish(Dana,picked_up,carrots,pasta_sauce)
# ::id bought_for_32
# ::suppl bought_for_32
(u_833 / pick-up-04
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Dana"))
       :ARG1 (p2 / carrot
                 :purpose (u_836 / sauce
                                 :mod (t / pasta))))

# ::snt Dana acquired mushrooms for the pasta sauce.
# ::tree templateBuyForDish(Dana,acquired,mushrooms,pasta_sauce)
# ::id bought_for_33
# ::suppl bought_for_33
(a / acquire-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Dana"))
   :ARG1 (p2 / mushroom
             :purpose (u_839 / sauce
                             :mod (t / pasta))))

# ::snt Kim bought carrots for the salad.
# ::tree templateBuyForDish(Kim,bought,carrots,salad)
# ::id bought_for_34
# ::suppl bought_for_34
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Kim"))
   :ARG1 (p2 / carrot
             :purpose (u_842 / salad)))

# ::snt Dana bought tomatoes for the salad.
# ::tree templateBuyForDish(Dana,bought,tomatoes,salad)
# ::id bought_for_35
# ::suppl bought_for_35
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Dana"))
   :ARG1 (p2 / tomato
             :purpose (u_845 / salad)))

# ::snt Dana bought mushrooms for the pasta sauce.
# ::tree templateBuyForDish(Dana,bought,mushrooms,pasta_sauce)
# ::id bought_for_36
# ::suppl bought_for_36
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Dana"))
   :ARG1 (p2 / mushroom
             :purpose (u_848 / sauce
                             :mod (t / pasta))))

# ::snt Kim picked up carrots for the pasta sauce.
# ::tree templateBuyForDish(Kim,picked_up,carrots,pasta_sauce)
# ::id bought_for_37
# ::suppl bought_for_37
(u_849 / pick-up-04
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Kim"))
       :ARG1 (p2 / carrot
                 :purpose (u_852 / sauce
                                 :mod (t / pasta))))

# ::snt Kim picked up carrots for the soup.
# ::tree templateBuyForDish(Kim,picked_up,carrots,soup)
# ::id bought_for_38
# ::suppl bought_for_38
(u_853 / pick-up-04
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Kim"))
       :ARG1 (p2 / carrot
                 :purpose (u_856 / soup)))

# ::snt The chef bought carrots for the pasta sauce.
# ::tree templateBuyForDish(chef,bought,carrots,pasta_sauce)
# ::id bought_for_39
# ::suppl bought_for_39
(b / buy-01
   :ARG0 (p / chef)
   :ARG1 (p2 / carrot
             :purpose (u_857 / sauce
                             :mod (t / pasta))))

# ::snt The chef acquired tomatoes for the soup.
# ::tree templateBuyForDish(chef,acquired,tomatoes,soup)
# ::id bought_for_40
# ::suppl bought_for_40
(a / acquire-01
   :ARG0 (p / chef)
   :ARG1 (p2 / tomato
             :purpose (u_858 / soup)))

# ::snt The chef acquired carrots for the salad.
# ::tree templateBuyForDish(chef,acquired,carrots,salad)
# ::id bought_for_41
# ::suppl bought_for_41
(a / acquire-01
   :ARG0 (p / chef)
   :ARG1 (p2 / carrot
             :purpose (u_859 / salad)))

# ::snt Dana purchased mushrooms for the pasta sauce.
# ::tree templateBuyForDish(Dana,purchased,mushrooms,pasta_sauce)
# ::id bought_for_42
# ::suppl bought_for_42
(u_860 / purchase-01
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Dana"))
       :ARG1 (p2 / mushroom
                 :purpose (u_863 / sauce
                                 :mod (t / pasta))))

# ::snt Kim purchased mushrooms for the pasta sauce.
# ::tree templateBuyForDish(Kim,purchased,mushrooms,pasta_sauce)
# ::id bought_for_43
# ::suppl bought_for_43
(u_864 / purchase-01
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Kim"))
       :ARG1 (p2 / mushroom
                 :purpose (u_867 / sauce
                                 :mod (t / pasta))))

# ::snt Dana acquired carrots for the pasta sauce.
# ::tree templateBuyForDish(Dana,acquired,carrots,pasta_sauce)
# ::id bought_for_44
# ::suppl bought_for_44
(a / acquire-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Dana"))
   :ARG1 (p2 / carrot
             :purpose (u_870 / sauce
                             :mod (t / pasta))))

# ::snt Kim acquired mushrooms for the salad.
# ::tree templateBuyForDish(Kim,acquired,mushrooms,salad)
# ::id bought_for_45
# ::suppl bought_for_45
(a / acquire-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Kim"))
   :ARG1 (p2 / mushroom
             :purpose (u_873 / salad)))

# ::snt The chef acquired carrots for the pasta sauce.
# ::tree templateBuyForDish(chef,acquired,carrots,pasta_sauce)
# ::id bought_for_46
# ::suppl bought_for_46
(a / acquire-01
   :ARG0 (p / chef)
   :ARG1 (p2 / carrot
             :purpose (u_874 / sauce
                             :mod (t / pasta))))

# ::snt Dana picked up mushrooms for the pasta sauce.
# ::tree templateBuyForDish(Dana,picked_up,mushrooms,pasta_sauce)
# ::id bought_for_47
# ::suppl bought_for_47
(u_875 / pick-up-04
       :ARG0 (p / person
                :wiki -
                :name (n / name
                         :op1 "Dana"))
       :ARG1 (p2 / mushroom
                 :purpose (u_878 / sauce
                                 :mod (t / pasta))))

# ::snt Dana bought mushrooms for the salad.
# ::tree templateBuyForDish(Dana,bought,mushrooms,salad)
# ::id bought_for_48
# ::suppl bought_for_48
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Dana"))
   :ARG1 (p2 / mushroom
             :purpose (u_881 / salad)))

# ::snt Kim bought carrots for the soup.
# ::tree templateBuyForDish(Kim,bought,carrots,soup)
# ::id bought_for_49
# ::suppl bought_for_49
(b / buy-01
   :ARG0 (p / person
            :wiki -
            :name (n / name
                     :op1 "Kim"))
   :ARG1 (p2 / carrot
             :purpose (u_884 / soup)))

# ::snt A fantastic plate
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size_null(NP_age_null(NP_shape_null(NP_colour_null(NP_material_null(plate))))),fantastic)))
# ::id adjectives_sanity_check_0
# ::suppl adjectives_sanity_check_0
(r / plate
   :ARG1 (u_1 / fantastic-02))

# ::snt A beautiful container
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size_null(NP_age_null(NP_shape_null(NP_colour_null(NP_material_null(container))))),beautiful)))
# ::id adjectives_sanity_check_1
# ::suppl adjectives_sanity_check_1
(r / container
   :ARG1-of (u_2 / beautiful-02))

# ::snt A strange plate
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size_null(NP_age_null(NP_shape_null(NP_colour_null(NP_material_null(plate))))),strange)))
# ::id adjectives_sanity_check_2
# ::suppl adjectives_sanity_check_2
(r / plate
   :mod (u_3 / strange))

# ::snt A big container
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size(NP_age_null(NP_shape_null(NP_colour_null(NP_material_null(container)))),big))))
# ::id adjectives_sanity_check_3
# ::suppl adjectives_sanity_check_3
(r / container
   :ARG1-of (u_4 / big-01))

# ::snt A small plate
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size(NP_age_null(NP_shape_null(NP_colour_null(NP_material_null(plate)))),small))))
# ::id adjectives_sanity_check_4
# ::suppl adjectives_sanity_check_4
(r / plate
   :ARG1-of (u_5 / small-01))

# ::snt A new container
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size_null(NP_age(NP_shape_null(NP_colour_null(NP_material_null(container))),new)))))
# ::id adjectives_sanity_check_5
# ::suppl adjectives_sanity_check_5
(r / container
   :ARG1-of (u_6 / new-01))

# ::snt A antique plate
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size_null(NP_age(NP_shape_null(NP_colour_null(NP_material_null(plate))),antique)))))
# ::id adjectives_sanity_check_6
# ::suppl adjectives_sanity_check_6
(r / plate
   :mod (u_7 / antique))

# ::snt A round plate
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size_null(NP_age_null(NP_shape(NP_colour_null(NP_material_null(plate)),round))))))
# ::id adjectives_sanity_check_7
# ::suppl adjectives_sanity_check_7
(r / plate
   :ARG1-of (u_8 / round-06))

# ::snt A square plate
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size_null(NP_age_null(NP_shape(NP_colour_null(NP_material_null(plate)),square))))))
# ::id adjectives_sanity_check_8
# ::suppl adjectives_sanity_check_8
(r / plate
   :mod (u_9 / square))

# ::snt A pale plate
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size_null(NP_age_null(NP_shape_null(NP_colour(NP_material_null(plate),pale)))))))
# ::id adjectives_sanity_check_9
# ::suppl adjectives_sanity_check_9
(r / plate
   :ARG1-of (u_10 / pale-03))

# ::snt A dark container
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size_null(NP_age_null(NP_shape_null(NP_colour(NP_material_null(container),dark)))))))
# ::id adjectives_sanity_check_10
# ::suppl adjectives_sanity_check_10
(r / container
   :ARG1-of (u_11 / dark-02))

# ::id unseen_roles_new_sentences_0
# ::snt The car accelerated further, from 30 mph to 40 mph.
# ::suppl unseen_roles_new_sentences_0
(d / dummy)

# ::id unseen_roles_new_sentences_1
# ::snt I acquired a collector’s item from an antiques shop for my mother.
# ::suppl unseen_roles_new_sentences_1
(d / dummy)

# ::id unseen_roles_new_sentences_2
# ::snt We blasted a gaping hole into the side of a dumpster.
# ::suppl unseen_roles_new_sentences_2
(d / dummy)

# ::id unseen_roles_new_sentences_3
# ::snt We beefed up our parser by several Smatch points with pre-trained vectors.
# ::suppl unseen_roles_new_sentences_3
(d / dummy)

# ::id unseen_roles_new_sentences_4
# ::snt The kids bounced the ball five meters onto the roof.
# ::suppl unseen_roles_new_sentences_4
(d / dummy)

# ::id unseen_roles_new_sentences_5
# ::snt The archaeologists decoded the text from Sumarian into English.
# ::suppl unseen_roles_new_sentences_5
(d / dummy)

# ::id unseen_roles_new_sentences_6
# ::snt The accuracy of our model degenerated by 20 points from 80 points to 60 points.
# ::suppl unseen_roles_new_sentences_6
(d / dummy)

# ::id unseen_roles_new_sentences_7
# ::snt A 100% explosion of the Earth’s population, from 4 billion to 8 billion, occurred recently.
# ::suppl unseen_roles_new_sentences_7
(d / dummy)

# ::id unseen_roles_new_sentences_8
# ::snt We fabricated evidence from materials in my garage for the prosecutor.
# ::suppl unseen_roles_new_sentences_8
(d / dummy)

# ::id unseen_roles_new_sentences_9
# ::snt The Nazis goosestepped from the train station to the parliament, along the main road.
# ::suppl unseen_roles_new_sentences_9
(d / dummy)

# ::id unseen_roles_new_sentences_10
# ::snt The government plans to knock down housing prices 30% from the current record high with their new bill.
# ::suppl unseen_roles_new_sentences_10
(d / dummy)

# ::id unseen_roles_new_sentences_11
# ::snt I leased my spare room to a professor for a month for $500.
# ::suppl unseen_roles_new_sentences_11
(d / dummy)

# ::id unseen_roles_new_sentences_12
# ::snt I organized the books from messy stacks into neat rows.
# ::suppl unseen_roles_new_sentences_12
(d / dummy)

# ::id unseen_roles_new_sentences_13
# ::snt With a soft cloth, we polished up the silver to a bright shine.
# ::suppl unseen_roles_new_sentences_13
(d / dummy)

# ::id unseen_roles_new_sentences_14
# ::snt Mary won John over to her side.
# ::suppl unseen_roles_new_sentences_14
(d / dummy)

# ::id unseen_roles_new_sentences_15
# ::snt They vandalized the new building with graffiti.
# ::suppl unseen_roles_new_sentences_15
(d / dummy)

# ::snt The girls who we claimed liked the doctor actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(girls,subj_relA(CP_gap_end_recursion(CP_with_gap_base(claimed,we)),liked),doctor)))
# ::id deep_recursion_rc_contrastive_coref_sanity_check_0
# ::suppl deep_recursion_rc_contrastive_coref_sanity_check_0
(u_189 / hate-01
       :ARG0 (r / girl
                :ARG0-of (u_188 / like-01
                                :ARG1 (d / doctor
                                         :ARG1-of u_189)
                                :ARG1-of (u_186 / claim-01
                                                :ARG0 (u_187 / we))))
       :concession (a2 / after-all)
       :ARG1-of (a / actual-02))

# ::snt The men who you assumed hated the lawyer actually liked her after all
# ::tree TP_intrB(liked_fake_intransitive_her,DP_the_with_RC_B(DP_RC_B(men,subj_relB(CP_gap_end_recursion(CP_with_gap_base(assumed,you)),hated),lawyer)))
# ::id deep_recursion_rc_contrastive_coref_sanity_check_1
# ::suppl deep_recursion_rc_contrastive_coref_sanity_check_1
(u_193 / like-01
       :ARG0 (r / man
                :ARG0-of (u_192 / hate-01
                                :ARG1 (m / lawyer
                                         :ARG1-of u_193)
                                :ARG1-of (u_190 / assume-02
                                                :ARG0 (u_191 / you))))
       :concession (a2 / after-all)
       :ARG1-of (a / actual-02))

# ::snt The women who I said liked the astronaut actually hated her after all
# ::tree TP_intrA(hated_fake_intransitive_her,DP_the_with_RC_A(DP_RC_A(women,subj_relA(CP_gap_end_recursion(CP_with_gap_base(said,I)),liked),astronaut)))
# ::id deep_recursion_rc_contrastive_coref_sanity_check_2
# ::suppl deep_recursion_rc_contrastive_coref_sanity_check_2
(u_198 / hate-01
       :ARG0 (r / woman
                :ARG0-of (u_196 / like-01
                                :ARG1 (a / astronaut
                                         :ARG1-of u_198)
                                :ARG1-of (u_194 / say-01
                                                :ARG0 (u_195 / i))))
       :concession (a2 / after-all)
       :ARG1-of (u_197 / actual-02))

# ::snt The kids who the boys thought hated the soldier actually liked him after all
# ::tree TP_intrB(liked_fake_intransitive_him,DP_the_with_RC_B(DP_RC_B(kids,subj_relB(CP_gap_end_recursion(CP_with_gap_base(thought,DP_the(NP_unary(boys)))),hated),soldier)))
# ::id deep_recursion_rc_contrastive_coref_sanity_check_3
# ::suppl deep_recursion_rc_contrastive_coref_sanity_check_3
(u_203 / like-01
       :ARG0 (r / kid
                :ARG0-of (u_202 / hate-01
                                :ARG1 (s / soldier
                                         :ARG1-of u_203)
                                :ARG1-of (u_199 / think-01
                                                :ARG0 (u_200 / boy))))
       :concession (a2 / after-all)
       :ARG1-of (a / actual-02))

# ::snt The doctor who we claimed liked the lawyer actually hated him after all
# ::tree TP_intrA(hated_fake_intransitive_him,DP_the_with_RC_A(DP_RC_A(unary_N_adapter(doctor),subj_relA(CP_gap_end_recursion(CP_with_gap_base(claimed,we)),liked),lawyer)))
# ::id deep_recursion_rc_contrastive_coref_sanity_check_4
# ::suppl deep_recursion_rc_contrastive_coref_sanity_check_4
(u_206 / hate-01
       :ARG0 (d / doctor
                :ARG0-of (r / like-01
                            :ARG1 (m / lawyer
                                     :ARG1-of u_206)
                            :ARG1-of (u_204 / claim-01
                                            :ARG0 (u_205 / we))))
       :concession (a2 / after-all)
       :ARG1-of (a / actual-02))

# ::id winograd_0
# ::snt The city councilmen refused the demonstrators a permit because they feared violence.
# ::suppl winograd_0
(r / refuse-01
   :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                        :ARG1 (c / city)
                        :ARG2 (c2 / councilman)))
   :ARG1 (p2 / permit-01)
   :ARG2 (p3 / person
             :ARG0-of (d / demonstrate-01))
   :ARG1-of (c3 / cause-01
                :ARG0 (f / fear-01
                         :ARG0 p
                         :ARG1 (v / violence))))

# ::id winograd_1
# ::snt The city councilmen refused the demonstrators a permit because they advocated violence.
# ::suppl winograd_1
(r / refuse-01
   :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                        :ARG1 (c / city)
                        :ARG2 (c2 / councilman)))
   :ARG1 (p2 / permit-01)
   :ARG2 (p3 / person
             :ARG0-of (d / demonstrate-01))
   :ARG1-of (c3 / cause-01
                :ARG1 (a / advocate-01
                         :ARG0 p3
                         :ARG1 (v / violence))))

# ::id winograd_2
# ::snt The trophy doesn't fit into the brown suitcase because it is too large.
# ::suppl winograd_2
(f / fit-06
   :polarity -
   :ARG1 (t / trophy)
   :ARG2 (s / suitcase
            :ARG1-of (b / brown-01))
   :ARG1-of (c / cause-01
               :ARG0 (h / have-degree-91
                        :ARG1 t
                        :ARG2 (l / large)
                        :ARG3 (t2 / too))))

# ::id winograd_3
# ::snt The trophy doesn't fit into the brown suitcase because it is too small.
# ::suppl winograd_3
(f / fit-06
   :polarity -
   :ARG1 (t / trophy)
   :ARG2 (s / suitcase
            :ARG1-of (b / brown-01))
   :ARG1-of (c / cause-01
               :ARG0 (h / have-degree-91
                        :ARG1 s
                        :ARG2 (s2 / small)
                        :ARG3 (t2 / too))))

# ::id winograd_4
# ::snt Joan made sure to thank Susan for all the help she had recieved.
# ::suppl winograd_4
(e / ensure-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Joan"))
   :ARG1 (t / thank-01
            :ARG0 p
            :ARG1 (p2 / person
                      :name (n2 / name
                                :op1 "Susan"))
            :ARG2 (h / help-01
                     :ARG1-of (r / receive-01
                                 :ARG0 p)
                     :mod (a / all))))

# ::id winograd_5
# ::snt Joan made sure to thank Susan for all the help she had given.
# ::suppl winograd_5
(e / ensure-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Joan"))
   :ARG1 (t / thank-01
            :ARG0 p
            :ARG1 (p2 / person
                      :name (n2 / name
                                :op1 "Susan"))
            :ARG2 (h / help-01
                     :ARG1-of (g / give-01
                                 :ARG0 p2)
                     :mod (a / all))))

# ::id winograd_6
# ::snt Paul tried to call George on the phone, but he wasn't successful.
# ::suppl winograd_6
(c / contrast-01
   :ARG1 (t / try-01
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Paul"))
            :ARG1 (c2 / call-02
                      :ARG0 p
                      :ARG1 (p2 / person
                                :name (n2 / name
                                          :op1 "George"))
                      :instrument (p3 / phone)))
   :ARG2 (s / succeed-01
            :polarity -
            :ARG0 p))

# ::id winograd_7
# ::snt Paul tried to call George on the phone, but he wasn't available.
# ::suppl winograd_7
(c / contrast-01
   :ARG1 (t / try-01
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Paul"))
            :ARG1 (c2 / call-02
                      :ARG0 p
                      :ARG1 (p2 / person
                                :name (n2 / name
                                          :op1 "George"))
                      :instrument (p3 / phone)))
   :ARG2 (a / available-02
            :polarity -
            :ARG2 p2))

# ::id winograd_8
# ::snt The lawyer asked the witness a question, but he was reluctant to repeat it.
# ::suppl winograd_8
(c / contrast-01
   :ARG1 (a / ask-01
            :ARG0 (l / lawyer)
            :ARG1 (q / question-01)
            :ARG2 (p / person
                     :ARG0-of (w / witness-01)))
   :ARG2 (r / reluctant-01
            :ARG0 l
            :ARG1 (r2 / repeat-01
                      :ARG0 l
                      :ARG1 q)))

# ::id winograd_9
# ::snt The lawyer asked the witness a question, but he was reluctant to answer it.
# ::suppl winograd_9
(c / contrast-01
   :ARG1 (a / ask-01
            :ARG0 (l / lawyer)
            :ARG1 (q / question-01)
            :ARG2 (p / person
                     :ARG0-of (w / witness-01)))
   :ARG2 (r / reluctant-01
            :ARG0 p
            :ARG1 (a2 / answer-01
                      :ARG0 p
                      :ARG1 q)))

# ::id winograd_10
# ::snt The delivery truck zoomed by the school bus because it was going so fast.
# ::suppl winograd_10
(z / zoom-01
   :ARG1 (t / truck
            :purpose (d / deliver-01))
   :prep-by (b / bus
               :mod (s / school))
   :ARG1-of (c / cause-01
               :ARG0 (g / go-01
                        :ARG1 t
                        :manner (f / fast-02
                                   :degree (s2 / so)))))

# ::id winograd_11
# ::snt The delivery truck zoomed by the school bus because it was going so slow.
# ::suppl winograd_11
(z / zoom-01
   :ARG1 (t / truck
            :purpose (d / deliver-01))
   :prep-by (b / bus
               :mod (s / school))
   :ARG1-of (c / cause-01
               :ARG0 (g / go-01
                        :ARG1 b
                        :manner (s2 / slow-05
                                    :degree (s3 / so)))))

# ::id winograd_12
# ::snt Frank felt vindicated when his longtime rival Bill revealed that he was the winner of the competition.
# ::suppl winograd_12
(f / feel-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Frank"))
   :ARG1 (v / vindicate-01
            :ARG1 p)
   :time (r / reveal-01
            :ARG0 (p2 / person
                      :name (n2 / name
                                :op1 "Bill")
                      :ARG0-of (h / have-rel-role-91
                                  :ARG1 p
                                  :ARG2 (r2 / rival
                                            :duration (l / longtime))))
            :ARG1 (w / win-01
                     :ARG0 p
                     :ARG2 (c / competition))))

# ::id winograd_13
# ::snt Frank felt crushed when his longtime rival Bill revealed that he was the winner of the competition.
# ::suppl winograd_13
(f / feel-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Frank"))
   :ARG1 (c2 / crush
             :ARG1 p)
   :time (r / reveal-01
            :ARG0 (p2 / person
                      :name (n2 / name
                                :op1 "Bill")
                      :ARG0-of (h / have-rel-role-91
                                  :ARG1 p
                                  :ARG2 (r2 / rival
                                            :duration (l / longtime))))
            :ARG1 (w / win-01
                     :ARG0 p2
                     :ARG2 (c / competition))))

# ::id winograd_14
# ::snt The man couldn't lift his son because he was so weak.
# ::suppl winograd_14
(p / possible-01
   :polarity -
   :ARG1 (l / lift-01
            :ARG0 (m / man)
            :ARG1 (p2 / person
                      :ARG0-of (h / have-rel-role-91
                                  :ARG2 (s / son)
                                  :ARG1 m)))
   :ARG1-of (c / cause-01
               :ARG0 (w / weak-02
                        :ARG1 m
                        :degree (s2 / so))))

# ::id winograd_15
# ::snt The man couldn't lift his son because he was so heavy.
# ::suppl winograd_15
(p / possible-01
   :polarity -
   :ARG1 (l / lift-01
            :ARG0 (m / man)
            :ARG1 (p2 / person
                      :ARG0-of (h / have-rel-role-91
                                  :ARG2 (s / son)
                                  :ARG1 m)))
   :ARG1-of (c / cause-01
               :ARG0 (h2 / heavy-01
                         :ARG1 p2
                         :degree (s2 / so))))

# ::id winograd_16
# ::snt The large ball crashed right through the table because it was made of steel.
# ::suppl winograd_16
(c / crash-01
   :ARG0 (b / ball
            :mod (l / large))
   :path (t / table
            :mod (r / right-yy))
   :ARG1-of (c2 / cause-01
                :ARG0 (m / make-01
                         :ARG1 b
                         :ARG2 (s / steel))))

# ::id winograd_17
# ::snt The large ball crashed right through the table because it was made of styrofoam.
# ::suppl winograd_17
(c / crash-01
   :ARG0 (b / ball
            :mod (l / large))
   :path (t / table
            :mod (r / right-yy))
   :ARG1-of (c2 / cause-01
                :ARG0 (m / make-01
                         :ARG1 t
                         :ARG2 (s / styrofoam))))

# ::id winograd_18
# ::snt John couldn't see the stage with Billy in front of him because he is so short.
# ::suppl winograd_18
(p / possible-01
   :polarity -
   :ARG1 (s / see-01
            :ARG0 (p2 / person
                      :name (n / name
                               :op1 "John"))
            :ARG1 (s2 / stage))
   :ARG1-of (c / cause-01
               :ARG0 (s3 / short-07
                         :ARG1 p2
                         :degree (s4 / so)))
   :ARG1-of (c2 / cause-01
                :ARG1 (b / be-located-at-91
                         :ARG1 (p3 / person
                                   :name (n2 / name
                                             :op1 "Billy"))
                         :ARG2 (i2 / in-front-of
                                   :op1 p2))))

# ::id winograd_19
# ::snt John couldn't see the stage with Billy in front of him because he is so tall.
# ::suppl winograd_19
(p / possible-01
   :polarity -
   :ARG1 (s / see-01
            :ARG0 (p2 / person
                      :name (n / name
                               :op1 "John"))
            :ARG1 (s2 / stage))
   :ARG1-of (c / cause-01
               :ARG0 (t / tall-01
                        :ARG1 p3
                        :degree (s4 / so)))
   :ARG1-of (c2 / cause-01
                :ARG1 (b / be-located-at-91
                         :ARG1 (p3 / person
                                   :name (n2 / name
                                             :op1 "Billy"))
                         :ARG2 (i2 / in-front-of
                                   :op1 p2))))

# ::id winograd_20
# ::snt Tom threw his schoolbag down to Ray after he reached the top of the stairs.
# ::suppl winograd_20
(t / throw-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Tom"))
   :ARG1 (b / bag
            :purpose (s / school))
   :ARG2 (p2 / person
             :name (n2 / name
                       :op1 "Ray"))
   :direction (d / down)
   :time (a / after
            :op1 (r / reach-01
                    :ARG0 p
                    :ARG1 (t2 / top
                              :part-of (s2 / stairs)))))

# ::id winograd_21
# ::snt Tom threw his schoolbag down to Ray after he reached the bottom of the stairs.
# ::suppl winograd_21
(t / throw-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Tom"))
   :ARG1 (b / bag
            :purpose (s / school))
   :ARG2 (p2 / person
             :name (n2 / name
                       :op1 "Ray"))
   :direction (d / down)
   :time (a / after
            :op1 (r / reach-01
                    :ARG0 p2
                    :ARG1 (b2 / bottom
                              :part-of (s2 / stairs)))))

# ::id winograd_22
# ::snt Although they ran at about the same speed, Sue beat Sally because she had such a good start.
# ::suppl winograd_22
(b / beat-03
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sue"))
   :ARG1 (p2 / person
             :name (n2 / name
                       :op1 "Sally"))
   :ARG1-of (c / cause-01
               :ARG0 (h / have-06
                        :ARG0 p
                        :ARG1 (s / start-01
                                 :ARG1-of (g / good-02
                                             :mod (s2 / such)))))
   :concession (s3 / same-01
                   :ARG1 p
                   :ARG2 p2
                   :ARG3 (s4 / speed
                             :mod (r / run-02))
                   :degree (a / about)))

# ::id winograd_23
# ::snt Although they ran at about the same speed, Sue beat Sally because she had such a bad start.
# ::suppl winograd_23
(b / beat-03
   :ARG0 (p / person
            :name (n / name
                     :op1 "Sue"))
   :ARG1 (p2 / person
             :name (n2 / name
                       :op1 "Sally"))
   :ARG1-of (c / cause-01
               :ARG0 (h / have-06
                        :ARG0 p2
                        :ARG1 (s / start-01
                                 :ARG1-of (b2 / bad
                                              :mod (s2 / such)))))
   :concession (s3 / same-01
                   :ARG1 p
                   :ARG2 p2
                   :ARG3 (s4 / speed
                             :mod (r / run-02))
                   :degree (a / about)))

# ::id winograd_24
# ::snt The sculpture rolled off the shelf because it wasn't anchored.
# ::suppl winograd_24
(r / roll-01
   :ARG1 (s / sculpture)
   :direction (o / off
                 :op1 (s2 / shelf))
   :ARG1-of (c / cause-01
               :ARG0 (a / anchor-01
                        :polarity -
                        :ARG1 s)))

# ::id winograd_25
# ::snt The sculpture rolled off the shelf because it wasn't level.
# ::suppl winograd_25
(r / roll-01
   :ARG1 (s / sculpture)
   :direction (o / off
                 :op1 (s2 / shelf))
   :ARG1-of (c / cause-01
               :ARG0 (l / level-04
                        :polarity -
                        :ARG1 s2)))

# ::id winograd_26
# ::snt Sam's drawing was hung just above Tina's and it did look much better with another one below it.
# ::suppl winograd_26
(a / and
   :op1 (h / hang-01
           :ARG1 (d / drawing
                    :poss (p / person
                             :name (n / name
                                      :op1 "Sam")))
           :location (a2 / above
                         :op1 (d2 / drawing
                                  :poss (p2 / person
                                            :name (n2 / name
                                                      :op1 "Tina")))
                         :mod (j / just)))
   :op2 (l / look-02
           :ARG0 d
           :ARG1 (g / good-02
                    :ARG2-of (h2 / have-degree-91
                                 :ARG3 (m / more
                                          :quant (m2 / much))))
           :prep-with (d3 / drawing
                          :mod (a3 / another)
                          :location (b / below
                                       :op1 d))))

# ::id winograd_27
# ::snt Sam's drawing was hung just above Tina's and it did look much better with another one above it.
# ::suppl winograd_27
(a / and
   :op1 (h / hang-01
           :ARG1 (d / drawing
                    :poss (p / person
                             :name (n / name
                                      :op1 "Sam")))
           :location (a2 / above
                         :op1 (d2 / drawing
                                  :poss (p2 / person
                                            :name (n2 / name
                                                      :op1 "Tina")))
                         :mod (j / just)))
   :op2 (l / look-02
           :ARG0 d2
           :ARG1 (g / good-02
                    :ARG2-of (h2 / have-degree-91
                                 :ARG3 (m / more
                                          :quant (m2 / much))))
           :prep-with (d3 / drawing
                          :mod (a3 / another)
                          :location (a4 / above
                                        :op1 d2))))

# ::id winograd_28
# ::snt Anna did a lot better than her good friend Lucy on the test because she had studied so hard.
# ::suppl winograd_28
(h / have-degree-91
   :ARG1 (d / do-02
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Anna"))
            :ARG2 (t / test))
   :ARG2 (g / good-02)
   :ARG3 (m / more
            :degree (l / lot))
   :ARG4 (d2 / do-02
             :ARG0 (p2 / person
                       :name (n2 / name
                                 :op1 "Lucy")
                       :ARG0-of (h2 / have-rel-role-91
                                    :ARG1 p
                                    :ARG2 (f / friend
                                             :ARG1-of (g2 / good-02))))
             :ARG2 t)
   :ARG1-of (c / cause-01
               :ARG0 (s / study-01
                        :ARG0 p
                        :manner (h3 / hard-02
                                    :degree (s2 / so)))))

# ::id winograd_29
# ::snt Anna did a lot worse than her good friend Lucy on the test because she had studied so hard.
# ::suppl winograd_29
(h / have-degree-91
   :ARG1 (d / do-02
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Anna"))
            :ARG2 (t / test))
   :ARG2 (g / good-02)
   :ARG3 (l2 / less
             :degree (l / lot))
   :ARG4 (d2 / do-02
             :ARG0 (p2 / person
                       :name (n2 / name
                                 :op1 "Lucy")
                       :ARG0-of (h2 / have-rel-role-91
                                    :ARG1 p
                                    :ARG2 (f / friend
                                             :ARG1-of (g2 / good-02))))
             :ARG2 t)
   :ARG1-of (c / cause-01
               :ARG0 (s / study-01
                        :ARG0 p2
                        :manner (h3 / hard-02
                                    :degree (s2 / so)))))

# ::id winograd_30
# ::snt Anne gave birth to a daughter last month. She is a very charming woman.
# ::suppl winograd_30
(m / multi-sentence
   :snt1 (b / bear-02
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Anne"))
            :ARG1 (p2 / person
                      :ARG0-of (h / have-rel-role-91
                                  :ARG1 p
                                  :ARG2 (d / daughter)))
            :time (m2 / month
                      :mod (l / last)))
   :snt2 (w / woman
            :domain p
            :ARG0-of (c / charm-01
                        :degree (v / very))))

# ::id winograd_31
# ::snt Anne gave birth to a daughter last month. She is a very charming baby.
# ::suppl winograd_31
(m / multi-sentence
   :snt1 (b / bear-02
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Anne"))
            :ARG1 (p2 / person
                      :ARG0-of (h / have-rel-role-91
                                  :ARG1 p
                                  :ARG2 (d / daughter)))
            :time (m2 / month
                      :mod (l / last)))
   :snt2 (b2 / baby
             :domain p2
             :ARG0-of (c / charm-01
                         :degree (v / very))))

# ::id winograd_32
# ::snt Alice tried frantically to stop her daughter from chatting at the party, leaving us to wonder why she was behaving so strangely.
# ::suppl winograd_32
(t / try-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Alice"))
   :ARG1 (s / stop-03
            :ARG0 p
            :ARG1 (p2 / person
                      :ARG0-of (h / have-rel-role-91
                                  :ARG1 p
                                  :ARG2 (d / daughter)))
            :ARG2 (c / chat-01
                     :location (p3 / party)))
   :ARG0-of (l / leave-13
               :ARG1 (w / wonder-01
                        :ARG0 (w2 / we)
                        :ARG1 (t2 / thing
                                  :ARG0-of (c2 / cause-01
                                               :ARG1 (b / behave-01
                                                        :ARG0 p
                                                        :ARG1 (s2 / strange))))))
   :manner (f / frantic))

# ::id winograd_33
# ::snt Alice tried frantically to stop her daughter from barking at the party, leaving us to wonder why she was behaving so strangely.
# ::suppl winograd_33
(t / try-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Alice"))
   :ARG1 (s / stop-03
            :ARG0 p
            :ARG1 (p2 / person
                      :ARG0-of (h / have-rel-role-91
                                  :ARG1 p
                                  :ARG2 (d / daughter)))
            :ARG2 (b2 / bark-01
                      :location (p3 / party)))
   :ARG0-of (l / leave-13
               :ARG1 (w / wonder-01
                        :ARG0 (w2 / we)
                        :ARG1 (t2 / thing
                                  :ARG0-of (c2 / cause-01
                                               :ARG1 (b / behave-01
                                                        :ARG0 p2
                                                        :ARG1 (s2 / strange))))))
   :manner (f / frantic))

# ::id winograd_34
# ::snt I saw Jim yelling at some guy in a military uniform with a huge red beard. I don't know why he was, but he looked very unhappy.
# ::suppl winograd_34
(m / multi-sentence
   :snt1 (s / see-01
            :ARG0 (i / i)
            :ARG1 (y / yell-01
                     :ARG0 (p / person
                              :name (n / name
                                       :op1 "Jim"))
                     :ARG2 (g / guy
                              :mod (s2 / some)
                              :prep-in (u / uniform
                                          :mod (m2 / military))
                              :ARG0-of (h / have-03
                                          :ARG1 (b / beard
                                                   :ARG1-of (r / red-02)
                                                   :mod (h2 / huge))))))
   :snt2 (c / contrast-01
            :ARG1 (k / know-01
                     :polarity -
                     :ARG0 i
                     :ARG1 (t / thing
                              :ARG0-of (c2 / cause-01
                                           :ARG1 y)))
            :ARG2 (l / look-02
                     :ARG0 p
                     :ARG1 (h3 / happy-01
                               :polarity -
                               :degree (v / very)))))

# ::id winograd_35
# ::snt I saw Jim yelling at some guy in a military uniform with a huge red beard. I don't know who he was, but he looked very unhappy.
# ::suppl winograd_35
(m / multi-sentence
   :snt1 (s / see-01
            :ARG0 (i / i)
            :ARG1 (y / yell-01
                     :ARG0 (p / person
                              :name (n / name
                                       :op1 "Jim"))
                     :ARG2 (g / guy
                              :mod (s2 / some)
                              :prep-in (u / uniform
                                          :mod (m2 / military))
                              :ARG0-of (h / have-03
                                          :ARG1 (b / beard
                                                   :ARG1-of (r / red-02)
                                                   :mod (h2 / huge))))))
   :snt2 (c / contrast-01
            :ARG1 (k / know-01
                     :polarity -
                     :ARG0 i
                     :ARG1 (p2 / person
                               :domain g))
            :ARG2 (l / look-02
                     :ARG0 g
                     :ARG1 (h3 / happy-01
                               :polarity -
                               :degree (v / very)))))

# ::id winograd_36
# ::snt The fish ate the worm. It was hungry.
# ::suppl winograd_36
(m / multi-sentence
   :snt1 (e / eat-01
            :ARG0 (f / fish)
            :ARG1 (w / worm))
   :snt2 (h / hunger-01
            :ARG0 f))

# ::id winograd_37
# ::snt The fish ate the worm. It was tasty.
# ::suppl winograd_37
(m / multi-sentence
   :snt1 (e / eat-01
            :ARG0 (f / fish)
            :ARG1 (w / worm))
   :snt2 (t / tasty
            :domain w))

# ::id winograd_38
# ::snt I was trying to open the lock with the key, but someone had filled the keyhole with chewing gum, and I couldn't get it in.
# ::suppl winograd_38
(c / contrast-01
   :ARG1 (t / try-01
            :ARG0 (i / i)
            :ARG1 (o / open-01
                     :ARG1 (l / lock)
                     :ARG2 (k / key)))
   :ARG2 (a / and
            :op1 (f / fill-01
                    :ARG0 (s / someone)
                    :ARG1 (k2 / keyhole)
                    :ARG2 (g / gum
                             :ARG1-of (c2 / chew-01)))
            :op2 (p / possible-01
                    :polarity -
                    :ARG1 (g2 / get-05
                              :ARG0 i
                              :ARG1 k
                              :ARG2 (i2 / inside)))))

# ::id winograd_39
# ::snt I was trying to open the lock with the key, but someone had filled the keyhole with chewing gum, and I couldn't get it out.
# ::suppl winograd_39
(c / contrast-01
   :ARG1 (t / try-01
            :ARG0 (i / i)
            :ARG1 (o / open-01
                     :ARG1 (l / lock)
                     :ARG2 (k / key)))
   :ARG2 (a / and
            :op1 (f / fill-01
                    :ARG0 (s / someone)
                    :ARG1 (k2 / keyhole)
                    :ARG2 (g / gum
                             :ARG1-of (c2 / chew-01)))
            :op2 (p / possible-01
                    :polarity -
                    :ARG1 (g2 / get-05
                              :ARG0 i
                              :ARG1 g
                              :ARG2 (o2 / out-06)))))

# ::id winograd_40
# ::snt The dog chased the cat, which ran up a tree. It waited at the bottom.
# ::suppl winograd_40
(m / multi-sentence
   :snt1 (c / chase-01
            :ARG0 (d / dog)
            :ARG1 (c2 / cat
                      :ARG0-of (r / run-02
                                  :direction (u / up
                                                :op1 (t / tree)))))
   :snt2 (w / wait-01
            :ARG1 d
            :location (b / bottom)))

# ::id winograd_41
# ::snt The dog chased the cat, which ran up a tree. It waited at the top.
# ::suppl winograd_41
(m / multi-sentence
   :snt1 (c / chase-01
            :ARG0 (d / dog)
            :ARG1 (c2 / cat
                      :ARG0-of (r / run-02
                                  :direction (u / up
                                                :op1 (t / tree)))))
   :snt2 (w / wait-01
            :ARG1 c2
            :location (t2 / top)))

# ::id winograd_42
# ::snt In the storm, the tree fell down and crashed through the roof of my house. Now, I have to get it removed.
# ::suppl winograd_42
(m / multi-sentence
   :snt1 (a / and
            :op1 (f / fall-01
                    :ARG1 (t / tree)
                    :direction (d / down))
            :op2 (c / crash-01
                    :direction (t2 / through
                                   :op1 (r / roof
                                           :part-of (h / house
                                                       :poss (i / i)))))
            :time (s / storm-01))
   :snt2 (o / obligate-01
            :ARG2 (g / get-04
                     :ARG0 i
                     :ARG1 (r2 / remove-01
                               :ARG1 t))
            :time (n / now)))

# ::id winograd_43
# ::snt In the storm, the tree fell down and crashed through the roof of my house. Now, I have to get it repaired.
# ::suppl winograd_43
(m / multi-sentence
   :snt1 (a / and
            :op1 (f / fall-01
                    :ARG1 (t / tree)
                    :direction (d / down))
            :op2 (c / crash-01
                    :direction (t2 / through
                                   :op1 (r / roof
                                           :part-of (h / house
                                                       :poss (i / i)))))
            :time (s / storm-01))
   :snt2 (o / obligate-01
            :ARG2 (g / get-04
                     :ARG0 i
                     :ARG1 (r2 / repair-01
                               :ARG1 r))
            :time (n / now)))

# ::id winograd_44
# ::snt The customer walked into the bank and stabbed one of the tellers. He was immediately taken to the police station.
# ::suppl winograd_44
(m / multi-sentence
   :snt1 (a / and
            :op1 (w / walk-01
                    :ARG0 (c / customer)
                    :direction (b / bank))
            :op2 (s / stab-01
                    :ARG0 c
                    :ARG1 (t2 / teller
                              :quant 1
                              :ARG1-of (i2 / include-91
                                           :ARG2 (t3 / teller)))))
   :snt2 (t / take-01
            :ARG1 c
            :ARG3 (s2 / station
                      :mod (p / police))
            :time (i3 / immediate)))

# ::id winograd_45
# ::snt The customer walked into the bank and stabbed one of the tellers. He was immediately taken to the hospital.
# ::suppl winograd_45
(m / multi-sentence
   :snt1 (a / and
            :op1 (w / walk-01
                    :ARG0 (c / customer)
                    :direction (b / bank))
            :op2 (s / stab-01
                    :ARG0 c
                    :ARG1 (t2 / teller
                              :quant 1
                              :ARG1-of (i2 / include-91
                                           :ARG2 (t3 / teller)))))
   :snt2 (t / take-01
            :ARG1 t2
            :ARG3 (h / hospital)
            :time (i3 / immediate)))

# ::id winograd_46
# ::snt John was doing research in the library when he heard a man humming and whistling. He was very annoyed.
# ::suppl winograd_46
(m / multi-sentence
   :snt1 (h / hear-01
            :ARG0 (p / person
                     :name (n / name
                              :op1 "John"))
            :ARG1 (a2 / and
                      :op1 (h2 / hum-02)
                      :op2 (w / whistle-01))
            :ARG2 (m2 / man)
            :time (d / do-02
                     :ARG0 p
                     :ARG1 (r / research-01)
                     :location (l / library)))
   :snt2 (a / annoy-01
            :ARG1 p
            :degree (v / very)))

# ::id winograd_47
# ::snt John was doing research in the library when he heard a man humming and whistling. He was very annoying.
# ::suppl winograd_47
(m / multi-sentence
   :snt1 (h / hear-01
            :ARG0 (p / person
                     :name (n / name
                              :op1 "John"))
            :ARG1 (a2 / and
                      :op1 (h2 / hum-02)
                      :op2 (w / whistle-01))
            :ARG2 (m2 / man)
            :time (d / do-02
                     :ARG0 p
                     :ARG1 (r / research-01)
                     :location (l / library)))
   :snt2 (a / annoy-01
            :ARG0 m2
            :degree (v / very)))

# ::id winograd_48
# ::snt John was jogging through the park when he saw a man juggling watermelons. He was very impressed.
# ::suppl winograd_48
(m / multi-sentence
   :snt1 (s / see-01
            :ARG0 (p / person
                     :name (n / name
                              :op1 "John"))
            :ARG1 (m2 / man)
            :ARG2 (j2 / juggle-01
                      :ARG1 (w / watermelon))
            :time (j / jog-01
                     :ARG0 p
                     :ARG1 (p2 / park)))
   :snt2 (i2 / impress-01
             :ARG1 p
             :degree (v / very)))

# ::id winograd_49
# ::snt John was jogging through the park when he saw a man juggling watermelons. He was very impressive.
# ::suppl winograd_49
(m / multi-sentence
   :snt1 (s / see-01
            :ARG0 (p / person
                     :name (n / name
                              :op1 "John"))
            :ARG1 (m2 / man)
            :ARG2 (j2 / juggle-01
                      :ARG1 (w / watermelon))
            :time (j / jog-01
                     :ARG0 p
                     :ARG1 (p2 / park)))
   :snt2 (i2 / impress-01
             :ARG0 m2
             :degree (v / very)))

# ::id winograd_50
# ::snt There is a pillar between me and the stage, and I can't see around it.
# ::suppl winograd_50
(a / and
   :op1 (b / be-located-at-91
           :ARG1 (p / pillar)
           :ARG2 (b2 / between
                     :op1 (i / i)
                     :op2 (s / stage)))
   :op2 (s2 / see-01
            :polarity -
            :ARG0 i
            :ARG1 (a2 / around
                      :op1 p)))

# ::id winograd_51
# ::snt There is a pillar between me and the stage, and I can't see it.
# ::suppl winograd_51
(a / and
   :op1 (b / be-located-at-91
           :ARG1 (p / pillar)
           :ARG2 (b2 / between
                     :op1 (i / i)
                     :op2 (s / stage)))
   :op2 (s2 / see-01
            :polarity -
            :ARG0 i
            :ARG1 s))

# ::id winograd_52
# ::snt They broadcast an announcement, but a subway came into the station and I couldn't hear it.
# ::suppl winograd_52
(c / contrast-01
   :ARG1 (b / broadcast-01
            :ARG0 (t / they)
            :ARG1 (a / announce-01))
   :ARG2 (c2 / come-01
             :ARG1 (s / subway)
             :location (s2 / station)
             :ARG0-of (c3 / cause-01
                          :ARG1 (h / hear-01
                                   :polarity -
                                   :ARG0 (i / i)
                                   :ARG1 a))))

# ::id winograd_53
# ::snt They broadcast an announcement, but a subway came into the station and I couldn't hear over it.
# ::suppl winograd_53
(c / contrast-01
   :ARG1 (b / broadcast-01
            :ARG0 (t / they)
            :ARG1 (a / announce-01))
   :ARG2 (c2 / come-01
             :ARG1 (s / subway)
             :location (s2 / station)
             :ARG0-of (c3 / cause-01
                          :ARG1 (h / hear-01
                                   :polarity -
                                   :ARG0 (i / i)
                                   :ARG1 (o / over
                                            :op1 s)))))

# ::id winograd_54
# ::snt In the middle of the outdoor concert, the rain started falling, but it continued until 10.
# ::suppl winograd_54
(c / contrast-01
   :ARG1 (b / be-temporally-at-91
            :ARG1 (r / rain-01
                     :ARG1-of (f / fall-01))
            :ARG2 (m / middle
                     :op1 (c3 / concert
                              :location (o2 / outdoor))))
   :ARG2 (c2 / continue-01
             :ARG1 r
             :time (u / until
                      :op1 (o / temporal-quantity
                              :quant 10))))

# ::id winograd_55
# ::snt In the middle of the outdoor concert, the rain started falling, and it continued until 10.
# ::suppl winograd_55
(a / and
   :op1 (b / be-temporally-at-91
           :ARG1 (r / rain-01
                    :ARG1-of (f / fall-01))
           :ARG2 (m / middle
                    :op1 (c3 / concert
                             :location (o2 / outdoor))))
   :op2 (c2 / continue-01
            :ARG1 r
            :time (u / until
                     :op1 (o / temporal-quantity
                             :quant 10))))

# ::id winograd_56
# ::snt I used an old rag to clean the knife, and then I put it in the trash.
# ::suppl winograd_56
(a / and
   :op1 (c / clean-01
           :ARG1 (i / i)
           :ARG2 (k / knife)
           :instrument (r / rag
                          :mod (o / old)))
   :op2 (p / put-01
           :time (t2 / then)
           :ARG1 k
           :ARG2 (t / trash)))

# ::id winograd_57
# ::snt I used an old rag to clean the knife, and then I put it in the drawer.
# ::suppl winograd_57
(a / and
   :op1 (c / clean-01
           :ARG1 (i / i)
           :ARG2 (k / knife)
           :instrument (r / rag
                          :mod (o / old)))
   :op2 (p / put-01
           :time (t / then)
           :ARG1 k
           :ARG2 (d / drawer)))

# ::id winograd_58
# ::snt Ann asked Mary what time the library closes, because she had forgotten.
# ::suppl winograd_58
(a / ask-01
   :ARG0 (p / person
            :name "Ann")
   :ARG1 (a2 / amr-unkown
             :time-of (c / close-01
                         :ARG1 (l / library)))
   :ARG2 (p2 / person
             :name "Mary")
   :ARG1-of (c2 / cause-01
                :ARG1 (f / forget-01
                         :ARG0 p)))

# ::id winograd_59
# ::snt Ann asked Mary what time the library closes, but she had forgotten.
# ::suppl winograd_59
(c / contrast-01
   :ARG1 (a / ask-01
            :ARG0 (p / person
                     :name "Ann")
            :ARG1 (a2 / amr-unkown
                      :time-of (c2 / close-01
                                   :ARG1 (l / library)))
            :ARG2 (p2 / person
                      :name "Mary"))
   :ARG2 (f / forget-01
            :ARG0 p))

# ::id winograd_60
# ::snt I took the water bottle out of the backpack so that it would be handy.
# ::suppl winograd_60
(t / take-01
   :ARG0 (i / i)
   :ARG1 (b / bottle-01
            :mod (w / water))
   :ARG2 (b2 / backpack)
   :purpose (l / handy-02
               :ARG1 b))

# ::id winograd_61
# ::snt I took the water bottle out of the backpack so that it would be lighter.
# ::suppl winograd_61
(t / take-01
   :ARG0 (i / i)
   :ARG1 (b / bottle-01
            :mod (w / water))
   :ARG2 (b2 / backpack)
   :purpose (l / lighten-01
               :ARG1 b2))

# ::id winograd_62
# ::snt I couldn't put the pot on the shelf because it was too tall.
# ::suppl winograd_62
(p / possible-01
   :polarity -
   :ARG1 (p2 / put-01
             :ARG0 (i / i)
             :ARG1 (p3 / pot)
             :ARG2 (o / on
                      :op1 (s / shelf))
             :ARG1-of (c / cause-01
                         :ARG0 (h / have-degree-91
                                  :ARG1 p3
                                  :ARG2 (t2 / tall)
                                  :ARG3 (t / too)))))

# ::id winograd_63
# ::snt I couldn't put the pot on the shelf because it was too high.
# ::suppl winograd_63
(p / possible-01
   :polarity -
   :ARG1 (p2 / put-01
             :ARG0 (i / i)
             :ARG1 (p3 / pot)
             :ARG2 (o / on
                      :op1 (s / shelf))
             :ARG1-of (c / cause-01
                         :ARG0 (h / have-degree-91
                                  :ARG1 s
                                  :ARG2 (h2 / high)
                                  :ARG3 (t / too)))))

# ::id winograd_64
# ::snt I'm sure that my map will show this building; it is very good.
# ::suppl winograd_64
(m2 / multi-sentence
    :snt1 (s / sure-02
             :ARG0 (i / i)
             :ARG1 (s2 / show-01
                       :ARG0 (m / map
                                :poss i)
                       :ARG1 (b2 / building
                                 :mod (t / this))))
    :snt2 (g / good-02
             :ARG1 (i2 / it)
             :degree (v / very)))

# ::id winograd_65
# ::snt I'm sure that my map will show this building; it is very famous.
# ::suppl winograd_65
(m2 / multi-sentence
    :snt1 (s / sure-02
             :ARG0 (i / i)
             :ARG1 (s2 / show-01
                       :ARG0 (m / map
                                :poss i)
                       :ARG1 (b2 / building
                                 :mod (t / this))))
    :snt2 (f / fame-01
             :ARG1 (i2 / it)
             :degree (v / very)))

# ::id winograd_66
# ::snt Bob paid for Charlie's college education. He is very generous.
# ::suppl winograd_66
(m / multi-sentence
   :snt1 (p / pay-01
            :ARG0 (p3 / person)
            :ARG3 (e / education
                     :poss (p4 / person
                               :name "Charlie")
                     :mod (c / college)))
   :snt2 (g / generous-01
            :ARG0 (h / he)
            :degree (v / very)))

# ::id winograd_67
# ::snt Bob paid for Charlie's college education. He is very grateful.
# ::suppl winograd_67
(m / multi-sentence
   :snt1 (p / pay-01
            :ARG0 (p3 / person)
            :ARG3 (e / education
                     :poss (p4 / person
                               :name "Charlie")
                     :mod (c / college)))
   :snt2 (t / thankful-02
            :ARG0 (h / he)
            :degree (v / very)))

# ::id winograd_68
# ::snt Bob paid for Charlie's college education, but now acts as though it never happened. He is very hurt.
# ::suppl winograd_68
(m / multi-sentence
   :snt1 (c / contrast-01
            :ARG1 (p / pay-01
                     :ARG0 (p3 / person
                               :name "Bob")
                     :ARG3 (e / education
                              :mod (c2 / college)
                              :poss (p4 / person
                                        :name "Charlie")))
            :ARG2 (a / act-01
                     :ARG0 (p5 / person
                               :name "Charlie")
                     :ARG1 (h / happen-01
                              :polarity -)))
   :snt2 (t / hurt-02
            :ARG1 (h3 / he)
            :degree (v / very)))

# ::id winograd_69
# ::snt Bob paid for Charlie's college education, but now acts as though it never happened. He is very ungrateful.
# ::suppl winograd_69
(m / multi-sentence
   :snt1 (c / contrast-01
            :ARG1 (p / pay-01
                     :ARG0 (p3 / person
                               :name "Bob")
                     :ARG3 (e / education
                              :mod (c2 / college)
                              :poss (p4 / person
                                        :name "Charlie")))
            :ARG2 (a / act-01
                     :ARG0 (p5 / person
                               :name "Charlie")
                     :ARG1 (h / happen-01
                              :polarity -)))
   :snt2 (t / thankful-02
            :polarity -
            :ARG1 (h3 / he)
            :degree (v / very)))

# ::id winograd_70
# ::snt Bob was playing cards with Adam and was way ahead. If Adam hadn't had a sudden run of good luck, he would have won.
# ::suppl winograd_70
(m / multi-sentence
   :snt1 (p / play-01
            :ARG0 (p3 / person
                      :name "Bob")
            :ARG1 (c / cards)
            :ARG3 (p4 / person
                      :name "Adam")
            :mod (a / ahead
                    :degree (w / way)))
   :snt2 (h / have-condition-91
            :ARG1 (h2 / have-03
                      :polarity -
                      :ARG0 (p5 / person
                                :name "Adam")
                      :ARG1 (r / run-07
                               :ARG1 (l / luck
                                        :mod (g / good-02))
                               :mod (s / sudden)))
            :ARG2 (w2 / win-01
                      :ARG0 p5)))

# ::id winograd_71
# ::snt Bob was playing cards with Adam and was way ahead. If Adam hadn't had a sudden run of good luck, he would have lost.
# ::suppl winograd_71
(m / multi-sentence
   :snt1 (p / play-01
            :ARG0 (p3 / person
                      :name "Bob")
            :ARG1 (c / cards)
            :ARG3 (p4 / person
                      :name "Adam")
            :mod (a / ahead
                    :degree (w / way)))
   :snt2 (h / have-condition-91
            :ARG1 (h2 / have-03
                      :polarity -
                      :ARG0 (p5 / person
                                :name "Adam")
                      :ARG1 (r / run-07
                               :ARG1 (l / luck
                                        :mod (g / good-02))
                               :mod (s / sudden)))
            :ARG2 (l2 / lose-02
                      :ARG0 p3)))

# ::id winograd_72
# ::snt Adam can't leave work here until bob arrives to replace him. If Bob had left home for work on time, he would be gone by this time.
# ::suppl winograd_72
(m / multi-sentence
   :snt1 (l / leave-11
            :polarity -
            :ARG0 (p / person
                     :name "Adam")
            :ARG1 (w / work
                     :location (h / here))
            :time (u / until
                     :op1 (a / arrive-01
                             :ARG1 (p4 / person
                                       :name "Bob"
                                       :ARG0-of (r / replace-01
                                                   :ARG1 p)))))
   :snt2 (h2 / have-condition-91
             :ARG1 (l2 / leave-11
                       :ARG0 (p5 / person
                                 :name "Bob")
                       :ARG1 (h3 / home)
                       :ARG2 (w2 / work))
             :ARG2 (g / go-02
                      :ARG0 (p6 / person
                                :name "Adam"
                                :time (t / time
                                         :mod (t2 / this))))))

# ::id winograd_73
# ::snt Adam can't leave work here until Bob arrives to replace him. If Bob had left home for work on time, he would be here by this time.
# ::suppl winograd_73
(m / multi-sentence
   :snt1 (l / leave-11
            :polarity -
            :ARG0 (p / person
                     :name "Adam")
            :ARG1 (w / work
                     :location (h / here))
            :time (u / until
                     :op1 (a / arrive-01
                             :ARG1 (p4 / person
                                       :name "Bob"
                                       :ARG0-of (r / replace-01
                                                   :ARG1 p)))))
   :snt2 (h2 / have-condition-91
             :ARG1 (l2 / leave-11
                       :ARG0 (p5 / person
                                 :name "Bob")
                       :ARG1 (h3 / home)
                       :ARG2 (w2 / work))
             :ARG2 (a2 / arrive-01
                       :ARG1 p5
                       :time (t / time
                                :mod (t2 / this)))))

# ::id winograd_74
# ::snt If the con artist has succeeded in fooling Sam, he would have gotten a lot of money.
# ::suppl winograd_74
(h / have-condition-91
   :ARG1 (s / succeed-01
            :ARG0 (a / artist
                     :mod (c / con))
            :ARG0 (f / fool-01
                     :ARG1 (p / person
                              :name "Sam")))
   :ARG2 (g / get-01
            :ARG0 a
            :ARG1 (m / money
                     :quant (l / lot))))

# ::id winograd_75
# ::snt If the con artist has succeeded in fooling Sam, he would have lost a lot of money.
# ::suppl winograd_75
(h / have-condition-91
   :ARG1 (s / succeed-01
            :ARG0 (a / artist
                     :mod (c / con))
            :ARG0 (f / fool-01
                     :ARG1 (p / person
                              :name "Sam")))
   :ARG2 (l2 / lose-02
             :ARG0 p
             :ARG1 (m / money
                      :quant (l / lot))))

# ::id winograd_76
# ::snt It was a summer afternoon, and the dog was sitting in the middle of the lawn. After a while, it got up and moved to a spot under the tree, because it was hot.
# ::suppl winograd_76
(m / multi-sentence
   :snt1 (a2 / and
             :op1 (d / date-entity
                     :season (s / summer))
             :op2 (s2 / sit-01
                      :ARG1 (d2 / dog)
                      :ARG2 (l / lawn
                               :location (m2 / middle))))
   :snt2 (c / cause-01
            :ARG0 (h / hot-05
                     :ARG0 (i2 / it))
            :ARG1 (a3 / and
                      :op1 (g / get-up-26
                              :ARG1 (i3 / it))
                      :op2 (m3 / move-01
                               :ARG0 i3
                               :ARG1 (s3 / spot
                                         :location (u / under
                                                      :op1 (t / tree)))))
            :time (a4 / after
                      :op1 (w / while
                              :quant 1))))

# ::id winograd_77
# ::snt It was a summer afternoon, and the dog was sitting in the middle of the lawn. After a while, it got up and moved to a spot under the tree, because it was cooler.
# ::suppl winograd_77
(m / multi-sentence
   :snt1 (a2 / and
             :op1 (d / date-entity
                     :season (s / summer))
             :op2 (s2 / sit-01
                      :ARG1 (d2 / dog)
                      :ARG2 (l / lawn
                               :location (m2 / middle))))
   :snt2 (c / cause-01
            :ARG0 (c2 / cool-06
                      :ARG0 (i2 / it))
            :ARG1 (a3 / and
                      :op1 (g / get-up-26
                              :ARG1 (i3 / it))
                      :op2 (m3 / move-01
                               :ARG0 i3
                               :ARG1 (s3 / spot
                                         :location (u / under
                                                      :op1 (t / tree)))))
            :time (a4 / after
                      :op1 (w / while
                              :quant 1))))

# ::id winograd_78
# ::snt The cat was lying by the mouse hole waiting for the mouse, but it was too impatient.
# ::suppl winograd_78
(c / contrast-01
   :ARG1 (l / lay-01
            :ARG0 (c2 / cat)
            :ARG2 (h / hole
                     :mod (m / mouse))
            :purpose (w / wait-01
                        :ARG2 (m2 / mouse)))
   :ARG2 (i2 / impatient-01
             :ARG0 c2
             :degree (t / too)))

# ::id winograd_79
# ::snt The cat was lying by the mouse hole waiting for the mouse, but it was too cautious.
# ::suppl winograd_79
(c / contrast-01
   :ARG1 (l / lay-01
            :ARG0 (c2 / cat)
            :ARG2 (h / hole
                     :mod (m / mouse))
            :purpose (w / wait-01
                        :ARG2 (m2 / mouse)))
   :ARG2 (c4 / cautious-02
             :ARG0 m2
             :degree (t / too)))

# ::id winograd_80
# ::snt Jane knocked on Susan's door, but there was no answer. She was disappointed.
# ::suppl winograd_80
(m / multi-sentence
   :snt1 (c / contrast-01
            :ARG1 (k / knock-01
                     :ARG0 (p / person
                              :name "Jane")
                     :ARG1 (d2 / door
                               :poss (p2 / person
                                         :name "Susan")))
            :ARG2 (a / answer-01
                     :polarity -))
   :snt2 (d / disappoint-01
            :ARG1 p))

# ::id winograd_81
# ::snt Jane knocked on Susan's door, but there was no answer. She was out.
# ::suppl winograd_81
(m / multi-sentence
   :snt1 (c / contrast-01
            :ARG1 (k / knock-01
                     :ARG0 (p / person
                              :name "Jane")
                     :ARG1 (d2 / door
                               :poss (p2 / person
                                         :name "Susan")))
            :ARG2 (a / answer-01
                     :polarity -))
   :snt2 (o / out-06
            :ARG1 p2))

# ::id winograd_82
# ::snt Jane knocked on the door, and Susan answered it. She invited her to come out.
# ::suppl winograd_82
(m / multi-sentence
   :snt1 (a2 / and
             :op1 (k / knock-01
                     :ARG0 (p / person
                              :name "Jane")
                     :ARG1 (d2 / door))
             :op2 (a / answer-01
                     :ARG0 (p3 / person
                               :name "Susan")
                     :ARG1 k))
   :snt2 (i2 / invite-01
             :ARG0 p
             :ARG1 p3
             :ARG2 (c / come-out-09)))

# ::id winograd_83
# ::snt Jane knocked on the door, and Susan answered it. She invited her to come in.
# ::suppl winograd_83
(m / multi-sentence
   :snt1 (a2 / and
             :op1 (k / knock-01
                     :ARG0 (p / person
                              :name "Jane")
                     :ARG1 (d2 / door))
             :op2 (a / answer-01
                     :ARG0 (p3 / person
                               :name "Susan")
                     :ARG1 k))
   :snt2 (i2 / invite-01
             :ARG0 p
             :ARG1 p3
             :ARG2 (c / come-in-07)))

# ::id winograd_84
# ::snt Sam took French classes from Adam, because he was eager to speak it fluently.
# ::suppl winograd_84
(c / cause-01
   :ARG0 (t / take-01
            :ARG0 (p / person
                     :name "Sam")
            :ARG1 (c2 / class
                      :mod (f / french))
            :ARG2 (p2 / person
                      :name "Adam"))
   :ARG1 (e / eager-01
            :ARG0 p
            :ARG1 (s / speak-01
                     :ARG1 (l / language
                              :name "French")
                     :manner (f2 / fluent))))

# ::id winograd_85
# ::snt Sam took French classes from Adam, because he was known to speak if fluently.
# ::suppl winograd_85
(c / cause-01
   :ARG0 (t / take-01
            :ARG0 (p / person
                     :name "Sam")
            :ARG1 (c2 / class
                      :mod (f / french))
            :ARG2 (p2 / person
                      :name "Adam"))
   :ARG1 (k / know-03
            :ARG0 p2
            :ARG1 (s / speak-01
                     :ARG1 (l / language
                              :name "French")
                     :manner (f2 / fluent))))

# ::id winograd_86
# ::snt The path to the lake was blocked, so we couldn't use it.
# ::suppl winograd_86
(c / cause-01
   :ARG0 (b / block-01
            :ARG1 (p2 / path
                      :destination (l / lake)))
   :ARG1 (p3 / possible-01
             :polarity -
             :ARG1 (u / use-01
                      :ARG0 (w / we)
                      :ARG1 p2)))

# ::id winograd_87
# ::snt The path to the lake was blocked, so we couldn't reach it.
# ::suppl winograd_87
(c / cause-01
   :ARG0 (b / block-01
            :ARG1 (p2 / path
                      :destination (l / lake)))
   :ARG1 (p3 / possible-01
             :polarity -
             :ARG1 (r / reach-01
                      :ARG0 (w / we)
                      :ARG1 l)))

# ::id winograd_88
# ::snt The sun was covered by a thick cloud all morning, but luckily, by the time the picnic started, it was out.
# ::suppl winograd_88
(c / contrast-01
   :ARG1 (c2 / cover-02
             :ARG1 (s / sun)
             :ARG2 (c3 / cloud
                       :mod (t / thick-03))
             :time (m / morning
                      :mod (a / all)))
   :ARG2 (o / out-06
            :ARG0-of (l / lucky-02)
            :ARG1 c3
            :time (s2 / start-01
                      :ARG0 (p3 / picnic))))

# ::id winograd_89
# ::snt The sun was covered by a thick cloud all morning, but luckily, by the time the picnic started, it was gone.
# ::suppl winograd_89
(c / contrast-01
   :ARG1 (c2 / cover-02
             :ARG1 (s / sun)
             :ARG2 (c3 / cloud
                       :mod (t / thick-03))
             :time (m / morning
                      :mod (a / all)))
   :ARG2 (o / out-06
            :ARG0-of (l / lucky-02)
            :ARG1 c3
            :time (s2 / start-01
                      :ARG0 (p3 / picnic))))

# ::id winograd_90
# ::snt We went to the lake, because a shark had been seen at the ocean beach, so it was a safer place to swim.
# ::suppl winograd_90
(c / cause-01
   :ARG0 (c2 / cause-01
             :ARG0 (s / shark
                      :ARG1-of (s4 / see-01
                                   :ARG2 (b / beach
                                            :mod (o / ocean))))
             :ARG1 (s2 / swim-01
                       :ARG1 l
                       :mod (s3 / safe-01)))
   :ARG1 (g / go-01
            :ARG1 (w / we)
            :ARG3 (l / lake)))

# ::id winograd_91
# ::snt We went to the lake, because a shark had been seen at the ocean beach, so it was a dangerous place to swim.
# ::suppl winograd_91
(c / cause-01
   :ARG0 (c2 / cause-01
             :ARG0 (s / shark
                      :ARG1-of (s4 / see-01
                                   :ARG2 (b / beach
                                            :mod (o / ocean))))
             :ARG1 (s2 / swim-01
                       :ARG1 b
                       :mod (e / endanger-01)))
   :ARG1 (g / go-01
            :ARG1 (w / we)
            :ARG3 (l / lake)))

# ::id winograd_92
# ::snt Sam tried to paint a picture of shepherds with sheep, but they ended up looking more like golfers.
# ::suppl winograd_92
(c / contrast-01
   :ARG1 (t / try-01
            :ARG0 (p2 / person
                      :name "Sam")
            :ARG1 (p / paint-02
                     :ARG1 (s / shepherd
                              :accompanier (s2 / sheep))))
   :ARG2 (e / end-up-03
            :ARG1 s
            :ARG2 (h / have-degree-of-resemblance-91
                     :ARG1 s
                     :ARG2 (g / golfer)
                     :ARG4 (m / more))))

# ::id winograd_93
# ::snt Sam tried to paint a picture of shepherds with sheep, but they ended up looking more like dogs.
# ::suppl winograd_93
(c / contrast-01
   :ARG1 (t / try-01
            :ARG0 (p2 / person
                      :name "Sam")
            :ARG1 (p / paint-02
                     :ARG1 (s / shepherd
                              :accompanier (s2 / sheep))))
   :ARG2 (e / end-up-03
            :ARG1 s
            :ARG2 (h / have-degree-of-resemblance-91
                     :ARG1 s2
                     :ARG2 (g / dog)
                     :ARG4 (m / more))))

# ::id winograd_94
# ::snt Mary tucked her daughter Anne into bed, so that she could work.
# ::suppl winograd_94
(c / cause-01
   :ARG0 (t / tuck-01
            :ARG0 (p2 / person
                      :name "Mary")
            :ARG1 (p3 / person
                      :name "Anne")
            :ARG2 (b / bed))
   :ARG1 (p / possible-01
            :ARG1 (w / work-01
                     :ARG0 p2)))

# ::id winograd_95
# ::snt Mary tucked her daughter Anne into bed, so that she could sleep.
# ::suppl winograd_95
(c / cause-01
   :ARG0 (t / tuck-01
            :ARG0 (p2 / person
                      :name "Mary")
            :ARG1 (p3 / person
                      :name "Anne")
            :ARG2 (b / bed))
   :ARG1 (p / possible-01
            :ARG1 (s / sleep-01
                     :ARG0 p3)))

# ::id winograd_96
# ::snt Fred and Alice had very warm down coats, but they were not prepared for the cold in Alaska.
# ::suppl winograd_96
(c / contrast-01
   :ARG1 (h / have-03
            :ARG0 (a / and
                     :op1 (p / person
                             :name "Fred")
                     :op2 (p2 / person
                              :name "Alice"))
            :ARG1 (c2 / coat
                      :mod (d / down)
                      :mod (w / warm)))
   :ARG2 (p3 / prepare-02
             :polarity -
             :ARG1 a
             :ARG2 (c3 / cold-01
                       :location (s / state
                                    :name "Alaska"))))

# ::id winograd_97
# ::snt Fred and Alice had very warm down coats, but they were not enough for the cold in Alaska.
# ::suppl winograd_97
(c / contrast-01
   :ARG1 (h / have-03
            :ARG0 (a / and
                     :op1 (p / person
                             :name "Fred")
                     :op2 (p2 / person
                              :name "Alice"))
            :ARG1 (c2 / coat
                      :mod (d / down)
                      :mod (w / warm)))
   :ARG2 (e / enough-01
            :polarity -
            :ARG1 c2
            :ARG2 (c3 / cold-01
                      :location (s / state
                                   :name "Alaska"))))

# ::id winograd_98
# ::snt Thomson visited Cooper's grave in 1765. At that date he had been traveling for five years.
# ::suppl winograd_98
(m / multi-sentence
   :snt1 (v / visit-01
            :ARG0 (p / person
                     :name "Thomson")
            :ARG1 (g / grave
                     :poss (p3 / person
                               :name "Cooper"))
            :time (d / date-entity
                     :year 1765))
   :snt2 (t / travel-01
            :ARG0 p
            :time d
            :duration (t2 / temporal-quantity
                          :quant 5
                          :unit (y / year))))

# ::id winograd_99
# ::snt Thomson visited Cooper's grave in 1765. At that date he had been dead for five years.
# ::suppl winograd_99
(m / multi-sentence
   :snt1 (v / visit-01
            :ARG0 (p / person
                     :name "Thomson")
            :ARG1 (g / grave
                     :poss (p3 / person
                               :name "Cooper"))
            :time (d / date-entity
                     :year 1765))
   :snt2 (d2 / dead-01
             :ARG0 p3
             :time d
             :duration (t2 / temporal-quantity
                           :quant 5
                           :unit (y / year))))

# ::id winograd_100
# ::snt The firemen arrived after the police because they were coming from so far away.
# ::suppl winograd_100
(a / arrive-01
   :ARG1 (f / firemen)
   :time (a2 / after
             :op1 (p / police)
             :ARG1-of (c / cause-01
                         :ARG0 (c2 / come-01
                                   :ARG1 f
                                   :ARG3 (f2 / far
                                             :direction (a3 / away)
                                             :degree (s / so))))))

# ::id winograd_101
# ::snt The firemen arrived before the police because they were coming from so far away.
# ::suppl winograd_101
(a / arrive-01
   :ARG1 (f / firemen)
   :time (b / before
            :op1 (p / police)
            :ARG1-of (c / cause-01
                        :ARG0 (c2 / come-01
                                  :ARG1 p
                                  :ARG3 (f2 / far
                                            :direction (a2 / away)
                                            :degree (s / so))))))

# ::id winograd_102
# ::snt Frank was upset with Tom because the toaster he had bought from him didn't work.
# ::suppl winograd_102
(u / upset-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Tom"))
   :ARG1 (p2 / person
             :name (n2 / name
                       :op1 "Frank"))
   :ARG1-of (c / cause-01
               :ARG0 (w / work-09
                        :polarity -
                        :ARG1 (t / toaster
                                 :ARG1-of (b / buy-01
                                             :ARG0 p2
                                             :ARG2 p)))))

# ::id winograd_103
# ::snt Frank was upset with Tom because the toaster he had sold him didn't work.
# ::suppl winograd_103
(u / upset-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Tom"))
   :ARG1 (p2 / person
             :name (n2 / name
                       :op1 "Frank"))
   :ARG1-of (c / cause-01
               :ARG0 (w / work-09
                        :polarity -
                        :ARG1 (t / toaster
                                 :ARG1-of (s / sell-01
                                             :ARG0 p
                                             :ARG2 p2)))))

# ::id winograd_104
# ::snt Jim yelled at Kevin because he was so upset.
# ::suppl winograd_104
(y / yell-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Jim"))
   :ARG2 (p2 / person
             :name (n2 / name
                       :op1 "Kevin"))
   :ARG1-of (c / cause-01
               :ARG0 (u / upset-01
                        :ARG1 p
                        :degree (s / so))))

# ::id winograd_105
# ::snt Jim comforted Kevin because he was so upset.
# ::suppl winograd_105
(c / comfort-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Jim"))
   :ARG1 (p2 / person
             :name (n2 / name
                       :op1 "Kevin"))
   :ARG1-of (c2 / cause-01
                :ARG0 (u / upset-01
                         :ARG1 p2
                         :degree (s / so))))

# ::id winograd_106
# ::snt The sack of potatoes had been placed above the bag of flour, so it had to be moved first.
# ::suppl winograd_106
(p / place-01
   :ARG1 (p2 / potato
             :quant (s / sack))
   :ARG2 (a / above
            :op1 (f / flour
                    :quant (b / bag)))
   :ARG0-of (c / cause-01
               :ARG1 (o / obligate-01
                        :ARG2 (m / move-01
                                 :ARG1 p2
                                 :time (f2 / first)))))

# ::id winograd_107
# ::snt The sack of potatoes had been placed below the bag of flour, so it had to be moved first.
# ::suppl winograd_107
(p / place-01
   :ARG1 (p2 / potato
             :quant (s / sack))
   :ARG2 (b / below
            :op1 (f / flour
                    :quant (b2 / bag)))
   :ARG0-of (c / cause-01
               :ARG1 (o / obligate-01
                        :ARG2 (m / move-01
                                 :ARG1 f
                                 :time (f2 / first)))))

# ::id winograd_108
# ::snt Pete envies Martin although he is very successful.
# ::suppl winograd_108
(e / envy-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Pete"))
   :ARG1 (p2 / person
             :name (n2 / name
                       :op1 "Martin"))
   :concession (s / succeed-01
                  :ARG0 p
                  :degree (v / very)))

# ::id winograd_109
# ::snt Pete envies Martin because he is very successful.
# ::suppl winograd_109
(e / envy-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Pete"))
   :ARG1 (p2 / person
             :name (n2 / name
                       :op1 "Martin"))
   :ARG1-of (c / cause-01
               :ARG0 (s / succeed-01
                        :ARG0 p2
                        :degree (v / very))))

# ::id winograd_110
# ::snt The older students were bullying the younger ones, so we punished them.
# ::suppl winograd_110
(b / bully-01
   :ARG0 (s / student
            :mod (o / older))
   :ARG1 (s2 / student
             :mod (y / younger))
   :ARG2-of (p / punish-01
               :ARG0 (w / we)
               :ARG1 s))

# ::id winograd_111
# ::snt The older students were bullying the younger ones, so we rescued them.
# ::suppl winograd_111
(b / bully-01n
   :ARG0 (s / student
            :mod (o / older))
   :ARG1 (s2 / student
             :mod (y / younger))
   :ARG0-of (c / cause-01
               :ARG1 (r / rescue-01
                        :ARG0 (w / we)
                        :ARG1 s2)))

# ::id winograd_112
# ::snt I poured water from the bottle into the cup until it was empty.
# ::suppl winograd_112
(p / pour-01
   :ARG0 (i / i)
   :ARG1 (w / water)
   :ARG2 (b / bottle)
   :ARG3 (c / cup)
   :time (u / until
            :op1 (e / empty
                    :domain b)))

# ::id winograd_113
# ::snt I poured water from the bottle into the cup until it was full.
# ::suppl winograd_113
(p / pour-01
   :ARG0 (i / i)
   :ARG1 (w / water)
   :ARG2 (b / bottle)
   :ARG3 (c / cup)
   :time (u / until
            :op1 (f / full
                    :domain c)))

# ::id winograd_114
# ::snt Susan knows all about Ann's personal problems because she is nosy.
# ::suppl winograd_114
(k / know-02
   :ARG0 (p / person
            :name (n / name
                     :op1 "Susan"))
   :ARG1 (p2 / problem
             :poss (p3 / person
                       :name (n2 / name
                                 :op1 "Ann"))
             :ARG1-of (p4 / personal-02))
   :ARG1-of (c / cause-01
               :ARG0 (n3 / nosy-02
                         :ARG0 p)))

# ::id winograd_115
# ::snt Susan knows all about Ann's personal problems because she is indiscreet.
# ::suppl winograd_115
(k / know-02
   :ARG0 (p / person
            :name (n / name
                     :op1 "Susan"))
   :ARG1 (p2 / problem
             :poss (p3 / person
                       :name (n2 / name
                                 :op1 "Ann"))
             :ARG1-of (p4 / personal-02))
   :ARG1-of (c / cause-01
               :ARG0 (i2 / indiscreet
                         :ARG0 p3)))

# ::id winograd_116
# ::snt Sid explained his theory to Mark but he couldn't convince him.
# ::suppl winograd_116
(c / contrast-01
   :ARG1 (e / explain-01
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Sid"))
            :ARG1 (t / theory
                     :poss p)
            :ARG2 (p2 / person
                      :name (n2 / name
                                :op1 "Mark")))
   :ARG2 (p3 / possible-01
             :polarity -
             :ARG1 (c2 / convince-01
                       :ARG0 p
                       :ARG1 p2)))

# ::id winograd_117
# ::snt Sid explained his theory to Mark but he couldn't understand him.
# ::suppl winograd_117
(c / contrast-01
   :ARG1 (e / explain-01
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Sid"))
            :ARG1 (t / theory
                     :poss p)
            :ARG2 (p2 / person
                      :name (n2 / name
                                :op1 "Mark")))
   :ARG2 (p3 / possible-01
             :polarity -
             :ARG1 (u / understand-01
                      :ARG0 p2
                      :ARG1 p)))

# ::id winograd_118
# ::snt Susan knew that Ann's son had been in a car accident, so she told her about it.
# ::suppl winograd_118
(k / know-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Susan"))
   :ARG1 (s / son
            :poss (p2 / person
                      :name (n2 / name
                                :op1 "Ann"))
            :location (a / accident
                         :mod (c / car)))
   :ARG0-of (c2 / cause-01
                :ARG1 (t / tell-01
                         :ARG0 p
                         :ARG1 s
                         :ARG2 p2)))

# ::id winograd_119
# ::snt Susan knew that Ann's son had been in a car accident, because she told her about it.
# ::suppl winograd_119
(k / know-01
   :ARG0 (p / person
            :name (n / name
                     :op1 "Susan"))
   :ARG1 (s / son
            :poss (p2 / person
                      :name (n2 / name
                                :op1 "Ann"))
            :location (a / accident
                         :mod (c / car)))
   :ARG1-of (c2 / cause-01
                :ARG0 (t / tell-01
                         :ARG0 p2
                         :ARG1 s
                         :ARG2 p)))

# ::id winograd_120
# ::snt Joe's uncle can still beat him at tennis, even though he is 30 years younger.
# ::suppl winograd_120
(p / possible-01
   :ARG1 (b / beat-03
            :ARG0 (p2 / person
                      :ARG0-of (h / have-rel-role-91
                                  :ARG1 p3
                                  :ARG2 (u / uncle)))
            :ARG1 (p3 / person
                      :name (n2 / name
                                :op1 "Joe"))
            :ARG2 (t / tennis))
   :concession (h2 / have-degree-91
                   :ARG1 p3
                   :ARG2 (y / young)
                   :ARG3 (m / more
                            :op1 (t2 / temporal-quantity
                                     :quant 30
                                     :unit (y2 / year)))
                   :ARG4 p2))

# ::id winograd_121
# ::snt Joe's uncle can still beat him at tennis, even though he is 30 years older.
# ::suppl winograd_121
(p / possible-01
   :ARG1 (b / beat-03
            :ARG0 (p2 / person
                      :ARG0-of (h / have-rel-role-91
                                  :ARG1 p3
                                  :ARG2 (u / uncle)))
            :ARG1 (p3 / person
                      :name (n / name
                               :op1 "Joe"))
            :ARG2 (t / tennis))
   :concession (h2 / have-degree-91
                   :ARG1 p2
                   :ARG2 (o / old)
                   :ARG3 (m / more
                            :op1 (t2 / temporal-quantity
                                     :quant 30
                                     :unit (y / year)))
                   :ARG4 p3))

# ::id winograd_122
# ::snt The painting in Mark's living room shows an oak tree. It is to the right of the bookcase.
# ::suppl winograd_122
(m / multi-sentence
   :snt1 (s / show-01
            :ARG0 (p / painting
                     :location (r / room
                                  :mod (l / living)
                                  :poss (p2 / person
                                            :name (n / name
                                                     :op1 "Mark"))))
            :ARG1 (t / tree
                     :mod (o / oak)))
   :snt2 (b / be-located-at-91
            :ARG1 p
            :ARG2 (r2 / relative-position
                      :op1 (b2 / bookcase)
                      :direction (r3 / right))))

# ::id winograd_123
# ::snt The painting in Mark's living room shows an oak tree. It is to the right of a house.
# ::suppl winograd_123
(m / multi-sentence
   :snt1 (s / show-01
            :ARG0 (p / painting
                     :location (r / room
                                  :mod (l / living)
                                  :poss (p2 / person
                                            :name (n / name
                                                     :op1 "Mark"))))
            :ARG1 (t / tree
                     :mod (o / oak)))
   :snt2 (b / be-located-at-91
            :ARG1 t
            :ARG2 (r2 / relative-position
                      :op1 (h / house)
                      :direction (r3 / right))))

# ::id winograd_124
# ::snt There is a gap in the wall. You can see the garden through it.
# ::suppl winograd_124
(m / multi-sentence
   :snt1 (g / gap
            :location (w / wall))
   :snt2 (p / possible-01
            :ARG1 (s / see-01
                     :ARG0 (y / you)
                     :ARG1 (g2 / garden)
                     :path g)))

# ::id winograd_125
# ::snt There is a gap in the wall. You can see the garden behind it.
# ::suppl winograd_125
(m / multi-sentence
   :snt1 (g / gap
            :location (w / wall))
   :snt2 (p / possible-01
            :ARG1 (s / see-01
                     :ARG0 (y / you)
                     :ARG1 (g2 / garden
                               :location (r / relative-position
                                            :op1 w
                                            :direction (b / behind))))))

# ::id winograd_126
# ::snt The drain is clogged with hair. It has to be cleaned.
# ::suppl winograd_126
(m / multi-sentence
   :snt1 (c / clog-02
            :ARG1 (d / drain)
            :ARG2 (h / hair))
   :snt2 (o / obligate-01
            :ARG2 (c2 / clean-01
                      :ARG1 d)))

# ::id winograd_127
# ::snt The drain is clogged with hair. It has to be removed.
# ::suppl winograd_127
(m / multi-sentence
   :snt1 (c / clog-02
            :ARG1 (d / drain)
            :ARG2 (h / hair))
   :snt2 (o / obligate-01
            :ARG2 (r / remove-01
                     :ARG1 h
                     :ARG2 d)))

# ::id winograd_128
# ::snt My meeting started at 4:00 and I needed to catch the train at 4:30, so there wasn't much time. Luckily, it was short, so it worked out.
# ::suppl winograd_128
(m / multi-sentence
   :snt1 (a / and
            :op1 (s / start-01
                    :time "16:00"
                    :ARG1 (m2 / meeting
                              :poss (i / i)))
            :op2 (o / obligate-01
                    :ARG1 i
                    :ARG2 (c / catch-01
                             :time "16:30"
                             :ARG1 (t / train)))
            :ARG0-of (c2 / cause-01
                         :ARG1 (t2 / time
                                   :quant (m3 / much
                                              :polarity -))))
   :snt2 (s2 / short
             :domain m2
             :ARG0-of (c3 / cause-01
                          :ARG1 (w / work-out-02
                                   :ARG1 c))
             :manner (l / lucky)))

# ::id winograd_129
# ::snt My meeting started at 4:00 and I needed to catch the train at 4:30, so there wasn't much time. Luckily, it was delayed, so it worked out.
# ::suppl winograd_129
(m / multi-sentence
   :snt1 (a / and
            :op1 (s / start-01
                    :time "16:00"
                    :ARG1 (m2 / meeting
                              :poss (i / i)))
            :op2 (o / obligate-01
                    :ARG1 i
                    :ARG2 (c / catch-01
                             :time "16:30"
                             :ARG1 (t / train)))
            :ARG0-of (c2 / cause-01
                         :ARG1 (t2 / time
                                   :quant (m3 / much
                                              :polarity -))))
   :snt2 (d / delay-01
            :ARG1 t
            :manner (l / lucky)
            :ARG0-of (c3 / cause-01
                         :ARG1 (w / work-out-02
                                  :ARG1 c))))

# ::id winograd_130
# ::snt Bob collapsed on the sidewalk. Soon he saw Carl coming to help. He was very ill.
# ::suppl winograd_130
(m / multi-sentence
   :snt1 (c / collapse-01
            :ARG1 (p / person
                     :name (n / name
                              :op1 "Bob"))
            :ARG4 (s / sidewalk))
   :snt2 (s2 / see-01
             :ARG0 p
             :ARG1 (c2 / come-01
                       :ARG1 (p2 / person
                                 :name (n2 / name
                                           :op1 "Carl"))
                       :purpose (h / help-01))
             :time (s3 / soon))
   :snt3 (i2 / ill
             :domain p
             :degree (v / very)))

# ::id winograd_131
# ::snt Bob collapsed on the sidewalk. Soon he saw Carl coming to help. He was very concerned.
# ::suppl winograd_131
(m / multi-sentence
   :snt1 (c / collapse-01
            :ARG1 (p / person
                     :name (n / name
                              :op1 "Bob"))
            :ARG4 (s / sidewalk))
   :snt2 (s2 / see-01
             :ARG0 p
             :ARG1 (c2 / come-01
                       :ARG1 (p2 / person
                                 :name (n2 / name
                                           :op1 "Carl"))
                       :purpose (h2 / help-01))
             :time (s3 / soon))
   :snt3 (c3 / concern-01
             :ARG1 (h / he)
             :degree (v / very)))

# ::id winograd_132
# ::snt Sam and Amy are passionately in love, but Amy's parents are unhappy about it, because they are fifteen.
# ::suppl winograd_132
(l / love-01
   :ARG0 (a / and
            :op1 (p / person
                    :name (n / name
                             :op1 "Sam"))
            :op2 (p2 / person
                     :name (n2 / name
                               :op1 "Amy")))
   :ARG1 (o / other
            :mod (e / each))
   :manner (p3 / passionate)
   :concession (h / happy-01
                  :polarity -
                  :ARG1 (p4 / parent
                            :poss p2)
                  :topic l
                  :ARG1-of (c / cause-01
                              :ARG0 (f / fifteen
                                       :domain a))))

# ::id winograd_133
# ::snt Sam and Amy are passionately in love, but Amy's parents are unhappy about it, because they are snobs.
# ::suppl winograd_133
(l / love-01
   :ARG0 (a / and
            :op1 (p / person
                    :name (n / name
                             :op1 "Sam"))
            :op2 (p2 / person
                     :name (n2 / name
                               :op1 "Amy")))
   :ARG1 (o / other
            :mod (e / each))
   :manner (p3 / passionate)
   :concession (h / happy-01
                  :polarity -
                  :ARG1 (p4 / parent
                            :poss p2)
                  :topic l
                  :ARG1-of (c / cause-01
                              :ARG0 (s / snob
                                       :domain p4))))

# ::id winograd_134
# ::snt Mark told Pete many lies about himself, which Pete included in his book. He should have been more truthful.
# ::suppl winograd_134
(m / multi-sentence
   :snt1 (l / lie-08
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Mark"))
            :ARG2 (p2 / person
                      :name (n2 / name
                                :op1 "Pete"))
            :ARG3 p
            :ARG1-of (i2 / include-01
                         :ARG0 p2
                         :ARG2 (b / book
                                  :poss p2)))
   :snt2 (r / recommend-01
            :ARG1 (t / truthful
                     :ARG2-of (h / have-degree-91
                                 :ARG1 p
                                 :ARG3 (m2 / more)))))

# ::id winograd_135
# ::snt Mark told Pete many lies about himself, which Pete included in his book. He should have been more skeptical.
# ::suppl winograd_135
(m / multi-sentence
   :snt1 (l / lie-08
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Mark"))
            :ARG2 (p2 / person
                      :name (n2 / name
                                :op1 "Pete"))
            :ARG3 p
            :ARG1-of (i2 / include-01
                         :ARG0 p2
                         :ARG2 (b / book
                                  :poss p2)))
   :snt2 (r / recommend-01
            :ARG1 (s / skeptical
                     :ARG2-of (h / have-degree-91
                                 :ARG1 p2
                                 :ARG3 (m2 / more)))))

# ::id winograd_136
# ::snt Joe has sold his house and bought a new one a few miles away. He will be moving out of it on Thursday.
# ::suppl winograd_136
(m / multi-sentence
   :op1 (a / and
           :op1 (s / sell-01
                   :ARG0 (p / person
                            :name (n / name
                                     :op1 "Joe"))
                   :ARG1 (h / house
                            :poss p))
           :op2 (b / buy-01
                   :ARG0 p
                   :ARG1 (h2 / house
                             :mod (n2 / new)
                             :location (r / relative-position
                                          :op1 (a2 / away)
                                          :quant (d / distance-quantity
                                                    :unit (m2 / mile
                                                              :quant (f / few)))))))
   :op2 (m3 / move-01
            :ARG0 p
            :ARG2 (o / out-05
                     :ARG2 h)
            :time (t / thursday)))

# ::id winograd_137
# ::snt Joe has sold his house and bought a new one a few miles away. He will be moving into it on Thursday.
# ::suppl winograd_137
(m / multi-sentence
   :op1 (a / and
           :op1 (s / sell-01
                   :ARG0 (p / person
                            :name (n / name
                                     :op1 "Joe"))
                   :ARG1 (h / house
                            :poss p))
           :op2 (b / buy-01
                   :ARG0 p
                   :ARG1 (h2 / house
                             :mod (n2 / new)
                             :location (r / relative-position
                                          :op1 (a2 / away)
                                          :quant (d / distance-quantity
                                                    :unit (m2 / mile
                                                              :quant (f / few)))))))
   :op2 (m3 / move-01
            :ARG0 p
            :ARG2 h2
            :time (t / thursday)))

# ::id winograd_138
# ::snt Many people start to read Paul's books and can't put them down. They are gripped because Paul writes so well.
# ::suppl winograd_138
(m / multi-sentence
   :snt1 (a / and
            :op1 (s / start-01
                    :ARG0 (p / person
                             :quant (m2 / many))
                    :ARG2 (r / read-01
                             :ARG1 (b / book
                                      :poss (p2 / person
                                                :name (n / name
                                                         :op1 "Paul")))))
            :op2 (p3 / possible-01
                     :polarity -
                     :ARG1 (p4 / put-01
                               :ARG1 b
                               :ARG2 (d / down))))
   :snt2 (g / grip-01
            :ARG1 p
            :ARG1-of (c / cause-01
                        :ARG0 (g2 / good
                                  :mod-of (w / write-01
                                             :ARG0 p2)))))

# ::id winograd_139
# ::snt Many people start to read Paul's books and can't put them down. They are popular because Paul writes so well.
# ::suppl winograd_139
(m / multi-sentence
   :snt1 (a / and
            :op1 (s / start-01
                    :ARG0 (p / person
                             :quant (m2 / many))
                    :ARG2 (r / read-01
                             :ARG1 (b / book
                                      :poss (p2 / person
                                                :name (n / name
                                                         :op1 "Paul")))))
            :op2 (p3 / possible-01
                     :polarity -
                     :ARG1 (p4 / put-01
                               :ARG1 b
                               :ARG2 (d / down))))
   :snt2 (w / write-01
            :ARG0 p2
            :mod (g / good)
            :ARG0-of (c / cause-01
                        :ARG1 (p5 / popular
                                  :domain b))))

# ::id winograd_140
# ::snt Mary took out her flute and played one of her favorite pieces. She has had it since she was a child.
# ::suppl winograd_140
(m / multi-sentence
   :snt1 (a / and
            :op1 (t / take-01
                    :ARG0 (p / person
                             :name (n / name
                                      :op1 "Mary"))
                    :ARG1 (f / flute
                             :poss p)
                    :ARG2 (o / out))
            :op2 (p2 / play-11
                     :ARG0 p
                     :ARG1 (p3 / piece
                               :ARG1-of (i2 / include-91
                                            :ARG2 (f2 / favorite
                                                      :domain (p4 / piece))))))
   :snt2 (h / have-03
            :ARG0 p
            :ARG1 f
            :time (s / since
                     :op1 (c / child
                             :domain p))))

# ::id winograd_141
# ::snt Mary took out her flute and played one of her favorite pieces. She has loved it since she was a child.
# ::suppl winograd_141
(m / multi-sentence
   :snt1 (a / and
            :op1 (t / take-01
                    :ARG0 (p / person
                             :name (n / name
                                      :op1 "Mary"))
                    :ARG1 (f / flute
                             :poss p)
                    :ARG2 (o / out))
            :op2 (p2 / play-11
                     :ARG0 p
                     :ARG1 (p3 / piece
                               :ARG1-of (i2 / include-91
                                            :ARG2 (f2 / favorite
                                                      :domain (p4 / piece))))))
   :snt2 (l / love-01
            :ARG0 p
            :ARG1 p3
            :time (s / since
                     :op1 (c / child
                             :domain p))))

# ::id winograd_142
# ::snt Sam pulled up a chair to the piano, but it was broken, so he had to stand instead.
# ::suppl winograd_142
(p / pull-01
   :ARG0 (p2 / person
             :name (n / name
                      :op1 "Sam"))
   :ARG1 (c / chair)
   :ARG2 (p3 / piano)
   :concession (b / break-01
                  :ARG1 c
                  :ARG0-of (c2 / cause-01
                               :ARG1 (o / obligate-01
                                        :ARG1 p2
                                        :ARG2 (s / stand-01)))))

# ::id winograd_143
# ::snt Sam pulled up a chair to the piano, but it was broken, so he had to sing instead.
# ::suppl winograd_143
(p / pull-01
   :ARG0 (p2 / person
             :name (n / name
                      :op1 "Sam"))
   :ARG1 (c / chair)
   :ARG2 (p3 / piano)
   :concession (b / break-01
                  :ARG1 p3
                  :ARG0-of (c2 / cause-01
                               :ARG1 (o / obligate-01
                                        :ARG1 p2
                                        :ARG2 (s / sing-01)))))

# ::id winograd_144
# ::snt Since it was raining, I carried the newspaper in my backpack to keep it dry.
# ::suppl winograd_144
(c2 / carry-01
    :ARG0 (i / i)
    :ARG1 (n / newspaper)
    :ARG2 (b / backpack
             :poss i)
    :purpose (k / keep-01
                :ARG1 (d / dry
                         :domain n))
    :ARG1-of (c3 / cause-01
                 :ARG0 (r / rain-01)))

# ::id winograd_145
# ::snt Since it was raining, I carried the newspaper over my backpack to keep it dry.
# ::suppl winograd_145
(c2 / carry-01
    :ARG0 (i / i)
    :ARG1 (n / newspaper)
    :purpose (k / keep-01
                :ARG1 (d / dry
                         :domain b))
    :ARG1-of (c3 / cause-01
                 :ARG0 (r / rain-01))
    :location (o / over
                 :op1 (b / backpack
                         :poss i)))

# ::id winograd_146
# ::snt Sara borrowed the book from the library because she needs it for an article she is working on. She reads it when she gets home from work.
# ::suppl winograd_146
(m / multi-sentence
   :snt1 (b / borrow-01
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Sara"))
            :ARG1 (b2 / book)
            :ARG2 (l / library)
            :ARG1-of (c2 / cause-01
                         :ARG0 (n2 / need-01
                                   :ARG0 p
                                   :ARG1 (a / article
                                            :ARG1-of (w / work-10
                                                        :ARG0 p)))))
   :snt2 (r / read-01
            :ARG0 p
            :ARG1 b2
            :time (g / get-05
                     :ARG1 p
                     :ARG2 (h / home)
                     :source (w2 / work-01))))

# ::id winograd_147
# ::snt Sara borrowed the book from the library because she needs it for an article she is working on. She writes it when she gets home from work.
# ::suppl winograd_147
(m / multi-sentence
   :snt1 (b / borrow-01
            :ARG0 (p / person
                     :name (n / name
                              :op1 "Sara"))
            :ARG1 (b2 / book)
            :ARG2 (l / library)
            :ARG1-of (c2 / cause-01
                         :ARG0 (n2 / need-01
                                   :ARG0 p
                                   :ARG1 (a / article
                                            :ARG1-of (w / work-10
                                                        :ARG0 p)))))
   :snt2 (w3 / write-01
             :ARG0 p
             :ARG1 a
             :time (g / get-05
                      :ARG1 p
                      :ARG2 (h / home)
                      :source (w2 / work-01))))

# ::id winograd_148
# ::snt This morning, Joey built a sand castle on the beach, and put a toy flag in the highest tower, but this afternoon the tide knocked it down.
# ::suppl winograd_148
(a / and
   :op1 (b / build-01
           :ARG0 (p / person
                    :name (n / name
                             :op1 "Joey"))
           :ARG1 (c2 / castle
                     :mod (s / sand))
           :location (b2 / beach))
   :op2 (p2 / put-01
            :ARG1 (f / flag
                     :mod (t / toy))
            :ARG2 (t2 / tower
                      :ARG1-of (h / have-degree-91
                                  :ARG2 (h2 / high)
                                  :ARG3 (m / most))))
   :time (m2 / morning)
   :concession (k / knock-down-02
                  :ARG0 (t3 / tide)
                  :ARG1 c2
                  :time (a2 / afternoon)))

# ::id winograd_149
# ::snt This morning, Joey built a sand castle on the beach, and put a toy flag in the highest tower, but this afternoon the wind knocked it down.
# ::suppl winograd_149
(a / and
   :op1 (b / build-01
           :ARG0 (p / person
                    :name (n / name
                             :op1 "Joey"))
           :ARG1 (c2 / castle
                     :mod (s / sand))
           :location (b2 / beach))
   :op2 (p2 / put-01
            :ARG1 (f / flag
                     :mod (t / toy))
            :ARG2 (t2 / tower
                      :ARG1-of (h / have-degree-91
                                  :ARG2 (h2 / high)
                                  :ARG3 (m / most))))
   :time (m2 / morning)
   :concession (k / knock-down-02
                  :ARG0 (w / wind)
                  :ARG1 f
                  :time (a2 / afternoon)))

# ::snt I will skim this essay by tonight.
# ::tree templateReadByDeadline(i,skim,essay,tonight)
# ::id read_by_0
# ::suppl read_by_0
(u_374 / skim-01
       :ARG0 (p / i)
       :ARG1 (u_376 / essay
                    :mod (t / this))
       :time (b / by
                :op1 (u_375 / tonight)))

# ::snt The student will devour this essay by tonight.
# ::tree templateReadByDeadline(student,devour,essay,tonight)
# ::id read_by_1
# ::suppl read_by_1
(u_377 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_379 / essay
                    :mod (t / this))
       :time (b / by
                :op1 (u_378 / tonight)))

# ::snt The girl will skim this book by tonight.
# ::tree templateReadByDeadline(girl,skim,book,tonight)
# ::id read_by_2
# ::suppl read_by_2
(u_380 / skim-01
       :ARG0 (p / girl)
       :ARG1 (u_382 / book
                    :mod (t / this))
       :time (b / by
                :op1 (u_381 / tonight)))

# ::snt The girl will skim this essay by tonight.
# ::tree templateReadByDeadline(girl,skim,essay,tonight)
# ::id read_by_3
# ::suppl read_by_3
(u_383 / skim-01
       :ARG0 (p / girl)
       :ARG1 (u_385 / essay
                    :mod (t / this))
       :time (b / by
                :op1 (u_384 / tonight)))

# ::snt The student will skim this essay by tonight.
# ::tree templateReadByDeadline(student,skim,essay,tonight)
# ::id read_by_4
# ::suppl read_by_4
(u_386 / skim-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_388 / essay
                    :mod (t / this))
       :time (b / by
                :op1 (u_387 / tonight)))

# ::snt You will skim this novel by Monday.
# ::tree templateReadByDeadline(you,skim,novel,monday)
# ::id read_by_5
# ::suppl read_by_5
(u_389 / skim-01
       :ARG0 (p / you)
       :ARG1 (u_390 / novel
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / monday))))

# ::snt You will skim this book by tomorrow.
# ::tree templateReadByDeadline(you,skim,book,tomorrow)
# ::id read_by_6
# ::suppl read_by_6
(u_391 / skim-01
       :ARG0 (p / you)
       :ARG1 (u_393 / book
                    :mod (t / this))
       :time (b / by
                :op1 (u_392 / tomorrow)))

# ::snt The student will devour this essay by Tuesday.
# ::tree templateReadByDeadline(student,devour,essay,tuesday)
# ::id read_by_7
# ::suppl read_by_7
(u_394 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_395 / essay
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / tuesday))))

# ::snt The student will read this essay by tomorrow.
# ::tree templateReadByDeadline(student,read,essay,tomorrow)
# ::id read_by_8
# ::suppl read_by_8
(u_396 / read-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_398 / essay
                    :mod (t / this))
       :time (b / by
                :op1 (u_397 / tomorrow)))

# ::snt The girl will read this book by tonight.
# ::tree templateReadByDeadline(girl,read,book,tonight)
# ::id read_by_9
# ::suppl read_by_9
(u_399 / read-01
       :ARG0 (p / girl)
       :ARG1 (u_401 / book
                    :mod (t / this))
       :time (b / by
                :op1 (u_400 / tonight)))

# ::snt You will skim this novel by Tuesday.
# ::tree templateReadByDeadline(you,skim,novel,tuesday)
# ::id read_by_10
# ::suppl read_by_10
(u_402 / skim-01
       :ARG0 (p / you)
       :ARG1 (u_403 / novel
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / tuesday))))

# ::snt The girl will skim this book by Monday.
# ::tree templateReadByDeadline(girl,skim,book,monday)
# ::id read_by_11
# ::suppl read_by_11
(u_404 / skim-01
       :ARG0 (p / girl)
       :ARG1 (u_405 / book
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / monday))))

# ::snt You will read this novel by tonight.
# ::tree templateReadByDeadline(you,read,novel,tonight)
# ::id read_by_12
# ::suppl read_by_12
(u_406 / read-01
       :ARG0 (p / you)
       :ARG1 (u_408 / novel
                    :mod (t / this))
       :time (b / by
                :op1 (u_407 / tonight)))

# ::snt The student will devour this book by Tuesday.
# ::tree templateReadByDeadline(student,devour,book,tuesday)
# ::id read_by_13
# ::suppl read_by_13
(u_409 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_410 / book
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / tuesday))))

# ::snt You will skim this book by Monday.
# ::tree templateReadByDeadline(you,skim,book,monday)
# ::id read_by_14
# ::suppl read_by_14
(u_411 / skim-01
       :ARG0 (p / you)
       :ARG1 (u_412 / book
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / monday))))

# ::snt The student will devour this novel by Tuesday.
# ::tree templateReadByDeadline(student,devour,novel,tuesday)
# ::id read_by_15
# ::suppl read_by_15
(u_413 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_414 / novel
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / tuesday))))

# ::snt The girl will devour this novel by Tuesday.
# ::tree templateReadByDeadline(girl,devour,novel,tuesday)
# ::id read_by_16
# ::suppl read_by_16
(u_415 / devour-01
       :ARG0 (p / girl)
       :ARG1 (u_416 / novel
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / tuesday))))

# ::snt The student will read this novel by Tuesday.
# ::tree templateReadByDeadline(student,read,novel,tuesday)
# ::id read_by_17
# ::suppl read_by_17
(u_417 / read-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_418 / novel
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / tuesday))))

# ::snt You will skim this essay by Tuesday.
# ::tree templateReadByDeadline(you,skim,essay,tuesday)
# ::id read_by_18
# ::suppl read_by_18
(u_419 / skim-01
       :ARG0 (p / you)
       :ARG1 (u_420 / essay
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / tuesday))))

# ::snt The student will devour this book by Monday.
# ::tree templateReadByDeadline(student,devour,book,monday)
# ::id read_by_19
# ::suppl read_by_19
(u_421 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_422 / book
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / monday))))

# ::snt You will skim this essay by Monday.
# ::tree templateReadByDeadline(you,skim,essay,monday)
# ::id read_by_20
# ::suppl read_by_20
(u_423 / skim-01
       :ARG0 (p / you)
       :ARG1 (u_424 / essay
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / monday))))

# ::snt I will skim this book by Monday.
# ::tree templateReadByDeadline(i,skim,book,monday)
# ::id read_by_21
# ::suppl read_by_21
(u_425 / skim-01
       :ARG0 (p / i)
       :ARG1 (u_426 / book
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / monday))))

# ::snt You will read this novel by tomorrow.
# ::tree templateReadByDeadline(you,read,novel,tomorrow)
# ::id read_by_22
# ::suppl read_by_22
(u_427 / read-01
       :ARG0 (p / you)
       :ARG1 (u_429 / novel
                    :mod (t / this))
       :time (b / by
                :op1 (u_428 / tomorrow)))

# ::snt I will devour this book by Tuesday.
# ::tree templateReadByDeadline(i,devour,book,tuesday)
# ::id read_by_23
# ::suppl read_by_23
(u_430 / devour-01
       :ARG0 (p / i)
       :ARG1 (u_431 / book
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / tuesday))))

# ::snt The student will read this book by Monday.
# ::tree templateReadByDeadline(student,read,book,monday)
# ::id read_by_24
# ::suppl read_by_24
(u_432 / read-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_433 / book
                    :mod (t / this))
       :time (b / by
                :op1 (d / date-entity
                        :weekday (m / monday))))

# ::snt You will devour this essay by firelight.
# ::tree templateReadByLight(you,devour,essay,firelight)
# ::id read_by_25
# ::suppl read_by_25
(u_434 / devour-01
       :ARG0 (p / you)
       :ARG1 (u_435 / essay
                    :mod (t / this))
       :manner (c / firelight))

# ::snt The girl will read this book by firelight.
# ::tree templateReadByLight(girl,read,book,firelight)
# ::id read_by_26
# ::suppl read_by_26
(u_436 / read-01
       :ARG0 (p / girl)
       :ARG1 (u_437 / book
                    :mod (t / this))
       :manner (c / firelight))

# ::snt I will devour this book by candlelight.
# ::tree templateReadByLight(i,devour,book,candlelight)
# ::id read_by_27
# ::suppl read_by_27
(u_438 / devour-01
       :ARG0 (p / i)
       :ARG1 (u_439 / book
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt The girl will skim this essay by candlelight.
# ::tree templateReadByLight(girl,skim,essay,candlelight)
# ::id read_by_28
# ::suppl read_by_28
(u_440 / skim-01
       :ARG0 (p / girl)
       :ARG1 (u_441 / essay
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt I will devour this book by firelight.
# ::tree templateReadByLight(i,devour,book,firelight)
# ::id read_by_29
# ::suppl read_by_29
(u_442 / devour-01
       :ARG0 (p / i)
       :ARG1 (u_443 / book
                    :mod (t / this))
       :manner (c / firelight))

# ::snt The girl will skim this essay by firelight.
# ::tree templateReadByLight(girl,skim,essay,firelight)
# ::id read_by_30
# ::suppl read_by_30
(u_444 / skim-01
       :ARG0 (p / girl)
       :ARG1 (u_445 / essay
                    :mod (t / this))
       :manner (c / firelight))

# ::snt The student will devour this essay by firelight.
# ::tree templateReadByLight(student,devour,essay,firelight)
# ::id read_by_31
# ::suppl read_by_31
(u_446 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_447 / essay
                    :mod (t / this))
       :manner (c / firelight))

# ::snt The student will devour this novel by candlelight.
# ::tree templateReadByLight(student,devour,novel,candlelight)
# ::id read_by_32
# ::suppl read_by_32
(u_448 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_449 / novel
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt The girl will read this book by candlelight.
# ::tree templateReadByLight(girl,read,book,candlelight)
# ::id read_by_33
# ::suppl read_by_33
(u_450 / read-01
       :ARG0 (p / girl)
       :ARG1 (u_451 / book
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt The girl will read this essay by candlelight.
# ::tree templateReadByLight(girl,read,essay,candlelight)
# ::id read_by_34
# ::suppl read_by_34
(u_452 / read-01
       :ARG0 (p / girl)
       :ARG1 (u_453 / essay
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt The girl will skim this novel by candlelight.
# ::tree templateReadByLight(girl,skim,novel,candlelight)
# ::id read_by_35
# ::suppl read_by_35
(u_454 / skim-01
       :ARG0 (p / girl)
       :ARG1 (u_455 / novel
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt The girl will devour this book by candlelight.
# ::tree templateReadByLight(girl,devour,book,candlelight)
# ::id read_by_36
# ::suppl read_by_36
(u_456 / devour-01
       :ARG0 (p / girl)
       :ARG1 (u_457 / book
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt I will read this novel by firelight.
# ::tree templateReadByLight(i,read,novel,firelight)
# ::id read_by_37
# ::suppl read_by_37
(u_458 / read-01
       :ARG0 (p / i)
       :ARG1 (u_459 / novel
                    :mod (t / this))
       :manner (c / firelight))

# ::snt You will devour this novel by firelight.
# ::tree templateReadByLight(you,devour,novel,firelight)
# ::id read_by_38
# ::suppl read_by_38
(u_460 / devour-01
       :ARG0 (p / you)
       :ARG1 (u_461 / novel
                    :mod (t / this))
       :manner (c / firelight))

# ::snt The student will devour this book by firelight.
# ::tree templateReadByLight(student,devour,book,firelight)
# ::id read_by_39
# ::suppl read_by_39
(u_462 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_463 / book
                    :mod (t / this))
       :manner (c / firelight))

# ::snt You will devour this essay by candlelight.
# ::tree templateReadByLight(you,devour,essay,candlelight)
# ::id read_by_40
# ::suppl read_by_40
(u_464 / devour-01
       :ARG0 (p / you)
       :ARG1 (u_465 / essay
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt You will skim this book by firelight.
# ::tree templateReadByLight(you,skim,book,firelight)
# ::id read_by_41
# ::suppl read_by_41
(u_466 / skim-01
       :ARG0 (p / you)
       :ARG1 (u_467 / book
                    :mod (t / this))
       :manner (c / firelight))

# ::snt The student will read this book by candlelight.
# ::tree templateReadByLight(student,read,book,candlelight)
# ::id read_by_42
# ::suppl read_by_42
(u_468 / read-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_469 / book
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt You will skim this essay by candlelight.
# ::tree templateReadByLight(you,skim,essay,candlelight)
# ::id read_by_43
# ::suppl read_by_43
(u_470 / skim-01
       :ARG0 (p / you)
       :ARG1 (u_471 / essay
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt I will skim this novel by firelight.
# ::tree templateReadByLight(i,skim,novel,firelight)
# ::id read_by_44
# ::suppl read_by_44
(u_472 / skim-01
       :ARG0 (p / i)
       :ARG1 (u_473 / novel
                    :mod (t / this))
       :manner (c / firelight))

# ::snt I will skim this novel by candlelight.
# ::tree templateReadByLight(i,skim,novel,candlelight)
# ::id read_by_45
# ::suppl read_by_45
(u_474 / skim-01
       :ARG0 (p / i)
       :ARG1 (u_475 / novel
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt I will skim this essay by candlelight.
# ::tree templateReadByLight(i,skim,essay,candlelight)
# ::id read_by_46
# ::suppl read_by_46
(u_476 / skim-01
       :ARG0 (p / i)
       :ARG1 (u_477 / essay
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt I will read this novel by candlelight.
# ::tree templateReadByLight(i,read,novel,candlelight)
# ::id read_by_47
# ::suppl read_by_47
(u_478 / read-01
       :ARG0 (p / i)
       :ARG1 (u_479 / novel
                    :mod (t / this))
       :manner (c / candlelight))

# ::snt The student will read this book by firelight.
# ::tree templateReadByLight(student,read,book,firelight)
# ::id read_by_48
# ::suppl read_by_48
(u_480 / read-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_481 / book
                    :mod (t / this))
       :manner (c / firelight))

# ::snt The student will read this essay by firelight.
# ::tree templateReadByLight(student,read,essay,firelight)
# ::id read_by_49
# ::suppl read_by_49
(u_482 / read-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_483 / essay
                    :mod (t / this))
       :manner (c / firelight))

# ::snt You will skim this essay by J. K. Rowling.
# ::tree templateReadByAuthor(you,skim,essay,Rowling)
# ::id read_by_50
# ::suppl read_by_50
(u_489 / skim-01
       :ARG0 (p / you)
       :ARG1 (u_490 / essay
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_488 / person
                                             :wiki "J._K._Rowling"
                                             :name (n / name
                                                      :op1 "J."
                                                      :op2 "K."
                                                      :op3 "Rowling")))))

# ::snt The student will devour this novel by J. K. Rowling.
# ::tree templateReadByAuthor(student,devour,novel,Rowling)
# ::id read_by_51
# ::suppl read_by_51
(u_496 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_497 / novel
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_495 / person
                                             :wiki "J._K._Rowling"
                                             :name (n / name
                                                      :op1 "J."
                                                      :op2 "K."
                                                      :op3 "Rowling")))))

# ::snt The student will skim this novel by Jane Austen.
# ::tree templateReadByAuthor(student,skim,novel,Austen)
# ::id read_by_52
# ::suppl read_by_52
(u_502 / skim-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_503 / novel
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_501 / person
                                             :wiki "Jane_Austen"
                                             :name (n / name
                                                      :op1 "Jane"
                                                      :op2 "Austen")))))

# ::snt The girl will skim this book by J. K. Rowling.
# ::tree templateReadByAuthor(girl,skim,book,Rowling)
# ::id read_by_53
# ::suppl read_by_53
(u_509 / skim-01
       :ARG0 (p / girl)
       :ARG1 (u_510 / book
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_508 / person
                                             :wiki "J._K._Rowling"
                                             :name (n / name
                                                      :op1 "J."
                                                      :op2 "K."
                                                      :op3 "Rowling")))))

# ::snt I will devour this essay by Charles Dickens.
# ::tree templateReadByAuthor(i,devour,essay,Dickens)
# ::id read_by_54
# ::suppl read_by_54
(u_515 / devour-01
       :ARG0 (p / i)
       :ARG1 (u_516 / essay
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_514 / person
                                             :wiki "Charles_Dickens"
                                             :name (n / name
                                                      :op1 "Charles"
                                                      :op2 "Dickens")))))

# ::snt The girl will skim this essay by this young author.
# ::tree templateReadByAuthor(girl,skim,essay,this_young_author)
# ::id read_by_55
# ::suppl read_by_55
(u_519 / skim-01
       :ARG0 (p / girl)
       :ARG1 (u_520 / essay
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_517 / person
                                             :mod (u_518 / this)
                                             :mod (y / young)))))

# ::snt I will skim this essay by this young author.
# ::tree templateReadByAuthor(i,skim,essay,this_young_author)
# ::id read_by_56
# ::suppl read_by_56
(u_523 / skim-01
       :ARG0 (p / i)
       :ARG1 (u_524 / essay
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_521 / person
                                             :mod (u_522 / this)
                                             :mod (y / young)))))

# ::snt The student will read this novel by Barack Obama.
# ::tree templateReadByAuthor(student,read,novel,Obama)
# ::id read_by_57
# ::suppl read_by_57
(u_529 / read-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_530 / novel
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_528 / person
                                             :wiki "Barack_Obama"
                                             :name (n / name
                                                      :op1 "Barack"
                                                      :op2 "Obama")))))

# ::snt The girl will read this essay by this young author.
# ::tree templateReadByAuthor(girl,read,essay,this_young_author)
# ::id read_by_58
# ::suppl read_by_58
(u_533 / read-01
       :ARG0 (p / girl)
       :ARG1 (u_534 / essay
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_531 / person
                                             :mod (u_532 / this)
                                             :mod (y / young)))))

# ::snt I will skim this book by this young author.
# ::tree templateReadByAuthor(i,skim,book,this_young_author)
# ::id read_by_59
# ::suppl read_by_59
(u_537 / skim-01
       :ARG0 (p / i)
       :ARG1 (u_538 / book
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_535 / person
                                             :mod (u_536 / this)
                                             :mod (y / young)))))

# ::snt You will read this novel by Jane Austen.
# ::tree templateReadByAuthor(you,read,novel,Austen)
# ::id read_by_60
# ::suppl read_by_60
(u_543 / read-01
       :ARG0 (p / you)
       :ARG1 (u_544 / novel
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_542 / person
                                             :wiki "Jane_Austen"
                                             :name (n / name
                                                      :op1 "Jane"
                                                      :op2 "Austen")))))

# ::snt The student will skim this essay by Charles Dickens.
# ::tree templateReadByAuthor(student,skim,essay,Dickens)
# ::id read_by_61
# ::suppl read_by_61
(u_549 / skim-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_550 / essay
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_548 / person
                                             :wiki "Charles_Dickens"
                                             :name (n / name
                                                      :op1 "Charles"
                                                      :op2 "Dickens")))))

# ::snt The student will skim this book by Barack Obama.
# ::tree templateReadByAuthor(student,skim,book,Obama)
# ::id read_by_62
# ::suppl read_by_62
(u_555 / skim-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_556 / book
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_554 / person
                                             :wiki "Barack_Obama"
                                             :name (n / name
                                                      :op1 "Barack"
                                                      :op2 "Obama")))))

# ::snt The student will devour this essay by this young author.
# ::tree templateReadByAuthor(student,devour,essay,this_young_author)
# ::id read_by_63
# ::suppl read_by_63
(u_559 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_560 / essay
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_557 / person
                                             :mod (u_558 / this)
                                             :mod (y / young)))))

# ::snt I will read this essay by J. K. Rowling.
# ::tree templateReadByAuthor(i,read,essay,Rowling)
# ::id read_by_64
# ::suppl read_by_64
(u_566 / read-01
       :ARG0 (p / i)
       :ARG1 (u_567 / essay
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_565 / person
                                             :wiki "J._K._Rowling"
                                             :name (n / name
                                                      :op1 "J."
                                                      :op2 "K."
                                                      :op3 "Rowling")))))

# ::snt You will devour this novel by J. K. Rowling.
# ::tree templateReadByAuthor(you,devour,novel,Rowling)
# ::id read_by_65
# ::suppl read_by_65
(u_573 / devour-01
       :ARG0 (p / you)
       :ARG1 (u_574 / novel
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_572 / person
                                             :wiki "J._K._Rowling"
                                             :name (n / name
                                                      :op1 "J."
                                                      :op2 "K."
                                                      :op3 "Rowling")))))

# ::snt I will skim this book by Charles Dickens.
# ::tree templateReadByAuthor(i,skim,book,Dickens)
# ::id read_by_66
# ::suppl read_by_66
(u_579 / skim-01
       :ARG0 (p / i)
       :ARG1 (u_580 / book
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_578 / person
                                             :wiki "Charles_Dickens"
                                             :name (n / name
                                                      :op1 "Charles"
                                                      :op2 "Dickens")))))

# ::snt The girl will skim this book by this young author.
# ::tree templateReadByAuthor(girl,skim,book,this_young_author)
# ::id read_by_67
# ::suppl read_by_67
(u_583 / skim-01
       :ARG0 (p / girl)
       :ARG1 (u_584 / book
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_581 / person
                                             :mod (u_582 / this)
                                             :mod (y / young)))))

# ::snt I will devour this novel by J. K. Rowling.
# ::tree templateReadByAuthor(i,devour,novel,Rowling)
# ::id read_by_68
# ::suppl read_by_68
(u_590 / devour-01
       :ARG0 (p / i)
       :ARG1 (u_591 / novel
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_589 / person
                                             :wiki "J._K._Rowling"
                                             :name (n / name
                                                      :op1 "J."
                                                      :op2 "K."
                                                      :op3 "Rowling")))))

# ::snt I will read this essay by Charles Dickens.
# ::tree templateReadByAuthor(i,read,essay,Dickens)
# ::id read_by_69
# ::suppl read_by_69
(u_596 / read-01
       :ARG0 (p / i)
       :ARG1 (u_597 / essay
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_595 / person
                                             :wiki "Charles_Dickens"
                                             :name (n / name
                                                      :op1 "Charles"
                                                      :op2 "Dickens")))))

# ::snt The student will skim this book by J. K. Rowling.
# ::tree templateReadByAuthor(student,skim,book,Rowling)
# ::id read_by_70
# ::suppl read_by_70
(u_603 / skim-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_604 / book
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_602 / person
                                             :wiki "J._K._Rowling"
                                             :name (n / name
                                                      :op1 "J."
                                                      :op2 "K."
                                                      :op3 "Rowling")))))

# ::snt The student will devour this essay by Barack Obama.
# ::tree templateReadByAuthor(student,devour,essay,Obama)
# ::id read_by_71
# ::suppl read_by_71
(u_609 / devour-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_610 / essay
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_608 / person
                                             :wiki "Barack_Obama"
                                             :name (n / name
                                                      :op1 "Barack"
                                                      :op2 "Obama")))))

# ::snt The student will read this book by Barack Obama.
# ::tree templateReadByAuthor(student,read,book,Obama)
# ::id read_by_72
# ::suppl read_by_72
(u_615 / read-01
       :ARG0 (p / person
                :ARG0-of (s / study-01))
       :ARG1 (u_616 / book
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_614 / person
                                             :wiki "Barack_Obama"
                                             :name (n / name
                                                      :op1 "Barack"
                                                      :op2 "Obama")))))

# ::snt You will read this book by J. K. Rowling.
# ::tree templateReadByAuthor(you,read,book,Rowling)
# ::id read_by_73
# ::suppl read_by_73
(u_622 / read-01
       :ARG0 (p / you)
       :ARG1 (u_623 / book
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_621 / person
                                             :wiki "J._K._Rowling"
                                             :name (n / name
                                                      :op1 "J."
                                                      :op2 "K."
                                                      :op3 "Rowling")))))

# ::snt The girl will skim this novel by J. K. Rowling.
# ::tree templateReadByAuthor(girl,skim,novel,Rowling)
# ::id read_by_74
# ::suppl read_by_74
(u_629 / skim-01
       :ARG0 (p / girl)
       :ARG1 (u_630 / novel
                    :mod (t / this)
                    :ARG1-of (a / author-01
                                :ARG0 (u_628 / person
                                             :wiki "J._K._Rowling"
                                             :name (n / name
                                                      :op1 "J."
                                                      :op2 "K."
                                                      :op3 "Rowling")))))

# ::snt A beautiful round container
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size_null(NP_age_null(NP_shape(NP_colour_null(NP_material_null(container)),round))),beautiful)))
# ::size0 4
# ::id adjectives_0
# ::suppl adjectives_0
(r / container
   :ARG1-of (u_141 / round-06)
   :ARG1-of (u_142 / beautiful-02))

# ::snt A fantastic big plate
# ::tree DP(NP_opinion_2(NP_opinion_null(NP_size(NP_age_null(NP_shape_null(NP_colour_null(NP_material_null(plate)))),big)),fantastic))
# ::size0 4
# ::id adjectives_1
# ::suppl adjectives_1
(r / plate
   :ARG1 (u_144 / fantastic-02)
   :ARG1-of (u_143 / big-01))

# ::snt A beautiful round container
# ::tree DP(NP_opinion_2(NP_opinion_null(NP_size_null(NP_age_null(NP_shape(NP_colour_null(NP_material_null(container)),round)))),beautiful))
# ::size0 4
# ::id adjectives_2
# ::suppl adjectives_2
(r / container
   :ARG1-of (u_145 / round-06)
   :ARG1-of (u_146 / beautiful-02))

# ::snt A fantastic pale plate
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size_null(NP_age_null(NP_shape_null(NP_colour(NP_material_null(plate),pale)))),fantastic)))
# ::size0 4
# ::id adjectives_3
# ::suppl adjectives_3
(r / plate
   :ARG1 (u_148 / fantastic-02)
   :ARG1-of (u_147 / pale-03))

# ::snt A big round container
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size(NP_age_null(NP_shape(NP_colour_null(NP_material_null(container)),round)),big))))
# ::size0 4
# ::id adjectives_4
# ::suppl adjectives_4
(r / container
   :ARG1-of (u_149 / round-06)
   :ARG1-of (u_150 / big-01))

# ::snt A antique dark container
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size_null(NP_age(NP_shape_null(NP_colour(NP_material_null(container),dark)),antique)))))
# ::size0 4
# ::id adjectives_5
# ::suppl adjectives_5
(r / container
   :mod (u_152 / antique)
   :ARG1-of (u_151 / dark-02))

# ::snt A beautiful strange container
# ::tree DP(NP_opinion_2(NP_opinion(NP_size_null(NP_age_null(NP_shape_null(NP_colour_null(NP_material_null(container))))),strange),beautiful))
# ::size0 4
# ::id adjectives_6
# ::suppl adjectives_6
(r / container
   :mod (u_153 / strange)
   :ARG1-of (u_154 / beautiful-02))

# ::snt A small new container
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size(NP_age(NP_shape_null(NP_colour_null(NP_material_null(container))),new),small))))
# ::size0 4
# ::id adjectives_7
# ::suppl adjectives_7
(r / container
   :ARG1-of (u_155 / new-01)
   :ARG1-of (u_156 / small-01))

# ::snt A beautiful dark plate
# ::tree DP(NP_opinion_2(NP_opinion_null(NP_size_null(NP_age_null(NP_shape_null(NP_colour(NP_material_null(plate),dark))))),beautiful))
# ::size0 4
# ::id adjectives_8
# ::suppl adjectives_8
(r / plate
   :ARG1-of (u_157 / dark-02)
   :ARG1-of (u_158 / beautiful-02))

# ::snt A big round plate
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size(NP_age_null(NP_shape(NP_colour_null(NP_material_null(plate)),round)),big))))
# ::size0 4
# ::id adjectives_9
# ::suppl adjectives_9
(r / plate
   :ARG1-of (u_159 / round-06)
   :ARG1-of (u_160 / big-01))

# ::snt A big round pale plate
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size(NP_age_null(NP_shape(NP_colour(NP_material_null(plate),pale),round)),big))))
# ::size0 5
# ::id adjectives_10
# ::suppl adjectives_10
(r / plate
   :ARG1-of (u_161 / pale-03)
   :ARG1-of (u_162 / round-06)
   :ARG1-of (u_163 / big-01))

# ::snt A strange new dark container
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size_null(NP_age(NP_shape_null(NP_colour(NP_material_null(container),dark)),new)),strange)))
# ::size0 5
# ::id adjectives_11
# ::suppl adjectives_11
(r / container
   :mod (u_166 / strange)
   :ARG1-of (u_164 / dark-02)
   :ARG1-of (u_165 / new-01))

# ::snt A fantastic big round container
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size(NP_age_null(NP_shape(NP_colour_null(NP_material_null(container)),round)),big),fantastic)))
# ::size0 5
# ::id adjectives_12
# ::suppl adjectives_12
(r / container
   :ARG1 (u_169 / fantastic-02)
   :ARG1-of (u_167 / round-06)
   :ARG1-of (u_168 / big-01))

# ::snt A strange beautiful round plate
# ::tree DP(NP_opinion_2(NP_opinion(NP_size_null(NP_age_null(NP_shape(NP_colour_null(NP_material_null(plate)),round))),beautiful),strange))
# ::size0 5
# ::id adjectives_13
# ::suppl adjectives_13
(r / plate
   :mod (u_172 / strange)
   :ARG1-of (u_170 / round-06)
   :ARG1-of (u_171 / beautiful-02))

# ::snt A fantastic small pale container
# ::tree DP(NP_opinion_2(NP_opinion_null(NP_size(NP_age_null(NP_shape_null(NP_colour(NP_material_null(container),pale))),small)),fantastic))
# ::size0 5
# ::id adjectives_14
# ::suppl adjectives_14
(r / container
   :ARG1 (u_175 / fantastic-02)
   :ARG1-of (u_173 / pale-03)
   :ARG1-of (u_174 / small-01))

# ::snt A strange antique dark plate
# ::tree DP(NP_opinion_2(NP_opinion_null(NP_size_null(NP_age(NP_shape_null(NP_colour(NP_material_null(plate),dark)),antique))),strange))
# ::size0 5
# ::id adjectives_15
# ::suppl adjectives_15
(r / plate
   :mod (u_177 / antique)
   :mod (u_178 / strange)
   :ARG1-of (u_176 / dark-02))

# ::snt A strange big round plate
# ::tree DP(NP_opinion_2(NP_opinion_null(NP_size(NP_age_null(NP_shape(NP_colour_null(NP_material_null(plate)),round)),big)),strange))
# ::size0 5
# ::id adjectives_16
# ::suppl adjectives_16
(r / plate
   :mod (u_181 / strange)
   :ARG1-of (u_179 / round-06)
   :ARG1-of (u_180 / big-01))

# ::snt A fantastic beautiful pale plate
# ::tree DP(NP_opinion_2(NP_opinion(NP_size_null(NP_age_null(NP_shape_null(NP_colour(NP_material_null(plate),pale)))),beautiful),fantastic))
# ::size0 5
# ::id adjectives_17
# ::suppl adjectives_17
(r / plate
   :ARG1 (u_184 / fantastic-02)
   :ARG1-of (u_182 / pale-03)
   :ARG1-of (u_183 / beautiful-02))

# ::snt A fantastic new dark plate
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size_null(NP_age(NP_shape_null(NP_colour(NP_material_null(plate),dark)),new)),fantastic)))
# ::size0 5
# ::id adjectives_18
# ::suppl adjectives_18
(r / plate
   :ARG1 (u_187 / fantastic-02)
   :ARG1-of (u_185 / dark-02)
   :ARG1-of (u_186 / new-01))

# ::snt A beautiful antique round plate
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size_null(NP_age(NP_shape(NP_colour_null(NP_material_null(plate)),round),antique)),beautiful)))
# ::size0 5
# ::id adjectives_19
# ::suppl adjectives_19
(r / plate
   :mod (u_189 / antique)
   :ARG1-of (u_188 / round-06)
   :ARG1-of (u_190 / beautiful-02))

# ::snt A fantastic beautiful square pale container
# ::tree DP(NP_opinion_2(NP_opinion(NP_size_null(NP_age_null(NP_shape(NP_colour(NP_material_null(container),pale),square))),beautiful),fantastic))
# ::size0 6
# ::id adjectives_20
# ::suppl adjectives_20
(r / container
   :mod (u_192 / square)
   :ARG1 (u_194 / fantastic-02)
   :ARG1-of (u_191 / pale-03)
   :ARG1-of (u_193 / beautiful-02))

# ::snt A beautiful strange small round container
# ::tree DP(NP_opinion_2(NP_opinion(NP_size(NP_age_null(NP_shape(NP_colour_null(NP_material_null(container)),round)),small),strange),beautiful))
# ::size0 6
# ::id adjectives_21
# ::suppl adjectives_21
(r / container
   :mod (u_197 / strange)
   :ARG1-of (u_195 / round-06)
   :ARG1-of (u_196 / small-01)
   :ARG1-of (u_198 / beautiful-02))

# ::snt A strange new round pale container
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size_null(NP_age(NP_shape(NP_colour(NP_material_null(container),pale),round),new)),strange)))
# ::size0 6
# ::id adjectives_22
# ::suppl adjectives_22
(r / container
   :mod (u_202 / strange)
   :ARG1-of (u_199 / pale-03)
   :ARG1-of (u_200 / round-06)
   :ARG1-of (u_201 / new-01))

# ::snt A beautiful fantastic big antique plate
# ::tree DP(NP_opinion_2(NP_opinion(NP_size(NP_age(NP_shape_null(NP_colour_null(NP_material_null(plate))),antique),big),fantastic),beautiful))
# ::size0 6
# ::id adjectives_23
# ::suppl adjectives_23
(r / plate
   :mod (u_203 / antique)
   :ARG1 (u_205 / fantastic-02)
   :ARG1-of (u_204 / big-01)
   :ARG1-of (u_206 / beautiful-02))

# ::snt A beautiful new round dark plate
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size_null(NP_age(NP_shape(NP_colour(NP_material_null(plate),dark),round),new)),beautiful)))
# ::size0 6
# ::id adjectives_24
# ::suppl adjectives_24
(r / plate
   :ARG1-of (u_207 / dark-02)
   :ARG1-of (u_208 / round-06)
   :ARG1-of (u_209 / new-01)
   :ARG1-of (u_210 / beautiful-02))

# ::snt A beautiful small new square container
# ::tree DP(NP_opinion_2(NP_opinion_null(NP_size(NP_age(NP_shape(NP_colour_null(NP_material_null(container)),square),new),small)),beautiful))
# ::size0 6
# ::id adjectives_25
# ::suppl adjectives_25
(r / container
   :mod (u_211 / square)
   :ARG1-of (u_212 / new-01)
   :ARG1-of (u_213 / small-01)
   :ARG1-of (u_214 / beautiful-02))

# ::snt A fantastic beautiful new dark container
# ::tree DP(NP_opinion_2(NP_opinion(NP_size_null(NP_age(NP_shape_null(NP_colour(NP_material_null(container),dark)),new)),beautiful),fantastic))
# ::size0 6
# ::id adjectives_26
# ::suppl adjectives_26
(r / container
   :ARG1 (u_218 / fantastic-02)
   :ARG1-of (u_215 / dark-02)
   :ARG1-of (u_216 / new-01)
   :ARG1-of (u_217 / beautiful-02))

# ::snt A fantastic big antique pale container
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size(NP_age(NP_shape_null(NP_colour(NP_material_null(container),pale)),antique),big),fantastic)))
# ::size0 6
# ::id adjectives_27
# ::suppl adjectives_27
(r / container
   :mod (u_220 / antique)
   :ARG1 (u_222 / fantastic-02)
   :ARG1-of (u_219 / pale-03)
   :ARG1-of (u_221 / big-01))

# ::snt A small new round dark plate
# ::tree DP(NP_opinion_2_null(NP_opinion_null(NP_size(NP_age(NP_shape(NP_colour(NP_material_null(plate),dark),round),new),small))))
# ::size0 6
# ::id adjectives_28
# ::suppl adjectives_28
(r / plate
   :ARG1-of (u_223 / dark-02)
   :ARG1-of (u_224 / round-06)
   :ARG1-of (u_225 / new-01)
   :ARG1-of (u_226 / small-01))

# ::snt A beautiful fantastic square dark container
# ::tree DP(NP_opinion_2(NP_opinion(NP_size_null(NP_age_null(NP_shape(NP_colour(NP_material_null(container),dark),square))),fantastic),beautiful))
# ::size0 6
# ::id adjectives_29
# ::suppl adjectives_29
(r / container
   :mod (u_228 / square)
   :ARG1 (u_229 / fantastic-02)
   :ARG1-of (u_227 / dark-02)
   :ARG1-of (u_230 / beautiful-02))

# ::snt A beautiful small antique square dark container
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size(NP_age(NP_shape(NP_colour(NP_material_null(container),dark),square),antique),small),beautiful)))
# ::size0 7
# ::id adjectives_30
# ::suppl adjectives_30
(r / container
   :mod (u_232 / square)
   :mod (u_233 / antique)
   :ARG1-of (u_231 / dark-02)
   :ARG1-of (u_234 / small-01)
   :ARG1-of (u_235 / beautiful-02))

# ::snt A strange big new round dark container
# ::tree DP(NP_opinion_2(NP_opinion_null(NP_size(NP_age(NP_shape(NP_colour(NP_material_null(container),dark),round),new),big)),strange))
# ::size0 7
# ::id adjectives_31
# ::suppl adjectives_31
(r / container
   :mod (u_240 / strange)
   :ARG1-of (u_236 / dark-02)
   :ARG1-of (u_237 / round-06)
   :ARG1-of (u_238 / new-01)
   :ARG1-of (u_239 / big-01))

# ::snt A strange beautiful small round pale plate
# ::tree DP(NP_opinion_2(NP_opinion(NP_size(NP_age_null(NP_shape(NP_colour(NP_material_null(plate),pale),round)),small),beautiful),strange))
# ::size0 7
# ::id adjectives_32
# ::suppl adjectives_32
(r / plate
   :mod (u_245 / strange)
   :ARG1-of (u_241 / pale-03)
   :ARG1-of (u_242 / round-06)
   :ARG1-of (u_243 / small-01)
   :ARG1-of (u_244 / beautiful-02))

# ::snt A strange beautiful small antique square container
# ::tree DP(NP_opinion_2(NP_opinion(NP_size(NP_age(NP_shape(NP_colour_null(NP_material_null(container)),square),antique),small),beautiful),strange))
# ::size0 7
# ::id adjectives_33
# ::suppl adjectives_33
(r / container
   :mod (u_246 / square)
   :mod (u_247 / antique)
   :mod (u_250 / strange)
   :ARG1-of (u_248 / small-01)
   :ARG1-of (u_249 / beautiful-02))

# ::snt A fantastic small antique round dark plate
# ::tree DP(NP_opinion_2(NP_opinion_null(NP_size(NP_age(NP_shape(NP_colour(NP_material_null(plate),dark),round),antique),small)),fantastic))
# ::size0 7
# ::id adjectives_34
# ::suppl adjectives_34
(r / plate
   :mod (u_253 / antique)
   :ARG1 (u_255 / fantastic-02)
   :ARG1-of (u_251 / dark-02)
   :ARG1-of (u_252 / round-06)
   :ARG1-of (u_254 / small-01))

# ::snt A beautiful fantastic big new pale plate
# ::tree DP(NP_opinion_2(NP_opinion(NP_size(NP_age(NP_shape_null(NP_colour(NP_material_null(plate),pale)),new),big),fantastic),beautiful))
# ::size0 7
# ::id adjectives_35
# ::suppl adjectives_35
(r / plate
   :ARG1 (u_259 / fantastic-02)
   :ARG1-of (u_256 / pale-03)
   :ARG1-of (u_257 / new-01)
   :ARG1-of (u_258 / big-01)
   :ARG1-of (u_260 / beautiful-02))

# ::snt A beautiful big new square dark plate
# ::tree DP(NP_opinion_2(NP_opinion_null(NP_size(NP_age(NP_shape(NP_colour(NP_material_null(plate),dark),square),new),big)),beautiful))
# ::size0 7
# ::id adjectives_36
# ::suppl adjectives_36
(r / plate
   :mod (u_262 / square)
   :ARG1-of (u_261 / dark-02)
   :ARG1-of (u_263 / new-01)
   :ARG1-of (u_264 / big-01)
   :ARG1-of (u_265 / beautiful-02))

# ::snt A fantastic beautiful big antique round plate
# ::tree DP(NP_opinion_2(NP_opinion(NP_size(NP_age(NP_shape(NP_colour_null(NP_material_null(plate)),round),antique),big),beautiful),fantastic))
# ::size0 7
# ::id adjectives_37
# ::suppl adjectives_37
(r / plate
   :mod (u_267 / antique)
   :ARG1 (u_270 / fantastic-02)
   :ARG1-of (u_266 / round-06)
   :ARG1-of (u_268 / big-01)
   :ARG1-of (u_269 / beautiful-02))

# ::snt A strange big antique square dark container
# ::tree DP(NP_opinion_2_null(NP_opinion(NP_size(NP_age(NP_shape(NP_colour(NP_material_null(container),dark),square),antique),big),strange)))
# ::size0 7
# ::id adjectives_38
# ::suppl adjectives_38
(r / container
   :mod (u_272 / square)
   :mod (u_273 / antique)
   :mod (u_275 / strange)
   :ARG1-of (u_271 / dark-02)
   :ARG1-of (u_274 / big-01))

# ::snt A fantastic strange new round pale plate
# ::tree DP(NP_opinion_2(NP_opinion(NP_size_null(NP_age(NP_shape(NP_colour(NP_material_null(plate),pale),round),new)),strange),fantastic))
# ::size0 7
# ::id adjectives_39
# ::suppl adjectives_39
(r / plate
   :mod (u_279 / strange)
   :ARG1 (u_280 / fantastic-02)
   :ARG1-of (u_276 / pale-03)
   :ARG1-of (u_277 / round-06)
   :ARG1-of (u_278 / new-01))

# ::snt The girls said that we arrived
# ::tree TP_CP(said,girls,TP_intr(arrived,we))
# ::size0 2
# ::id deep_recursion_basic_0
# ::suppl deep_recursion_basic_0
(u_2446 / say-01
        :ARG0 (r / girl)
        :ARG1 (u_2445 / arrive-01
                      :ARG1 (u_2447 / we)))

# ::snt The astronaut knew that we won
# ::tree TP_CP(knew,astronaut,TP_intr(won,we))
# ::size0 2
# ::id deep_recursion_basic_1
# ::suppl deep_recursion_basic_1
(u_2449 / know-01
        :ARG0 (a / astronaut)
        :ARG1 (u_2448 / win-01
                      :ARG0 (r / we)))

# ::snt The men thought that the boys sneezed
# ::tree TP_CP(thought,men,TP_intr(sneezed,boys))
# ::size0 2
# ::id deep_recursion_basic_2
# ::suppl deep_recursion_basic_2
(u_2451 / think-01
        :ARG0 (r / man)
        :ARG1 (u_2450 / sneeze-01
                      :ARG0 (u_2452 / boy)))

# ::snt The doctor said that the soldier arrived
# ::tree TP_CP(said,doctor,TP_intr(arrived,soldier))
# ::size0 2
# ::id deep_recursion_basic_3
# ::suppl deep_recursion_basic_3
(u_2453 / say-01
        :ARG0 (d / doctor)
        :ARG1 (r / arrive-01
                 :ARG1 (s / soldier)))

# ::snt The kids said that the men slept
# ::tree TP_CP(said,kids,TP_intr(slept,men))
# ::size0 2
# ::id deep_recursion_basic_4
# ::suppl deep_recursion_basic_4
(u_2456 / say-01
        :ARG0 (r / kid)
        :ARG1 (u_2455 / sleep-01
                      :ARG0 (u_2457 / man)))

# ::snt I said that the boys won
# ::tree TP_CP(said,I,TP_intr(won,boys))
# ::size0 2
# ::id deep_recursion_basic_5
# ::suppl deep_recursion_basic_5
(u_2459 / say-01
        :ARG0 (r / i)
        :ARG1 (u_2458 / win-01
                      :ARG0 (u_2460 / boy)))

# ::snt The boys heard that the men sneezed
# ::tree TP_CP(heard,boys,TP_intr(sneezed,men))
# ::size0 2
# ::id deep_recursion_basic_6
# ::suppl deep_recursion_basic_6
(u_2462 / hear-01
        :ARG0 (r / boy)
        :ARG1 (u_2461 / sneeze-01
                      :ARG0 (u_2463 / man)))

# ::snt We believed that the soldier slept
# ::tree TP_CP(believed,we,TP_intr(slept,soldier))
# ::size0 2
# ::id deep_recursion_basic_7
# ::suppl deep_recursion_basic_7
(u_2464 / believe-01
        :ARG0 (r / we)
        :ARG1 (u_2466 / sleep-01
                      :ARG0 (s / soldier)))

# ::snt The kids believed that the men sneezed
# ::tree TP_CP(believed,kids,TP_intr(sneezed,men))
# ::size0 2
# ::id deep_recursion_basic_8
# ::suppl deep_recursion_basic_8
(u_2468 / believe-01
        :ARG0 (r / kid)
        :ARG1 (u_2467 / sneeze-01
                      :ARG0 (u_2469 / man)))

# ::snt The women mentioned that we won
# ::tree TP_CP(mentioned,women,TP_intr(won,we))
# ::size0 2
# ::id deep_recursion_basic_9
# ::suppl deep_recursion_basic_9
(u_2471 / mention-01
        :ARG0 (r / woman)
        :ARG1 (u_2470 / win-01
                      :ARG0 (u_2472 / we)))

# ::snt I thought that the lawyer said that the men slept
# ::tree TP_CP(thought,I,TP_CP(said,lawyer,TP_intr(slept,men)))
# ::size0 3
# ::id deep_recursion_basic_10
# ::suppl deep_recursion_basic_10
(u_2475 / think-01
        :ARG0 (r / i)
        :ARG1 (u_2474 / say-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_2473 / sleep-01
                                    :ARG0 (u_2476 / man))))

# ::snt We said that the women mentioned that the astronaut arrived
# ::tree TP_CP(said,we,TP_CP(mentioned,women,TP_intr(arrived,astronaut)))
# ::size0 3
# ::id deep_recursion_basic_11
# ::suppl deep_recursion_basic_11
(u_2479 / say-01
        :ARG0 (r / we)
        :ARG1 (u_2477 / mention-01
                      :ARG0 (u_2480 / woman)
                      :ARG1 (u_2478 / arrive-01
                                    :ARG1 (a / astronaut))))

# ::snt The astronaut said that the soldier heard that the lawyer won
# ::tree TP_CP(said,astronaut,TP_CP(heard,soldier,TP_intr(won,lawyer)))
# ::size0 3
# ::id deep_recursion_basic_12
# ::suppl deep_recursion_basic_12
(u_2482 / say-01
        :ARG0 (a / astronaut)
        :ARG1 (u_2481 / hear-01
                      :ARG0 (s / soldier)
                      :ARG1 (r / win-01
                               :ARG0 (m / lawyer))))

# ::snt The boys thought that the kids said that the astronaut arrived
# ::tree TP_CP(thought,boys,TP_CP(said,kids,TP_intr(arrived,astronaut)))
# ::size0 3
# ::id deep_recursion_basic_13
# ::suppl deep_recursion_basic_13
(u_2486 / think-01
        :ARG0 (r / boy)
        :ARG1 (u_2484 / say-01
                      :ARG0 (u_2487 / kid)
                      :ARG1 (u_2485 / arrive-01
                                    :ARG1 (a / astronaut))))

# ::snt The men heard that the women mentioned that the kids won
# ::tree TP_CP(heard,men,TP_CP(mentioned,women,TP_intr(won,kids)))
# ::size0 3
# ::id deep_recursion_basic_14
# ::suppl deep_recursion_basic_14
(u_2491 / hear-01
        :ARG0 (r / man)
        :ARG1 (u_2489 / mention-01
                      :ARG0 (u_2492 / woman)
                      :ARG1 (u_2488 / win-01
                                    :ARG0 (u_2490 / kid))))

# ::snt The men knew that we heard that you sneezed
# ::tree TP_CP(knew,men,TP_CP(heard,we,TP_intr(sneezed,you)))
# ::size0 3
# ::id deep_recursion_basic_15
# ::suppl deep_recursion_basic_15
(u_2496 / know-01
        :ARG0 (r / man)
        :ARG1 (u_2494 / hear-01
                      :ARG0 (u_2497 / we)
                      :ARG1 (u_2493 / sneeze-01
                                    :ARG0 (u_2495 / you))))

# ::snt The doctor knew that the soldier thought that the women won
# ::tree TP_CP(knew,doctor,TP_CP(thought,soldier,TP_intr(won,women)))
# ::size0 3
# ::id deep_recursion_basic_16
# ::suppl deep_recursion_basic_16
(u_2500 / know-01
        :ARG0 (d / doctor)
        :ARG1 (u_2499 / think-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_2498 / win-01
                                    :ARG0 (r / woman))))

# ::snt The girls mentioned that the women knew that the lawyer sneezed
# ::tree TP_CP(mentioned,girls,TP_CP(knew,women,TP_intr(sneezed,lawyer)))
# ::size0 3
# ::id deep_recursion_basic_17
# ::suppl deep_recursion_basic_17
(u_2504 / mention-01
        :ARG0 (r / girl)
        :ARG1 (u_2502 / know-01
                      :ARG0 (u_2505 / woman)
                      :ARG1 (u_2503 / sneeze-01
                                    :ARG0 (m / lawyer))))

# ::snt The doctor mentioned that the soldier knew that the girls sneezed
# ::tree TP_CP(mentioned,doctor,TP_CP(knew,soldier,TP_intr(sneezed,girls)))
# ::size0 3
# ::id deep_recursion_basic_18
# ::suppl deep_recursion_basic_18
(u_2508 / mention-01
        :ARG0 (d / doctor)
        :ARG1 (u_2507 / know-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_2506 / sneeze-01
                                    :ARG0 (r / girl))))

# ::snt The men mentioned that the astronaut believed that the soldier won
# ::tree TP_CP(mentioned,men,TP_CP(believed,astronaut,TP_intr(won,soldier)))
# ::size0 3
# ::id deep_recursion_basic_19
# ::suppl deep_recursion_basic_19
(u_2512 / mention-01
        :ARG0 (r / man)
        :ARG1 (u_2510 / believe-01
                      :ARG0 (a / astronaut)
                      :ARG1 (u_2514 / win-01
                                    :ARG0 (s / soldier))))

# ::snt The women mentioned that the kids believed that the girls mentioned that the soldier arrived
# ::tree TP_CP(mentioned,women,TP_CP(believed,kids,TP_CP(mentioned,girls,TP_intr(arrived,soldier))))
# ::size0 4
# ::id deep_recursion_basic_20
# ::suppl deep_recursion_basic_20
(u_2521 / mention-01
        :ARG0 (r / woman)
        :ARG1 (u_2518 / believe-01
                      :ARG0 (u_2523 / kid)
                      :ARG1 (u_2515 / mention-01
                                    :ARG0 (u_2520 / girl)
                                    :ARG1 (u_2517 / arrive-01
                                                  :ARG1 (s / soldier)))))

# ::snt The soldier mentioned that you heard that we knew that I arrived
# ::tree TP_CP(mentioned,soldier,TP_CP(heard,you,TP_CP(knew,we,TP_intr(arrived,I))))
# ::size0 4
# ::id deep_recursion_basic_21
# ::suppl deep_recursion_basic_21
(u_2529 / mention-01
        :ARG0 (s / soldier)
        :ARG1 (u_2527 / hear-01
                      :ARG0 (r / you)
                      :ARG1 (u_2525 / know-01
                                    :ARG0 (u_2528 / we)
                                    :ARG1 (u_2524 / arrive-01
                                                  :ARG1 (u_2526 / i)))))

# ::snt The astronaut believed that the girls said that you believed that the boys arrived
# ::tree TP_CP(believed,astronaut,TP_CP(said,girls,TP_CP(believed,you,TP_intr(arrived,boys))))
# ::size0 4
# ::id deep_recursion_basic_22
# ::suppl deep_recursion_basic_22
(u_2535 / believe-01
        :ARG0 (a / astronaut)
        :ARG1 (u_2533 / say-01
                      :ARG0 (r / girl)
                      :ARG1 (u_2531 / believe-01
                                    :ARG0 (u_2534 / you)
                                    :ARG1 (u_2530 / arrive-01
                                                  :ARG1 (u_2532 / boy)))))

# ::snt You thought that the boys heard that the lawyer heard that the kids won
# ::tree TP_CP(thought,you,TP_CP(heard,boys,TP_CP(heard,lawyer,TP_intr(won,kids))))
# ::size0 4
# ::id deep_recursion_basic_23
# ::suppl deep_recursion_basic_23
(u_2540 / think-01
        :ARG0 (r / you)
        :ARG1 (u_2538 / hear-01
                      :ARG0 (u_2541 / boy)
                      :ARG1 (u_2537 / hear-01
                                    :ARG0 (m / lawyer)
                                    :ARG1 (u_2536 / win-01
                                                  :ARG0 (u_2539 / kid)))))

# ::snt The boys believed that the men said that I heard that the astronaut arrived
# ::tree TP_CP(believed,boys,TP_CP(said,men,TP_CP(heard,I,TP_intr(arrived,astronaut))))
# ::size0 4
# ::id deep_recursion_basic_24
# ::suppl deep_recursion_basic_24
(u_2546 / believe-01
        :ARG0 (r / boy)
        :ARG1 (u_2544 / say-01
                      :ARG0 (u_2547 / man)
                      :ARG1 (u_2542 / hear-01
                                    :ARG0 (u_2545 / i)
                                    :ARG1 (u_2543 / arrive-01
                                                  :ARG1 (a / astronaut)))))

# ::snt The men said that the girls heard that the kids said that the soldier slept
# ::tree TP_CP(said,men,TP_CP(heard,girls,TP_CP(said,kids,TP_intr(slept,soldier))))
# ::size0 4
# ::id deep_recursion_basic_25
# ::suppl deep_recursion_basic_25
(u_2554 / say-01
        :ARG0 (r / man)
        :ARG1 (u_2551 / hear-01
                      :ARG0 (u_2556 / girl)
                      :ARG1 (u_2548 / say-01
                                    :ARG0 (u_2553 / kid)
                                    :ARG1 (u_2550 / sleep-01
                                                  :ARG0 (s / soldier)))))

# ::snt I heard that we believed that the boys said that the girls sneezed
# ::tree TP_CP(heard,I,TP_CP(believed,we,TP_CP(said,boys,TP_intr(sneezed,girls))))
# ::size0 4
# ::id deep_recursion_basic_26
# ::suppl deep_recursion_basic_26
(u_2562 / hear-01
        :ARG0 (r / i)
        :ARG1 (u_2560 / believe-01
                      :ARG0 (u_2563 / we)
                      :ARG1 (u_2558 / say-01
                                    :ARG0 (u_2561 / boy)
                                    :ARG1 (u_2557 / sneeze-01
                                                  :ARG0 (u_2559 / girl)))))

# ::snt The boys mentioned that you heard that the doctor believed that the men arrived
# ::tree TP_CP(mentioned,boys,TP_CP(heard,you,TP_CP(believed,doctor,TP_intr(arrived,men))))
# ::size0 4
# ::id deep_recursion_basic_27
# ::suppl deep_recursion_basic_27
(u_2568 / mention-01
        :ARG0 (r / boy)
        :ARG1 (u_2566 / hear-01
                      :ARG0 (u_2569 / you)
                      :ARG1 (u_2565 / believe-01
                                    :ARG0 (d / doctor)
                                    :ARG1 (u_2564 / arrive-01
                                                  :ARG1 (u_2567 / man)))))

# ::snt The boys said that the women mentioned that the astronaut believed that the soldier slept
# ::tree TP_CP(said,boys,TP_CP(mentioned,women,TP_CP(believed,astronaut,TP_intr(slept,soldier))))
# ::size0 4
# ::id deep_recursion_basic_28
# ::suppl deep_recursion_basic_28
(u_2575 / say-01
        :ARG0 (r / boy)
        :ARG1 (u_2572 / mention-01
                      :ARG0 (u_2577 / woman)
                      :ARG1 (u_2570 / believe-01
                                    :ARG0 (a / astronaut)
                                    :ARG1 (u_2574 / sleep-01
                                                  :ARG0 (s / soldier)))))

# ::snt The girls thought that the lawyer said that the soldier mentioned that you arrived
# ::tree TP_CP(thought,girls,TP_CP(said,lawyer,TP_CP(mentioned,soldier,TP_intr(arrived,you))))
# ::size0 4
# ::id deep_recursion_basic_29
# ::suppl deep_recursion_basic_29
(u_2582 / think-01
        :ARG0 (r / girl)
        :ARG1 (u_2580 / say-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_2579 / mention-01
                                    :ARG0 (s / soldier)
                                    :ARG1 (u_2578 / arrive-01
                                                  :ARG1 (u_2584 / you)))))

# ::snt I said that you heard that the girls mentioned that the soldier mentioned that the doctor slept
# ::tree TP_CP(said,I,TP_CP(heard,you,TP_CP(mentioned,girls,TP_CP(mentioned,soldier,TP_intr(slept,doctor)))))
# ::size0 5
# ::id deep_recursion_basic_30
# ::suppl deep_recursion_basic_30
(u_2592 / say-01
        :ARG0 (r / i)
        :ARG1 (u_2589 / hear-01
                      :ARG0 (u_2594 / you)
                      :ARG1 (u_2586 / mention-01
                                    :ARG0 (u_2591 / girl)
                                    :ARG1 (u_2585 / mention-01
                                                  :ARG0 (s / soldier)
                                                  :ARG1 (u_2588 / sleep-01
                                                                :ARG0 (d / doctor))))))

# ::snt The doctor believed that the lawyer mentioned that you knew that the men thought that the girls slept
# ::tree TP_CP(believed,doctor,TP_CP(mentioned,lawyer,TP_CP(knew,you,TP_CP(thought,men,TP_intr(slept,girls)))))
# ::size0 5
# ::id deep_recursion_basic_31
# ::suppl deep_recursion_basic_31
(u_2601 / believe-01
        :ARG0 (d / doctor)
        :ARG1 (u_2600 / mention-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_2598 / know-01
                                    :ARG0 (r / you)
                                    :ARG1 (u_2596 / think-01
                                                  :ARG0 (u_2599 / man)
                                                  :ARG1 (u_2595 / sleep-01
                                                                :ARG0 (u_2597 / girl))))))

# ::snt The boys believed that the soldier heard that the women mentioned that the lawyer mentioned that the kids arrived
# ::tree TP_CP(believed,boys,TP_CP(heard,soldier,TP_CP(mentioned,women,TP_CP(mentioned,lawyer,TP_intr(arrived,kids)))))
# ::size0 5
# ::id deep_recursion_basic_32
# ::suppl deep_recursion_basic_32
(u_2607 / believe-01
        :ARG0 (r / boy)
        :ARG1 (u_2606 / hear-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_2604 / mention-01
                                    :ARG0 (u_2609 / woman)
                                    :ARG1 (u_2603 / mention-01
                                                  :ARG0 (m / lawyer)
                                                  :ARG1 (u_2602 / arrive-01
                                                                :ARG1 (u_2605 / kid))))))

# ::snt You thought that the men knew that we said that the boys believed that the soldier sneezed
# ::tree TP_CP(thought,you,TP_CP(knew,men,TP_CP(said,we,TP_CP(believed,boys,TP_intr(sneezed,soldier)))))
# ::size0 5
# ::id deep_recursion_basic_33
# ::suppl deep_recursion_basic_33
(u_2619 / think-01
        :ARG0 (r / you)
        :ARG1 (u_2616 / know-01
                      :ARG0 (u_2621 / man)
                      :ARG1 (u_2613 / say-01
                                    :ARG0 (u_2618 / we)
                                    :ARG1 (u_2610 / believe-01
                                                  :ARG0 (u_2615 / boy)
                                                  :ARG1 (u_2612 / sneeze-01
                                                                :ARG0 (s / soldier))))))

# ::snt The soldier believed that you mentioned that the kids thought that the astronaut thought that I sneezed
# ::tree TP_CP(believed,soldier,TP_CP(mentioned,you,TP_CP(thought,kids,TP_CP(thought,astronaut,TP_intr(sneezed,I)))))
# ::size0 5
# ::id deep_recursion_basic_34
# ::suppl deep_recursion_basic_34
(u_2628 / believe-01
        :ARG0 (s / soldier)
        :ARG1 (u_2626 / mention-01
                      :ARG0 (r / you)
                      :ARG1 (u_2624 / think-01
                                    :ARG0 (u_2627 / kid)
                                    :ARG1 (u_2623 / think-01
                                                  :ARG0 (a / astronaut)
                                                  :ARG1 (u_2622 / sneeze-01
                                                                :ARG0 (u_2625 / i))))))

# ::snt You thought that the girls mentioned that the kids knew that the doctor knew that the soldier arrived
# ::tree TP_CP(thought,you,TP_CP(mentioned,girls,TP_CP(knew,kids,TP_CP(knew,doctor,TP_intr(arrived,soldier)))))
# ::size0 5
# ::id deep_recursion_basic_35
# ::suppl deep_recursion_basic_35
(u_2637 / think-01
        :ARG0 (r / you)
        :ARG1 (u_2634 / mention-01
                      :ARG0 (u_2639 / girl)
                      :ARG1 (u_2631 / know-01
                                    :ARG0 (u_2636 / kid)
                                    :ARG1 (u_2629 / know-01
                                                  :ARG0 (d / doctor)
                                                  :ARG1 (u_2633 / arrive-01
                                                                :ARG1 (s / soldier))))))

# ::snt The men mentioned that the soldier thought that I mentioned that the kids believed that the lawyer won
# ::tree TP_CP(mentioned,men,TP_CP(thought,soldier,TP_CP(mentioned,I,TP_CP(believed,kids,TP_intr(won,lawyer)))))
# ::size0 5
# ::id deep_recursion_basic_36
# ::suppl deep_recursion_basic_36
(u_2645 / mention-01
        :ARG0 (r / man)
        :ARG1 (u_2644 / think-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_2642 / mention-01
                                    :ARG0 (u_2647 / i)
                                    :ARG1 (u_2640 / believe-01
                                                  :ARG0 (u_2643 / kid)
                                                  :ARG1 (u_2641 / win-01
                                                                :ARG0 (m / lawyer))))))

# ::snt The women heard that the boys believed that you knew that the astronaut knew that the girls slept
# ::tree TP_CP(heard,women,TP_CP(believed,boys,TP_CP(knew,you,TP_CP(knew,astronaut,TP_intr(slept,girls)))))
# ::size0 5
# ::id deep_recursion_basic_37
# ::suppl deep_recursion_basic_37
(u_2654 / hear-01
        :ARG0 (r / woman)
        :ARG1 (u_2652 / believe-01
                      :ARG0 (u_2655 / boy)
                      :ARG1 (u_2650 / know-01
                                    :ARG0 (u_2653 / you)
                                    :ARG1 (u_2649 / know-01
                                                  :ARG0 (a / astronaut)
                                                  :ARG1 (u_2648 / sleep-01
                                                                :ARG0 (u_2651 / girl))))))

# ::snt The doctor believed that the lawyer knew that I mentioned that you said that the women sneezed
# ::tree TP_CP(believed,doctor,TP_CP(knew,lawyer,TP_CP(mentioned,I,TP_CP(said,you,TP_intr(sneezed,women)))))
# ::size0 5
# ::id deep_recursion_basic_38
# ::suppl deep_recursion_basic_38
(u_2662 / believe-01
        :ARG0 (d / doctor)
        :ARG1 (u_2661 / know-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_2659 / mention-01
                                    :ARG0 (r / i)
                                    :ARG1 (u_2657 / say-01
                                                  :ARG0 (u_2660 / you)
                                                  :ARG1 (u_2656 / sneeze-01
                                                                :ARG0 (u_2658 / woman))))))

# ::snt The lawyer thought that the soldier heard that I thought that the boys thought that the women slept
# ::tree TP_CP(thought,lawyer,TP_CP(heard,soldier,TP_CP(thought,I,TP_CP(thought,boys,TP_intr(slept,women)))))
# ::size0 5
# ::id deep_recursion_basic_39
# ::suppl deep_recursion_basic_39
(u_2669 / think-01
        :ARG0 (m / lawyer)
        :ARG1 (u_2668 / hear-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_2666 / think-01
                                    :ARG0 (r / i)
                                    :ARG1 (u_2664 / think-01
                                                  :ARG0 (u_2667 / boy)
                                                  :ARG1 (u_2663 / sleep-01
                                                                :ARG0 (u_2665 / woman))))))

# ::snt The men heard that the soldier believed that the kids believed that the lawyer said that the doctor said that I sneezed
# ::tree TP_CP(heard,men,TP_CP(believed,soldier,TP_CP(believed,kids,TP_CP(said,lawyer,TP_CP(said,doctor,TP_intr(sneezed,I))))))
# ::size0 6
# ::id deep_recursion_basic_40
# ::suppl deep_recursion_basic_40
(u_2677 / hear-01
        :ARG0 (r / man)
        :ARG1 (u_2676 / believe-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_2674 / believe-01
                                    :ARG0 (u_2679 / kid)
                                    :ARG1 (u_2673 / say-01
                                                  :ARG0 (m / lawyer)
                                                  :ARG1 (u_2672 / say-01
                                                                :ARG0 (d / doctor)
                                                                :ARG1 (u_2671 / sneeze-01
                                                                              :ARG0 (u_2675 / i)))))))

# ::snt The lawyer believed that the men thought that the kids said that the women mentioned that we heard that the doctor arrived
# ::tree TP_CP(believed,lawyer,TP_CP(thought,men,TP_CP(said,kids,TP_CP(mentioned,women,TP_CP(heard,we,TP_intr(arrived,doctor))))))
# ::size0 6
# ::id deep_recursion_basic_41
# ::suppl deep_recursion_basic_41
(u_2688 / believe-01
        :ARG0 (m / lawyer)
        :ARG1 (u_2686 / think-01
                      :ARG0 (r / man)
                      :ARG1 (u_2684 / say-01
                                    :ARG0 (u_2687 / kid)
                                    :ARG1 (u_2682 / mention-01
                                                  :ARG0 (u_2685 / woman)
                                                  :ARG1 (u_2680 / hear-01
                                                                :ARG0 (u_2683 / we)
                                                                :ARG1 (u_2681 / arrive-01
                                                                              :ARG1 (d / doctor)))))))

# ::snt The boys said that the astronaut believed that the kids mentioned that the soldier knew that the men said that I arrived
# ::tree TP_CP(said,boys,TP_CP(believed,astronaut,TP_CP(mentioned,kids,TP_CP(knew,soldier,TP_CP(said,men,TP_intr(arrived,I))))))
# ::size0 6
# ::id deep_recursion_basic_42
# ::suppl deep_recursion_basic_42
(u_2698 / say-01
        :ARG0 (r / boy)
        :ARG1 (u_2696 / believe-01
                      :ARG0 (a / astronaut)
                      :ARG1 (u_2693 / mention-01
                                    :ARG0 (u_2700 / kid)
                                    :ARG1 (u_2692 / know-01
                                                  :ARG0 (s / soldier)
                                                  :ARG1 (u_2690 / say-01
                                                                :ARG0 (u_2695 / man)
                                                                :ARG1 (u_2689 / arrive-01
                                                                              :ARG1 (u_2691 / i)))))))

# ::snt The kids said that the girls thought that the lawyer mentioned that I knew that the women thought that the boys sneezed
# ::tree TP_CP(said,kids,TP_CP(thought,girls,TP_CP(mentioned,lawyer,TP_CP(knew,I,TP_CP(thought,women,TP_intr(sneezed,boys))))))
# ::size0 6
# ::id deep_recursion_basic_43
# ::suppl deep_recursion_basic_43
(u_2709 / say-01
        :ARG0 (r / kid)
        :ARG1 (u_2707 / think-01
                      :ARG0 (u_2710 / girl)
                      :ARG1 (u_2706 / mention-01
                                    :ARG0 (m / lawyer)
                                    :ARG1 (u_2704 / know-01
                                                  :ARG0 (u_2708 / i)
                                                  :ARG1 (u_2702 / think-01
                                                                :ARG0 (u_2705 / woman)
                                                                :ARG1 (u_2701 / sneeze-01
                                                                              :ARG0 (u_2703 / boy)))))))

# ::snt The lawyer said that the women heard that the men knew that I mentioned that the soldier knew that the girls arrived
# ::tree TP_CP(said,lawyer,TP_CP(heard,women,TP_CP(knew,men,TP_CP(mentioned,I,TP_CP(knew,soldier,TP_intr(arrived,girls))))))
# ::size0 6
# ::id deep_recursion_basic_44
# ::suppl deep_recursion_basic_44
(u_2722 / say-01
        :ARG0 (m / lawyer)
        :ARG1 (u_2719 / hear-01
                      :ARG0 (r / woman)
                      :ARG1 (u_2716 / know-01
                                    :ARG0 (u_2721 / man)
                                    :ARG1 (u_2713 / mention-01
                                                  :ARG0 (u_2718 / i)
                                                  :ARG1 (u_2712 / know-01
                                                                :ARG0 (s / soldier)
                                                                :ARG1 (u_2711 / arrive-01
                                                                              :ARG1 (u_2715 / girl)))))))

# ::snt I heard that the doctor knew that you mentioned that the lawyer mentioned that the astronaut believed that the soldier sneezed
# ::tree TP_CP(heard,I,TP_CP(knew,doctor,TP_CP(mentioned,you,TP_CP(mentioned,lawyer,TP_CP(believed,astronaut,TP_intr(sneezed,soldier))))))
# ::size0 6
# ::id deep_recursion_basic_45
# ::suppl deep_recursion_basic_45
(u_2733 / hear-01
        :ARG0 (r / i)
        :ARG1 (u_2731 / know-01
                      :ARG0 (d / doctor)
                      :ARG1 (u_2728 / mention-01
                                    :ARG0 (u_2735 / you)
                                    :ARG1 (u_2726 / mention-01
                                                  :ARG0 (m / lawyer)
                                                  :ARG1 (u_2724 / believe-01
                                                                :ARG0 (a / astronaut)
                                                                :ARG1 (u_2730 / sneeze-01
                                                                              :ARG0 (s / soldier)))))))

# ::snt The doctor knew that you mentioned that the soldier knew that the girls mentioned that the kids thought that the lawyer won
# ::tree TP_CP(knew,doctor,TP_CP(mentioned,you,TP_CP(knew,soldier,TP_CP(mentioned,girls,TP_CP(thought,kids,TP_intr(won,lawyer))))))
# ::size0 6
# ::id deep_recursion_basic_46
# ::suppl deep_recursion_basic_46
(u_2744 / know-01
        :ARG0 (d / doctor)
        :ARG1 (u_2741 / mention-01
                      :ARG0 (r / you)
                      :ARG1 (u_2740 / know-01
                                    :ARG0 (s / soldier)
                                    :ARG1 (u_2738 / mention-01
                                                  :ARG0 (u_2743 / girl)
                                                  :ARG1 (u_2736 / think-01
                                                                :ARG0 (u_2739 / kid)
                                                                :ARG1 (u_2737 / win-01
                                                                              :ARG0 (m / lawyer)))))))

# ::snt The doctor heard that I thought that the astronaut thought that the boys heard that the women heard that the girls slept
# ::tree TP_CP(heard,doctor,TP_CP(thought,I,TP_CP(thought,astronaut,TP_CP(heard,boys,TP_CP(heard,women,TP_intr(slept,girls))))))
# ::size0 6
# ::id deep_recursion_basic_47
# ::suppl deep_recursion_basic_47
(u_2754 / hear-01
        :ARG0 (d / doctor)
        :ARG1 (u_2752 / think-01
                      :ARG0 (r / i)
                      :ARG1 (u_2751 / think-01
                                    :ARG0 (a / astronaut)
                                    :ARG1 (u_2749 / hear-01
                                                  :ARG0 (u_2753 / boy)
                                                  :ARG1 (u_2747 / hear-01
                                                                :ARG0 (u_2750 / woman)
                                                                :ARG1 (u_2746 / sleep-01
                                                                              :ARG0 (u_2748 / girl)))))))

# ::snt The lawyer thought that the astronaut mentioned that the kids knew that the soldier thought that the women believed that I won
# ::tree TP_CP(thought,lawyer,TP_CP(mentioned,astronaut,TP_CP(knew,kids,TP_CP(thought,soldier,TP_CP(believed,women,TP_intr(won,I))))))
# ::size0 6
# ::id deep_recursion_basic_48
# ::suppl deep_recursion_basic_48
(u_2764 / think-01
        :ARG0 (m / lawyer)
        :ARG1 (u_2762 / mention-01
                      :ARG0 (a / astronaut)
                      :ARG1 (u_2759 / know-01
                                    :ARG0 (r / kid)
                                    :ARG1 (u_2758 / think-01
                                                  :ARG0 (s / soldier)
                                                  :ARG1 (u_2756 / believe-01
                                                                :ARG0 (u_2761 / woman)
                                                                :ARG1 (u_2755 / win-01
                                                                              :ARG0 (u_2757 / i)))))))

# ::snt The astronaut thought that the doctor thought that the boys mentioned that the kids mentioned that the girls said that the soldier won
# ::tree TP_CP(thought,astronaut,TP_CP(thought,doctor,TP_CP(mentioned,boys,TP_CP(mentioned,kids,TP_CP(said,girls,TP_intr(won,soldier))))))
# ::size0 6
# ::id deep_recursion_basic_49
# ::suppl deep_recursion_basic_49
(u_2777 / think-01
        :ARG0 (a / astronaut)
        :ARG1 (u_2775 / think-01
                      :ARG0 (d / doctor)
                      :ARG1 (u_2772 / mention-01
                                    :ARG0 (r / boy)
                                    :ARG1 (u_2769 / mention-01
                                                  :ARG0 (u_2774 / kid)
                                                  :ARG1 (u_2766 / say-01
                                                                :ARG0 (u_2771 / girl)
                                                                :ARG1 (u_2768 / win-01
                                                                              :ARG0 (s / soldier)))))))

# ::snt The lawyer knew that you believed that the astronaut mentioned that I thought that the boys thought that the kids believed that the girls won
# ::tree TP_CP(knew,lawyer,TP_CP(believed,you,TP_CP(mentioned,astronaut,TP_CP(thought,I,TP_CP(thought,boys,TP_CP(believed,kids,TP_intr(won,girls)))))))
# ::size0 7
# ::id deep_recursion_basic_50
# ::suppl deep_recursion_basic_50
(u_2789 / know-01
        :ARG0 (m / lawyer)
        :ARG1 (u_2787 / believe-01
                      :ARG0 (r / you)
                      :ARG1 (u_2786 / mention-01
                                    :ARG0 (a / astronaut)
                                    :ARG1 (u_2784 / think-01
                                                  :ARG0 (u_2788 / i)
                                                  :ARG1 (u_2782 / think-01
                                                                :ARG0 (u_2785 / boy)
                                                                :ARG1 (u_2780 / believe-01
                                                                              :ARG0 (u_2783 / kid)
                                                                              :ARG1 (u_2779 / win-01
                                                                                            :ARG0 (u_2781 / girl))))))))

# ::snt The women heard that the boys knew that the girls knew that the lawyer believed that the doctor heard that the kids believed that the men won
# ::tree TP_CP(heard,women,TP_CP(knew,boys,TP_CP(knew,girls,TP_CP(believed,lawyer,TP_CP(heard,doctor,TP_CP(believed,kids,TP_intr(won,men)))))))
# ::size0 7
# ::id deep_recursion_basic_51
# ::suppl deep_recursion_basic_51
(u_2799 / hear-01
        :ARG0 (r / woman)
        :ARG1 (u_2797 / know-01
                      :ARG0 (u_2800 / boy)
                      :ARG1 (u_2795 / know-01
                                    :ARG0 (u_2798 / girl)
                                    :ARG1 (u_2794 / believe-01
                                                  :ARG0 (m / lawyer)
                                                  :ARG1 (u_2793 / hear-01
                                                                :ARG0 (d / doctor)
                                                                :ARG1 (u_2791 / believe-01
                                                                              :ARG0 (u_2796 / kid)
                                                                              :ARG1 (u_2790 / win-01
                                                                                            :ARG0 (u_2792 / man))))))))

# ::snt The astronaut thought that we knew that you believed that I heard that the soldier thought that the women mentioned that the doctor arrived
# ::tree TP_CP(thought,astronaut,TP_CP(knew,we,TP_CP(believed,you,TP_CP(heard,I,TP_CP(thought,soldier,TP_CP(mentioned,women,TP_intr(arrived,doctor)))))))
# ::size0 7
# ::id deep_recursion_basic_52
# ::suppl deep_recursion_basic_52
(u_2813 / think-01
        :ARG0 (a / astronaut)
        :ARG1 (u_2810 / know-01
                      :ARG0 (r / we)
                      :ARG1 (u_2807 / believe-01
                                    :ARG0 (u_2812 / you)
                                    :ARG1 (u_2804 / hear-01
                                                  :ARG0 (u_2809 / i)
                                                  :ARG1 (u_2803 / think-01
                                                                :ARG0 (s / soldier)
                                                                :ARG1 (u_2801 / mention-01
                                                                              :ARG0 (u_2806 / woman)
                                                                              :ARG1 (u_2802 / arrive-01
                                                                                            :ARG1 (d / doctor))))))))

# ::snt The soldier said that the lawyer said that the astronaut knew that the doctor thought that the girls thought that the men thought that the kids slept
# ::tree TP_CP(said,soldier,TP_CP(said,lawyer,TP_CP(knew,astronaut,TP_CP(thought,doctor,TP_CP(thought,girls,TP_CP(thought,men,TP_intr(slept,kids)))))))
# ::size0 7
# ::id deep_recursion_basic_53
# ::suppl deep_recursion_basic_53
(u_2823 / say-01
        :ARG0 (s / soldier)
        :ARG1 (u_2822 / say-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_2821 / know-01
                                    :ARG0 (a / astronaut)
                                    :ARG1 (u_2820 / think-01
                                                  :ARG0 (d / doctor)
                                                  :ARG1 (u_2818 / think-01
                                                                :ARG0 (r / girl)
                                                                :ARG1 (u_2816 / think-01
                                                                              :ARG0 (u_2819 / man)
                                                                              :ARG1 (u_2815 / sleep-01
                                                                                            :ARG0 (u_2817 / kid))))))))

# ::snt We heard that I knew that the doctor knew that you heard that the kids mentioned that the soldier knew that the astronaut arrived
# ::tree TP_CP(heard,we,TP_CP(knew,I,TP_CP(knew,doctor,TP_CP(heard,you,TP_CP(mentioned,kids,TP_CP(knew,soldier,TP_intr(arrived,astronaut)))))))
# ::size0 7
# ::id deep_recursion_basic_54
# ::suppl deep_recursion_basic_54
(u_2836 / hear-01
        :ARG0 (r / we)
        :ARG1 (u_2833 / know-01
                      :ARG0 (u_2838 / i)
                      :ARG1 (u_2831 / know-01
                                    :ARG0 (d / doctor)
                                    :ARG1 (u_2828 / hear-01
                                                  :ARG0 (u_2835 / you)
                                                  :ARG1 (u_2825 / mention-01
                                                                :ARG0 (u_2830 / kid)
                                                                :ARG1 (u_2824 / know-01
                                                                              :ARG0 (s / soldier)
                                                                              :ARG1 (u_2827 / arrive-01
                                                                                            :ARG1 (a / astronaut))))))))

# ::snt We said that the men believed that the kids mentioned that the boys believed that the women knew that the girls heard that the doctor slept
# ::tree TP_CP(said,we,TP_CP(believed,men,TP_CP(mentioned,kids,TP_CP(believed,boys,TP_CP(knew,women,TP_CP(heard,girls,TP_intr(slept,doctor)))))))
# ::size0 7
# ::id deep_recursion_basic_55
# ::suppl deep_recursion_basic_55
(u_2849 / say-01
        :ARG0 (r / we)
        :ARG1 (u_2847 / believe-01
                      :ARG0 (u_2850 / man)
                      :ARG1 (u_2845 / mention-01
                                    :ARG0 (u_2848 / kid)
                                    :ARG1 (u_2843 / believe-01
                                                  :ARG0 (u_2846 / boy)
                                                  :ARG1 (u_2841 / know-01
                                                                :ARG0 (u_2844 / woman)
                                                                :ARG1 (u_2839 / hear-01
                                                                              :ARG0 (u_2842 / girl)
                                                                              :ARG1 (u_2840 / sleep-01
                                                                                            :ARG0 (d / doctor))))))))

# ::snt You said that the astronaut heard that the doctor believed that the men believed that the kids mentioned that the women said that the boys arrived
# ::tree TP_CP(said,you,TP_CP(heard,astronaut,TP_CP(believed,doctor,TP_CP(believed,men,TP_CP(mentioned,kids,TP_CP(said,women,TP_intr(arrived,boys)))))))
# ::size0 7
# ::id deep_recursion_basic_56
# ::suppl deep_recursion_basic_56
(u_2860 / say-01
        :ARG0 (r / you)
        :ARG1 (u_2859 / hear-01
                      :ARG0 (a / astronaut)
                      :ARG1 (u_2858 / believe-01
                                    :ARG0 (d / doctor)
                                    :ARG1 (u_2856 / believe-01
                                                  :ARG0 (u_2861 / man)
                                                  :ARG1 (u_2854 / mention-01
                                                                :ARG0 (u_2857 / kid)
                                                                :ARG1 (u_2852 / say-01
                                                                              :ARG0 (u_2855 / woman)
                                                                              :ARG1 (u_2851 / arrive-01
                                                                                            :ARG1 (u_2853 / boy))))))))

# ::snt The lawyer believed that the women mentioned that the kids heard that you thought that the boys knew that the doctor knew that the girls sneezed
# ::tree TP_CP(believed,lawyer,TP_CP(mentioned,women,TP_CP(heard,kids,TP_CP(thought,you,TP_CP(knew,boys,TP_CP(knew,doctor,TP_intr(sneezed,girls)))))))
# ::size0 7
# ::id deep_recursion_basic_57
# ::suppl deep_recursion_basic_57
(u_2872 / believe-01
        :ARG0 (m / lawyer)
        :ARG1 (u_2870 / mention-01
                      :ARG0 (r / woman)
                      :ARG1 (u_2868 / hear-01
                                    :ARG0 (u_2871 / kid)
                                    :ARG1 (u_2866 / think-01
                                                  :ARG0 (u_2869 / you)
                                                  :ARG1 (u_2864 / know-01
                                                                :ARG0 (u_2867 / boy)
                                                                :ARG1 (u_2863 / know-01
                                                                              :ARG0 (d / doctor)
                                                                              :ARG1 (u_2862 / sneeze-01
                                                                                            :ARG0 (u_2865 / girl))))))))

# ::snt I believed that the boys mentioned that the astronaut thought that the doctor said that the men believed that we thought that the kids won
# ::tree TP_CP(believed,I,TP_CP(mentioned,boys,TP_CP(thought,astronaut,TP_CP(said,doctor,TP_CP(believed,men,TP_CP(thought,we,TP_intr(won,kids)))))))
# ::size0 7
# ::id deep_recursion_basic_58
# ::suppl deep_recursion_basic_58
(u_2882 / believe-01
        :ARG0 (r / i)
        :ARG1 (u_2880 / mention-01
                      :ARG0 (u_2883 / boy)
                      :ARG1 (u_2879 / think-01
                                    :ARG0 (a / astronaut)
                                    :ARG1 (u_2878 / say-01
                                                  :ARG0 (d / doctor)
                                                  :ARG1 (u_2876 / believe-01
                                                                :ARG0 (u_2881 / man)
                                                                :ARG1 (u_2874 / think-01
                                                                              :ARG0 (u_2877 / we)
                                                                              :ARG1 (u_2873 / win-01
                                                                                            :ARG0 (u_2875 / kid))))))))

# ::snt The women mentioned that the men said that the girls believed that the boys said that the astronaut knew that I mentioned that you slept
# ::tree TP_CP(mentioned,women,TP_CP(said,men,TP_CP(believed,girls,TP_CP(said,boys,TP_CP(knew,astronaut,TP_CP(mentioned,I,TP_intr(slept,you)))))))
# ::size0 7
# ::id deep_recursion_basic_59
# ::suppl deep_recursion_basic_59
(u_2894 / mention-01
        :ARG0 (r / woman)
        :ARG1 (u_2892 / say-01
                      :ARG0 (u_2895 / man)
                      :ARG1 (u_2890 / believe-01
                                    :ARG0 (u_2893 / girl)
                                    :ARG1 (u_2888 / say-01
                                                  :ARG0 (u_2891 / boy)
                                                  :ARG1 (u_2887 / know-01
                                                                :ARG0 (a / astronaut)
                                                                :ARG1 (u_2885 / mention-01
                                                                              :ARG0 (u_2889 / i)
                                                                              :ARG1 (u_2884 / sleep-01
                                                                                            :ARG0 (u_2886 / you))))))))

# ::snt I said that the men said that the boys believed that the lawyer mentioned that the astronaut knew that the doctor mentioned that you heard that the kids slept
# ::tree TP_CP(said,I,TP_CP(said,men,TP_CP(believed,boys,TP_CP(mentioned,lawyer,TP_CP(knew,astronaut,TP_CP(mentioned,doctor,TP_CP(heard,you,TP_intr(slept,kids))))))))
# ::size0 8
# ::id deep_recursion_basic_60
# ::suppl deep_recursion_basic_60
(u_2906 / say-01
        :ARG0 (r / i)
        :ARG1 (u_2904 / say-01
                      :ARG0 (u_2907 / man)
                      :ARG1 (u_2902 / believe-01
                                    :ARG0 (u_2905 / boy)
                                    :ARG1 (u_2901 / mention-01
                                                  :ARG0 (m / lawyer)
                                                  :ARG1 (u_2900 / know-01
                                                                :ARG0 (a / astronaut)
                                                                :ARG1 (u_2899 / mention-01
                                                                              :ARG0 (d / doctor)
                                                                              :ARG1 (u_2897 / hear-01
                                                                                            :ARG0 (u_2903 / you)
                                                                                            :ARG1 (u_2896 / sleep-01
                                                                                                          :ARG0 (u_2898 / kid)))))))))

# ::snt The astronaut thought that the boys heard that the men mentioned that the girls mentioned that the women said that the soldier heard that you mentioned that I sneezed
# ::tree TP_CP(thought,astronaut,TP_CP(heard,boys,TP_CP(mentioned,men,TP_CP(mentioned,girls,TP_CP(said,women,TP_CP(heard,soldier,TP_CP(mentioned,you,TP_intr(sneezed,I))))))))
# ::size0 8
# ::id deep_recursion_basic_61
# ::suppl deep_recursion_basic_61
(u_2924 / think-01
        :ARG0 (a / astronaut)
        :ARG1 (u_2921 / hear-01
                      :ARG0 (r / boy)
                      :ARG1 (u_2918 / mention-01
                                    :ARG0 (u_2923 / man)
                                    :ARG1 (u_2915 / mention-01
                                                  :ARG0 (u_2920 / girl)
                                                  :ARG1 (u_2912 / say-01
                                                                :ARG0 (u_2917 / woman)
                                                                :ARG1 (u_2911 / hear-01
                                                                              :ARG0 (s / soldier)
                                                                              :ARG1 (u_2909 / mention-01
                                                                                            :ARG0 (u_2914 / you)
                                                                                            :ARG1 (u_2908 / sneeze-01
                                                                                                          :ARG0 (u_2910 / i)))))))))

# ::snt The girls said that the women knew that the kids thought that the astronaut believed that the soldier mentioned that we said that I knew that the boys slept
# ::tree TP_CP(said,girls,TP_CP(knew,women,TP_CP(thought,kids,TP_CP(believed,astronaut,TP_CP(mentioned,soldier,TP_CP(said,we,TP_CP(knew,I,TP_intr(slept,boys))))))))
# ::size0 8
# ::id deep_recursion_basic_62
# ::suppl deep_recursion_basic_62
(u_2940 / say-01
        :ARG0 (r / girl)
        :ARG1 (u_2937 / know-01
                      :ARG0 (u_2942 / woman)
                      :ARG1 (u_2934 / think-01
                                    :ARG0 (u_2939 / kid)
                                    :ARG1 (u_2932 / believe-01
                                                  :ARG0 (a / astronaut)
                                                  :ARG1 (u_2931 / mention-01
                                                                :ARG0 (s / soldier)
                                                                :ARG1 (u_2929 / say-01
                                                                              :ARG0 (u_2936 / we)
                                                                              :ARG1 (u_2927 / know-01
                                                                                            :ARG0 (u_2930 / i)
                                                                                            :ARG1 (u_2926 / sleep-01
                                                                                                          :ARG0 (u_2928 / boy)))))))))

# ::snt The boys believed that the girls mentioned that the women believed that we said that I believed that the doctor heard that the soldier believed that the kids won
# ::tree TP_CP(believed,boys,TP_CP(mentioned,girls,TP_CP(believed,women,TP_CP(said,we,TP_CP(believed,I,TP_CP(heard,doctor,TP_CP(believed,soldier,TP_intr(won,kids))))))))
# ::size0 8
# ::id deep_recursion_basic_63
# ::suppl deep_recursion_basic_63
(u_2959 / believe-01
        :ARG0 (r / boy)
        :ARG1 (u_2956 / mention-01
                      :ARG0 (u_2961 / girl)
                      :ARG1 (u_2953 / believe-01
                                    :ARG0 (u_2958 / woman)
                                    :ARG1 (u_2950 / say-01
                                                  :ARG0 (u_2955 / we)
                                                  :ARG1 (u_2947 / believe-01
                                                                :ARG0 (u_2952 / i)
                                                                :ARG1 (u_2945 / hear-01
                                                                              :ARG0 (d / doctor)
                                                                              :ARG1 (u_2944 / believe-01
                                                                                            :ARG0 (s / soldier)
                                                                                            :ARG1 (u_2943 / win-01
                                                                                                          :ARG0 (u_2949 / kid)))))))))

# ::snt The astronaut knew that we believed that the soldier knew that you heard that the girls thought that the lawyer thought that I thought that the men arrived
# ::tree TP_CP(knew,astronaut,TP_CP(believed,we,TP_CP(knew,soldier,TP_CP(heard,you,TP_CP(thought,girls,TP_CP(thought,lawyer,TP_CP(thought,I,TP_intr(arrived,men))))))))
# ::size0 8
# ::id deep_recursion_basic_64
# ::suppl deep_recursion_basic_64
(u_2974 / know-01
        :ARG0 (a / astronaut)
        :ARG1 (u_2971 / believe-01
                      :ARG0 (r / we)
                      :ARG1 (u_2970 / know-01
                                    :ARG0 (s / soldier)
                                    :ARG1 (u_2968 / hear-01
                                                  :ARG0 (u_2973 / you)
                                                  :ARG1 (u_2966 / think-01
                                                                :ARG0 (u_2969 / girl)
                                                                :ARG1 (u_2965 / think-01
                                                                              :ARG0 (m / lawyer)
                                                                              :ARG1 (u_2963 / think-01
                                                                                            :ARG0 (u_2967 / i)
                                                                                            :ARG1 (u_2962 / arrive-01
                                                                                                          :ARG1 (u_2964 / man)))))))))

# ::snt You mentioned that the men said that the women mentioned that the soldier heard that the kids thought that the boys knew that the doctor knew that the girls won
# ::tree TP_CP(mentioned,you,TP_CP(said,men,TP_CP(mentioned,women,TP_CP(heard,soldier,TP_CP(thought,kids,TP_CP(knew,boys,TP_CP(knew,doctor,TP_intr(won,girls))))))))
# ::size0 8
# ::id deep_recursion_basic_65
# ::suppl deep_recursion_basic_65
(u_2989 / mention-01
        :ARG0 (r / you)
        :ARG1 (u_2986 / say-01
                      :ARG0 (u_2991 / man)
                      :ARG1 (u_2983 / mention-01
                                    :ARG0 (u_2988 / woman)
                                    :ARG1 (u_2982 / hear-01
                                                  :ARG0 (s / soldier)
                                                  :ARG1 (u_2980 / think-01
                                                                :ARG0 (u_2985 / kid)
                                                                :ARG1 (u_2978 / know-01
                                                                              :ARG0 (u_2981 / boy)
                                                                              :ARG1 (u_2977 / know-01
                                                                                            :ARG0 (d / doctor)
                                                                                            :ARG1 (u_2976 / win-01
                                                                                                          :ARG0 (u_2979 / girl)))))))))

# ::snt You mentioned that the soldier heard that the girls said that we mentioned that the men heard that the boys knew that I knew that the doctor arrived
# ::tree TP_CP(mentioned,you,TP_CP(heard,soldier,TP_CP(said,girls,TP_CP(mentioned,we,TP_CP(heard,men,TP_CP(knew,boys,TP_CP(knew,I,TP_intr(arrived,doctor))))))))
# ::size0 8
# ::id deep_recursion_basic_66
# ::suppl deep_recursion_basic_66
(u_3003 / mention-01
        :ARG0 (r / you)
        :ARG1 (u_3002 / hear-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_3000 / say-01
                                    :ARG0 (u_3005 / girl)
                                    :ARG1 (u_2998 / mention-01
                                                  :ARG0 (u_3001 / we)
                                                  :ARG1 (u_2996 / hear-01
                                                                :ARG0 (u_2999 / man)
                                                                :ARG1 (u_2994 / know-01
                                                                              :ARG0 (u_2997 / boy)
                                                                              :ARG1 (u_2992 / know-01
                                                                                            :ARG0 (u_2995 / i)
                                                                                            :ARG1 (u_2993 / arrive-01
                                                                                                          :ARG1 (d / doctor)))))))))

# ::snt The doctor thought that the lawyer heard that the men mentioned that the boys believed that the girls thought that the kids believed that you believed that we won
# ::tree TP_CP(thought,doctor,TP_CP(heard,lawyer,TP_CP(mentioned,men,TP_CP(believed,boys,TP_CP(thought,girls,TP_CP(believed,kids,TP_CP(believed,you,TP_intr(won,we))))))))
# ::size0 8
# ::id deep_recursion_basic_67
# ::suppl deep_recursion_basic_67
(u_3018 / think-01
        :ARG0 (d / doctor)
        :ARG1 (u_3017 / hear-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_3015 / mention-01
                                    :ARG0 (r / man)
                                    :ARG1 (u_3013 / believe-01
                                                  :ARG0 (u_3016 / boy)
                                                  :ARG1 (u_3011 / think-01
                                                                :ARG0 (u_3014 / girl)
                                                                :ARG1 (u_3009 / believe-01
                                                                              :ARG0 (u_3012 / kid)
                                                                              :ARG1 (u_3007 / believe-01
                                                                                            :ARG0 (u_3010 / you)
                                                                                            :ARG1 (u_3006 / win-01
                                                                                                          :ARG0 (u_3008 / we)))))))))

# ::snt The kids said that the lawyer said that the girls mentioned that the women knew that the doctor thought that the astronaut knew that you thought that the soldier sneezed
# ::tree TP_CP(said,kids,TP_CP(said,lawyer,TP_CP(mentioned,girls,TP_CP(knew,women,TP_CP(thought,doctor,TP_CP(knew,astronaut,TP_CP(thought,you,TP_intr(sneezed,soldier))))))))
# ::size0 8
# ::id deep_recursion_basic_68
# ::suppl deep_recursion_basic_68
(u_3034 / say-01
        :ARG0 (r / kid)
        :ARG1 (u_3032 / say-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_3029 / mention-01
                                    :ARG0 (u_3036 / girl)
                                    :ARG1 (u_3026 / know-01
                                                  :ARG0 (u_3031 / woman)
                                                  :ARG1 (u_3024 / think-01
                                                                :ARG0 (d / doctor)
                                                                :ARG1 (u_3022 / know-01
                                                                              :ARG0 (a / astronaut)
                                                                              :ARG1 (u_3019 / think-01
                                                                                            :ARG0 (u_3028 / you)
                                                                                            :ARG1 (u_3021 / sneeze-01
                                                                                                          :ARG0 (s / soldier)))))))))

# ::snt The lawyer said that the astronaut thought that the girls thought that I believed that the doctor thought that the women thought that you said that the kids slept
# ::tree TP_CP(said,lawyer,TP_CP(thought,astronaut,TP_CP(thought,girls,TP_CP(believed,I,TP_CP(thought,doctor,TP_CP(thought,women,TP_CP(said,you,TP_intr(slept,kids))))))))
# ::size0 8
# ::id deep_recursion_basic_69
# ::suppl deep_recursion_basic_69
(u_3048 / say-01
        :ARG0 (m / lawyer)
        :ARG1 (u_3047 / think-01
                      :ARG0 (a / astronaut)
                      :ARG1 (u_3045 / think-01
                                    :ARG0 (r / girl)
                                    :ARG1 (u_3043 / believe-01
                                                  :ARG0 (u_3046 / i)
                                                  :ARG1 (u_3042 / think-01
                                                                :ARG0 (d / doctor)
                                                                :ARG1 (u_3040 / think-01
                                                                              :ARG0 (u_3044 / woman)
                                                                              :ARG1 (u_3038 / say-01
                                                                                            :ARG0 (u_3041 / you)
                                                                                            :ARG1 (u_3037 / sleep-01
                                                                                                          :ARG0 (u_3039 / kid)))))))))

# ::snt The doctor believed that the girls thought that the men thought that you mentioned that I said that the women knew that the astronaut believed that the boys knew that the kids arrived
# ::tree TP_CP(believed,doctor,TP_CP(thought,girls,TP_CP(thought,men,TP_CP(mentioned,you,TP_CP(said,I,TP_CP(knew,women,TP_CP(believed,astronaut,TP_CP(knew,boys,TP_intr(arrived,kids)))))))))
# ::size0 9
# ::id deep_recursion_basic_70
# ::suppl deep_recursion_basic_70
(u_3063 / believe-01
        :ARG0 (d / doctor)
        :ARG1 (u_3061 / think-01
                      :ARG0 (r / girl)
                      :ARG1 (u_3059 / think-01
                                    :ARG0 (u_3062 / man)
                                    :ARG1 (u_3057 / mention-01
                                                  :ARG0 (u_3060 / you)
                                                  :ARG1 (u_3055 / say-01
                                                                :ARG0 (u_3058 / i)
                                                                :ARG1 (u_3053 / know-01
                                                                              :ARG0 (u_3056 / woman)
                                                                              :ARG1 (u_3052 / believe-01
                                                                                            :ARG0 (a / astronaut)
                                                                                            :ARG1 (u_3050 / know-01
                                                                                                          :ARG0 (u_3054 / boy)
                                                                                                          :ARG1 (u_3049 / arrive-01
                                                                                                                        :ARG1 (u_3051 / kid))))))))))

# ::snt The astronaut heard that the soldier mentioned that you mentioned that the men believed that the boys thought that I heard that the girls said that the women knew that we won
# ::tree TP_CP(heard,astronaut,TP_CP(mentioned,soldier,TP_CP(mentioned,you,TP_CP(believed,men,TP_CP(thought,boys,TP_CP(heard,I,TP_CP(said,girls,TP_CP(knew,women,TP_intr(won,we)))))))))
# ::size0 9
# ::id deep_recursion_basic_71
# ::suppl deep_recursion_basic_71
(u_3078 / hear-01
        :ARG0 (a / astronaut)
        :ARG1 (u_3077 / mention-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_3075 / mention-01
                                    :ARG0 (r / you)
                                    :ARG1 (u_3073 / believe-01
                                                  :ARG0 (u_3076 / man)
                                                  :ARG1 (u_3071 / think-01
                                                                :ARG0 (u_3074 / boy)
                                                                :ARG1 (u_3069 / hear-01
                                                                              :ARG0 (u_3072 / i)
                                                                              :ARG1 (u_3067 / say-01
                                                                                            :ARG0 (u_3070 / girl)
                                                                                            :ARG1 (u_3065 / know-01
                                                                                                          :ARG0 (u_3068 / woman)
                                                                                                          :ARG1 (u_3064 / win-01
                                                                                                                        :ARG0 (u_3066 / we))))))))))

# ::snt The boys said that the men thought that you knew that the girls believed that the astronaut said that the women heard that the soldier mentioned that the kids mentioned that the lawyer arrived
# ::tree TP_CP(said,boys,TP_CP(thought,men,TP_CP(knew,you,TP_CP(believed,girls,TP_CP(said,astronaut,TP_CP(heard,women,TP_CP(mentioned,soldier,TP_CP(mentioned,kids,TP_intr(arrived,lawyer)))))))))
# ::size0 9
# ::id deep_recursion_basic_72
# ::suppl deep_recursion_basic_72
(u_3097 / say-01
        :ARG0 (r / boy)
        :ARG1 (u_3094 / think-01
                      :ARG0 (u_3099 / man)
                      :ARG1 (u_3091 / know-01
                                    :ARG0 (u_3096 / you)
                                    :ARG1 (u_3088 / believe-01
                                                  :ARG0 (u_3093 / girl)
                                                  :ARG1 (u_3086 / say-01
                                                                :ARG0 (a / astronaut)
                                                                :ARG1 (u_3083 / hear-01
                                                                              :ARG0 (u_3090 / woman)
                                                                              :ARG1 (u_3082 / mention-01
                                                                                            :ARG0 (s / soldier)
                                                                                            :ARG1 (u_3080 / mention-01
                                                                                                          :ARG0 (u_3085 / kid)
                                                                                                          :ARG1 (u_3081 / arrive-01
                                                                                                                        :ARG1 (m / lawyer))))))))))

# ::snt I mentioned that the boys said that the women thought that the lawyer mentioned that the doctor said that the men believed that you knew that the astronaut heard that the soldier slept
# ::tree TP_CP(mentioned,I,TP_CP(said,boys,TP_CP(thought,women,TP_CP(mentioned,lawyer,TP_CP(said,doctor,TP_CP(believed,men,TP_CP(knew,you,TP_CP(heard,astronaut,TP_intr(slept,soldier)))))))))
# ::size0 9
# ::id deep_recursion_basic_73
# ::suppl deep_recursion_basic_73
(u_3118 / mention-01
        :ARG0 (r / i)
        :ARG1 (u_3115 / say-01
                      :ARG0 (u_3120 / boy)
                      :ARG1 (u_3112 / think-01
                                    :ARG0 (u_3117 / woman)
                                    :ARG1 (u_3110 / mention-01
                                                  :ARG0 (m / lawyer)
                                                  :ARG1 (u_3108 / say-01
                                                                :ARG0 (d / doctor)
                                                                :ARG1 (u_3105 / believe-01
                                                                              :ARG0 (u_3114 / man)
                                                                              :ARG1 (u_3102 / know-01
                                                                                            :ARG0 (u_3107 / you)
                                                                                            :ARG1 (u_3100 / hear-01
                                                                                                          :ARG0 (a / astronaut)
                                                                                                          :ARG1 (u_3104 / sleep-01
                                                                                                                        :ARG0 (s / soldier))))))))))

# ::snt You heard that the boys thought that the kids heard that the men thought that the lawyer believed that the women mentioned that we thought that the girls said that the doctor slept
# ::tree TP_CP(heard,you,TP_CP(thought,boys,TP_CP(heard,kids,TP_CP(thought,men,TP_CP(believed,lawyer,TP_CP(mentioned,women,TP_CP(thought,we,TP_CP(said,girls,TP_intr(slept,doctor)))))))))
# ::size0 9
# ::id deep_recursion_basic_74
# ::suppl deep_recursion_basic_74
(u_3134 / hear-01
        :ARG0 (r / you)
        :ARG1 (u_3132 / think-01
                      :ARG0 (u_3135 / boy)
                      :ARG1 (u_3130 / hear-01
                                    :ARG0 (u_3133 / kid)
                                    :ARG1 (u_3128 / think-01
                                                  :ARG0 (u_3131 / man)
                                                  :ARG1 (u_3127 / believe-01
                                                                :ARG0 (m / lawyer)
                                                                :ARG1 (u_3125 / mention-01
                                                                              :ARG0 (u_3129 / woman)
                                                                              :ARG1 (u_3123 / think-01
                                                                                            :ARG0 (u_3126 / we)
                                                                                            :ARG1 (u_3121 / say-01
                                                                                                          :ARG0 (u_3124 / girl)
                                                                                                          :ARG1 (u_3122 / sleep-01
                                                                                                                        :ARG0 (d / doctor))))))))))

# ::snt The kids said that the girls mentioned that the women knew that the boys mentioned that I mentioned that the men heard that the doctor believed that the lawyer heard that you won
# ::tree TP_CP(said,kids,TP_CP(mentioned,girls,TP_CP(knew,women,TP_CP(mentioned,boys,TP_CP(mentioned,I,TP_CP(heard,men,TP_CP(believed,doctor,TP_CP(heard,lawyer,TP_intr(won,you)))))))))
# ::size0 9
# ::id deep_recursion_basic_75
# ::suppl deep_recursion_basic_75
(u_3149 / say-01
        :ARG0 (r / kid)
        :ARG1 (u_3147 / mention-01
                      :ARG0 (u_3150 / girl)
                      :ARG1 (u_3145 / know-01
                                    :ARG0 (u_3148 / woman)
                                    :ARG1 (u_3143 / mention-01
                                                  :ARG0 (u_3146 / boy)
                                                  :ARG1 (u_3141 / mention-01
                                                                :ARG0 (u_3144 / i)
                                                                :ARG1 (u_3139 / hear-01
                                                                              :ARG0 (u_3142 / man)
                                                                              :ARG1 (u_3138 / believe-01
                                                                                            :ARG0 (d / doctor)
                                                                                            :ARG1 (u_3137 / hear-01
                                                                                                          :ARG0 (m / lawyer)
                                                                                                          :ARG1 (u_3136 / win-01
                                                                                                                        :ARG0 (u_3140 / you))))))))))

# ::snt The women mentioned that the lawyer said that the doctor heard that you thought that the men heard that the kids believed that we heard that the soldier believed that the astronaut won
# ::tree TP_CP(mentioned,women,TP_CP(said,lawyer,TP_CP(heard,doctor,TP_CP(thought,you,TP_CP(heard,men,TP_CP(believed,kids,TP_CP(heard,we,TP_CP(believed,soldier,TP_intr(won,astronaut)))))))))
# ::size0 9
# ::id deep_recursion_basic_76
# ::suppl deep_recursion_basic_76
(u_3168 / mention-01
        :ARG0 (r / woman)
        :ARG1 (u_3166 / say-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_3164 / hear-01
                                    :ARG0 (d / doctor)
                                    :ARG1 (u_3161 / think-01
                                                  :ARG0 (u_3170 / you)
                                                  :ARG1 (u_3158 / hear-01
                                                                :ARG0 (u_3163 / man)
                                                                :ARG1 (u_3155 / believe-01
                                                                              :ARG0 (u_3160 / kid)
                                                                              :ARG1 (u_3152 / hear-01
                                                                                            :ARG0 (u_3157 / we)
                                                                                            :ARG1 (u_3151 / believe-01
                                                                                                          :ARG0 (s / soldier)
                                                                                                          :ARG1 (u_3154 / win-01
                                                                                                                        :ARG0 (a / astronaut))))))))))

# ::snt You said that the lawyer said that the soldier mentioned that the men thought that the women knew that the girls mentioned that we believed that the boys thought that the doctor slept
# ::tree TP_CP(said,you,TP_CP(said,lawyer,TP_CP(mentioned,soldier,TP_CP(thought,men,TP_CP(knew,women,TP_CP(mentioned,girls,TP_CP(believed,we,TP_CP(thought,boys,TP_intr(slept,doctor)))))))))
# ::size0 9
# ::id deep_recursion_basic_77
# ::suppl deep_recursion_basic_77
(u_3184 / say-01
        :ARG0 (r / you)
        :ARG1 (u_3182 / say-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_3181 / mention-01
                                    :ARG0 (s / soldier)
                                    :ARG1 (u_3179 / think-01
                                                  :ARG0 (u_3186 / man)
                                                  :ARG1 (u_3177 / know-01
                                                                :ARG0 (u_3180 / woman)
                                                                :ARG1 (u_3175 / mention-01
                                                                              :ARG0 (u_3178 / girl)
                                                                              :ARG1 (u_3173 / believe-01
                                                                                            :ARG0 (u_3176 / we)
                                                                                            :ARG1 (u_3171 / think-01
                                                                                                          :ARG0 (u_3174 / boy)
                                                                                                          :ARG1 (u_3172 / sleep-01
                                                                                                                        :ARG0 (d / doctor))))))))))

# ::snt The men said that the lawyer said that the astronaut believed that the soldier heard that the doctor believed that the kids knew that the women heard that I knew that the girls slept
# ::tree TP_CP(said,men,TP_CP(said,lawyer,TP_CP(believed,astronaut,TP_CP(heard,soldier,TP_CP(believed,doctor,TP_CP(knew,kids,TP_CP(heard,women,TP_CP(knew,I,TP_intr(slept,girls)))))))))
# ::size0 9
# ::id deep_recursion_basic_78
# ::suppl deep_recursion_basic_78
(u_3200 / say-01
        :ARG0 (r / man)
        :ARG1 (u_3198 / say-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_3196 / believe-01
                                    :ARG0 (a / astronaut)
                                    :ARG1 (u_3195 / hear-01
                                                  :ARG0 (s / soldier)
                                                  :ARG1 (u_3194 / believe-01
                                                                :ARG0 (d / doctor)
                                                                :ARG1 (u_3192 / know-01
                                                                              :ARG0 (u_3202 / kid)
                                                                              :ARG1 (u_3190 / hear-01
                                                                                            :ARG0 (u_3193 / woman)
                                                                                            :ARG1 (u_3188 / know-01
                                                                                                          :ARG0 (u_3191 / i)
                                                                                                          :ARG1 (u_3187 / sleep-01
                                                                                                                        :ARG0 (u_3189 / girl))))))))))

# ::snt The doctor believed that the kids mentioned that the boys knew that I heard that the girls said that the soldier knew that we said that the men mentioned that the astronaut won
# ::tree TP_CP(believed,doctor,TP_CP(mentioned,kids,TP_CP(knew,boys,TP_CP(heard,I,TP_CP(said,girls,TP_CP(knew,soldier,TP_CP(said,we,TP_CP(mentioned,men,TP_intr(won,astronaut)))))))))
# ::size0 9
# ::id deep_recursion_basic_79
# ::suppl deep_recursion_basic_79
(u_3220 / believe-01
        :ARG0 (d / doctor)
        :ARG1 (u_3217 / mention-01
                      :ARG0 (r / kid)
                      :ARG1 (u_3214 / know-01
                                    :ARG0 (u_3219 / boy)
                                    :ARG1 (u_3211 / hear-01
                                                  :ARG0 (u_3216 / i)
                                                  :ARG1 (u_3208 / say-01
                                                                :ARG0 (u_3213 / girl)
                                                                :ARG1 (u_3207 / know-01
                                                                              :ARG0 (s / soldier)
                                                                              :ARG1 (u_3205 / say-01
                                                                                            :ARG0 (u_3210 / we)
                                                                                            :ARG1 (u_3203 / mention-01
                                                                                                          :ARG0 (u_3206 / man)
                                                                                                          :ARG1 (u_3204 / win-01
                                                                                                                        :ARG0 (a / astronaut))))))))))

# ::snt The boys heard that you thought that the soldier knew that the women heard that the lawyer heard that I knew that the doctor mentioned that the kids believed that we said that the men won
# ::tree TP_CP(heard,boys,TP_CP(thought,you,TP_CP(knew,soldier,TP_CP(heard,women,TP_CP(heard,lawyer,TP_CP(knew,I,TP_CP(mentioned,doctor,TP_CP(believed,kids,TP_CP(said,we,TP_intr(won,men))))))))))
# ::size0 10
# ::id deep_recursion_basic_80
# ::suppl deep_recursion_basic_80
(u_3237 / hear-01
        :ARG0 (r / boy)
        :ARG1 (u_3234 / think-01
                      :ARG0 (u_3239 / you)
                      :ARG1 (u_3233 / know-01
                                    :ARG0 (s / soldier)
                                    :ARG1 (u_3231 / hear-01
                                                  :ARG0 (u_3236 / woman)
                                                  :ARG1 (u_3230 / hear-01
                                                                :ARG0 (m / lawyer)
                                                                :ARG1 (u_3228 / know-01
                                                                              :ARG0 (u_3232 / i)
                                                                              :ARG1 (u_3227 / mention-01
                                                                                            :ARG0 (d / doctor)
                                                                                            :ARG1 (u_3225 / believe-01
                                                                                                          :ARG0 (u_3229 / kid)
                                                                                                          :ARG1 (u_3223 / say-01
                                                                                                                        :ARG0 (u_3226 / we)
                                                                                                                        :ARG1 (u_3222 / win-01
                                                                                                                                      :ARG0 (u_3224 / man)))))))))))

# ::snt The doctor believed that the men knew that we knew that the soldier believed that the astronaut said that the boys mentioned that the kids thought that you heard that I said that the girls slept
# ::tree TP_CP(believed,doctor,TP_CP(knew,men,TP_CP(knew,we,TP_CP(believed,soldier,TP_CP(said,astronaut,TP_CP(mentioned,boys,TP_CP(thought,kids,TP_CP(heard,you,TP_CP(said,I,TP_intr(slept,girls))))))))))
# ::size0 10
# ::id deep_recursion_basic_81
# ::suppl deep_recursion_basic_81
(u_3257 / believe-01
        :ARG0 (d / doctor)
        :ARG1 (u_3254 / know-01
                      :ARG0 (r / man)
                      :ARG1 (u_3251 / know-01
                                    :ARG0 (u_3256 / we)
                                    :ARG1 (u_3250 / believe-01
                                                  :ARG0 (s / soldier)
                                                  :ARG1 (u_3249 / say-01
                                                                :ARG0 (a / astronaut)
                                                                :ARG1 (u_3247 / mention-01
                                                                              :ARG0 (u_3253 / boy)
                                                                              :ARG1 (u_3245 / think-01
                                                                                            :ARG0 (u_3248 / kid)
                                                                                            :ARG1 (u_3243 / hear-01
                                                                                                          :ARG0 (u_3246 / you)
                                                                                                          :ARG1 (u_3241 / say-01
                                                                                                                        :ARG0 (u_3244 / i)
                                                                                                                        :ARG1 (u_3240 / sleep-01
                                                                                                                                      :ARG0 (u_3242 / girl)))))))))))

# ::snt The kids thought that the astronaut knew that I thought that the boys thought that the girls believed that the doctor heard that the lawyer mentioned that the men thought that the soldier believed that the women arrived
# ::tree TP_CP(thought,kids,TP_CP(knew,astronaut,TP_CP(thought,I,TP_CP(thought,boys,TP_CP(believed,girls,TP_CP(heard,doctor,TP_CP(mentioned,lawyer,TP_CP(thought,men,TP_CP(believed,soldier,TP_intr(arrived,women))))))))))
# ::size0 10
# ::id deep_recursion_basic_82
# ::suppl deep_recursion_basic_82
(u_3279 / think-01
        :ARG0 (r / kid)
        :ARG1 (u_3277 / know-01
                      :ARG0 (a / astronaut)
                      :ARG1 (u_3274 / think-01
                                    :ARG0 (u_3281 / i)
                                    :ARG1 (u_3271 / think-01
                                                  :ARG0 (u_3276 / boy)
                                                  :ARG1 (u_3268 / believe-01
                                                                :ARG0 (u_3273 / girl)
                                                                :ARG1 (u_3266 / hear-01
                                                                              :ARG0 (d / doctor)
                                                                              :ARG1 (u_3264 / mention-01
                                                                                            :ARG0 (m / lawyer)
                                                                                            :ARG1 (u_3261 / think-01
                                                                                                          :ARG0 (u_3270 / man)
                                                                                                          :ARG1 (u_3260 / believe-01
                                                                                                                        :ARG0 (s / soldier)
                                                                                                                        :ARG1 (u_3259 / arrive-01
                                                                                                                                      :ARG1 (u_3263 / woman)))))))))))

# ::snt The women heard that the lawyer heard that the astronaut heard that we knew that the kids thought that the boys said that I thought that the doctor knew that the girls believed that the soldier arrived
# ::tree TP_CP(heard,women,TP_CP(heard,lawyer,TP_CP(heard,astronaut,TP_CP(knew,we,TP_CP(thought,kids,TP_CP(said,boys,TP_CP(thought,I,TP_CP(knew,doctor,TP_CP(believed,girls,TP_intr(arrived,soldier))))))))))
# ::size0 10
# ::id deep_recursion_basic_83
# ::suppl deep_recursion_basic_83
(u_3303 / hear-01
        :ARG0 (r / woman)
        :ARG1 (u_3301 / hear-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_3299 / hear-01
                                    :ARG0 (a / astronaut)
                                    :ARG1 (u_3296 / know-01
                                                  :ARG0 (u_3305 / we)
                                                  :ARG1 (u_3293 / think-01
                                                                :ARG0 (u_3298 / kid)
                                                                :ARG1 (u_3290 / say-01
                                                                              :ARG0 (u_3295 / boy)
                                                                              :ARG1 (u_3287 / think-01
                                                                                            :ARG0 (u_3292 / i)
                                                                                            :ARG1 (u_3285 / know-01
                                                                                                          :ARG0 (d / doctor)
                                                                                                          :ARG1 (u_3282 / believe-01
                                                                                                                        :ARG0 (u_3289 / girl)
                                                                                                                        :ARG1 (u_3284 / arrive-01
                                                                                                                                      :ARG1 (s / soldier)))))))))))

# ::snt I mentioned that the doctor heard that the girls knew that the astronaut said that the men knew that the soldier mentioned that the women knew that you mentioned that the boys believed that the kids slept
# ::tree TP_CP(mentioned,I,TP_CP(heard,doctor,TP_CP(knew,girls,TP_CP(said,astronaut,TP_CP(knew,men,TP_CP(mentioned,soldier,TP_CP(knew,women,TP_CP(mentioned,you,TP_CP(believed,boys,TP_intr(slept,kids))))))))))
# ::size0 10
# ::id deep_recursion_basic_84
# ::suppl deep_recursion_basic_84
(u_3324 / mention-01
        :ARG0 (r / i)
        :ARG1 (u_3322 / hear-01
                      :ARG0 (d / doctor)
                      :ARG1 (u_3319 / know-01
                                    :ARG0 (u_3326 / girl)
                                    :ARG1 (u_3317 / say-01
                                                  :ARG0 (a / astronaut)
                                                  :ARG1 (u_3314 / know-01
                                                                :ARG0 (u_3321 / man)
                                                                :ARG1 (u_3313 / mention-01
                                                                              :ARG0 (s / soldier)
                                                                              :ARG1 (u_3311 / know-01
                                                                                            :ARG0 (u_3316 / woman)
                                                                                            :ARG1 (u_3309 / mention-01
                                                                                                          :ARG0 (u_3312 / you)
                                                                                                          :ARG1 (u_3307 / believe-01
                                                                                                                        :ARG0 (u_3310 / boy)
                                                                                                                        :ARG1 (u_3306 / sleep-01
                                                                                                                                      :ARG0 (u_3308 / kid)))))))))))

# ::snt The soldier knew that the lawyer heard that the astronaut heard that I mentioned that the men said that the doctor heard that the kids mentioned that the boys believed that the girls heard that we arrived
# ::tree TP_CP(knew,soldier,TP_CP(heard,lawyer,TP_CP(heard,astronaut,TP_CP(mentioned,I,TP_CP(said,men,TP_CP(heard,doctor,TP_CP(mentioned,kids,TP_CP(believed,boys,TP_CP(heard,girls,TP_intr(arrived,we))))))))))
# ::size0 10
# ::id deep_recursion_basic_85
# ::suppl deep_recursion_basic_85
(u_3341 / know-01
        :ARG0 (s / soldier)
        :ARG1 (u_3340 / hear-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_3339 / hear-01
                                    :ARG0 (a / astronaut)
                                    :ARG1 (u_3337 / mention-01
                                                  :ARG0 (r / i)
                                                  :ARG1 (u_3335 / say-01
                                                                :ARG0 (u_3338 / man)
                                                                :ARG1 (u_3334 / hear-01
                                                                              :ARG0 (d / doctor)
                                                                              :ARG1 (u_3332 / mention-01
                                                                                            :ARG0 (u_3336 / kid)
                                                                                            :ARG1 (u_3330 / believe-01
                                                                                                          :ARG0 (u_3333 / boy)
                                                                                                          :ARG1 (u_3328 / hear-01
                                                                                                                        :ARG0 (u_3331 / girl)
                                                                                                                        :ARG1 (u_3327 / arrive-01
                                                                                                                                      :ARG1 (u_3329 / we)))))))))))

# ::snt You said that the girls thought that the lawyer said that the doctor heard that the men heard that we believed that the boys knew that the kids thought that I thought that the women arrived
# ::tree TP_CP(said,you,TP_CP(thought,girls,TP_CP(said,lawyer,TP_CP(heard,doctor,TP_CP(heard,men,TP_CP(believed,we,TP_CP(knew,boys,TP_CP(thought,kids,TP_CP(thought,I,TP_intr(arrived,women))))))))))
# ::size0 10
# ::id deep_recursion_basic_86
# ::suppl deep_recursion_basic_86
(u_3357 / say-01
        :ARG0 (r / you)
        :ARG1 (u_3355 / think-01
                      :ARG0 (u_3358 / girl)
                      :ARG1 (u_3354 / say-01
                                    :ARG0 (m / lawyer)
                                    :ARG1 (u_3353 / hear-01
                                                  :ARG0 (d / doctor)
                                                  :ARG1 (u_3351 / hear-01
                                                                :ARG0 (u_3356 / man)
                                                                :ARG1 (u_3349 / believe-01
                                                                              :ARG0 (u_3352 / we)
                                                                              :ARG1 (u_3347 / know-01
                                                                                            :ARG0 (u_3350 / boy)
                                                                                            :ARG1 (u_3345 / think-01
                                                                                                          :ARG0 (u_3348 / kid)
                                                                                                          :ARG1 (u_3343 / think-01
                                                                                                                        :ARG0 (u_3346 / i)
                                                                                                                        :ARG1 (u_3342 / arrive-01
                                                                                                                                      :ARG1 (u_3344 / woman)))))))))))

# ::snt I believed that the astronaut mentioned that you believed that the doctor heard that the lawyer said that the soldier knew that the boys believed that the kids heard that we believed that the women slept
# ::tree TP_CP(believed,I,TP_CP(mentioned,astronaut,TP_CP(believed,you,TP_CP(heard,doctor,TP_CP(said,lawyer,TP_CP(knew,soldier,TP_CP(believed,boys,TP_CP(heard,kids,TP_CP(believed,we,TP_intr(slept,women))))))))))
# ::size0 10
# ::id deep_recursion_basic_87
# ::suppl deep_recursion_basic_87
(u_3376 / believe-01
        :ARG0 (r / i)
        :ARG1 (u_3374 / mention-01
                      :ARG0 (a / astronaut)
                      :ARG1 (u_3371 / believe-01
                                    :ARG0 (u_3378 / you)
                                    :ARG1 (u_3369 / hear-01
                                                  :ARG0 (d / doctor)
                                                  :ARG1 (u_3367 / say-01
                                                                :ARG0 (m / lawyer)
                                                                :ARG1 (u_3366 / know-01
                                                                              :ARG0 (s / soldier)
                                                                              :ARG1 (u_3364 / believe-01
                                                                                            :ARG0 (u_3373 / boy)
                                                                                            :ARG1 (u_3362 / hear-01
                                                                                                          :ARG0 (u_3365 / kid)
                                                                                                          :ARG1 (u_3360 / believe-01
                                                                                                                        :ARG0 (u_3363 / we)
                                                                                                                        :ARG1 (u_3359 / sleep-01
                                                                                                                                      :ARG0 (u_3361 / woman)))))))))))

# ::snt You mentioned that the doctor mentioned that the men said that I mentioned that the astronaut believed that the kids said that the women thought that we mentioned that the lawyer believed that the soldier won
# ::tree TP_CP(mentioned,you,TP_CP(mentioned,doctor,TP_CP(said,men,TP_CP(mentioned,I,TP_CP(believed,astronaut,TP_CP(said,kids,TP_CP(thought,women,TP_CP(mentioned,we,TP_CP(believed,lawyer,TP_intr(won,soldier))))))))))
# ::size0 10
# ::id deep_recursion_basic_88
# ::suppl deep_recursion_basic_88
(u_3400 / mention-01
        :ARG0 (r / you)
        :ARG1 (u_3398 / mention-01
                      :ARG0 (d / doctor)
                      :ARG1 (u_3395 / say-01
                                    :ARG0 (u_3402 / man)
                                    :ARG1 (u_3392 / mention-01
                                                  :ARG0 (u_3397 / i)
                                                  :ARG1 (u_3390 / believe-01
                                                                :ARG0 (a / astronaut)
                                                                :ARG1 (u_3387 / say-01
                                                                              :ARG0 (u_3394 / kid)
                                                                              :ARG1 (u_3384 / think-01
                                                                                            :ARG0 (u_3389 / woman)
                                                                                            :ARG1 (u_3381 / mention-01
                                                                                                          :ARG0 (u_3386 / we)
                                                                                                          :ARG1 (u_3379 / believe-01
                                                                                                                        :ARG0 (m / lawyer)
                                                                                                                        :ARG1 (u_3383 / win-01
                                                                                                                                      :ARG0 (s / soldier)))))))))))

# ::snt The women said that the girls believed that the lawyer heard that you knew that the boys heard that I knew that the kids mentioned that the doctor mentioned that the men heard that we slept
# ::tree TP_CP(said,women,TP_CP(believed,girls,TP_CP(heard,lawyer,TP_CP(knew,you,TP_CP(heard,boys,TP_CP(knew,I,TP_CP(mentioned,kids,TP_CP(mentioned,doctor,TP_CP(heard,men,TP_intr(slept,we))))))))))
# ::size0 10
# ::id deep_recursion_basic_89
# ::suppl deep_recursion_basic_89
(u_3418 / say-01
        :ARG0 (r / woman)
        :ARG1 (u_3416 / believe-01
                      :ARG0 (u_3419 / girl)
                      :ARG1 (u_3415 / hear-01
                                    :ARG0 (m / lawyer)
                                    :ARG1 (u_3413 / know-01
                                                  :ARG0 (u_3417 / you)
                                                  :ARG1 (u_3411 / hear-01
                                                                :ARG0 (u_3414 / boy)
                                                                :ARG1 (u_3409 / know-01
                                                                              :ARG0 (u_3412 / i)
                                                                              :ARG1 (u_3407 / mention-01
                                                                                            :ARG0 (u_3410 / kid)
                                                                                            :ARG1 (u_3406 / mention-01
                                                                                                          :ARG0 (d / doctor)
                                                                                                          :ARG1 (u_3404 / hear-01
                                                                                                                        :ARG0 (u_3408 / man)
                                                                                                                        :ARG1 (u_3403 / sleep-01
                                                                                                                                      :ARG0 (u_3405 / we)))))))))))

# ::snt You knew that the girls heard that I said that the soldier thought that the astronaut knew that the women mentioned that the boys knew that we knew that the doctor believed that the kids believed that the men won
# ::tree TP_CP(knew,you,TP_CP(heard,girls,TP_CP(said,I,TP_CP(thought,soldier,TP_CP(knew,astronaut,TP_CP(mentioned,women,TP_CP(knew,boys,TP_CP(knew,we,TP_CP(believed,doctor,TP_CP(believed,kids,TP_intr(won,men)))))))))))
# ::size0 11
# ::id deep_recursion_basic_90
# ::suppl deep_recursion_basic_90
(u_3438 / know-01
        :ARG0 (r / you)
        :ARG1 (u_3435 / hear-01
                      :ARG0 (u_3440 / girl)
                      :ARG1 (u_3432 / say-01
                                    :ARG0 (u_3437 / i)
                                    :ARG1 (u_3431 / think-01
                                                  :ARG0 (s / soldier)
                                                  :ARG1 (u_3430 / know-01
                                                                :ARG0 (a / astronaut)
                                                                :ARG1 (u_3428 / mention-01
                                                                              :ARG0 (u_3434 / woman)
                                                                              :ARG1 (u_3426 / know-01
                                                                                            :ARG0 (u_3429 / boy)
                                                                                            :ARG1 (u_3424 / know-01
                                                                                                          :ARG0 (u_3427 / we)
                                                                                                          :ARG1 (u_3423 / believe-01
                                                                                                                        :ARG0 (d / doctor)
                                                                                                                        :ARG1 (u_3421 / believe-01
                                                                                                                                      :ARG0 (u_3425 / kid)
                                                                                                                                      :ARG1 (u_3420 / win-01
                                                                                                                                                    :ARG0 (u_3422 / man))))))))))))

# ::snt The men heard that the boys knew that we believed that I knew that the kids said that the girls believed that the women mentioned that you heard that the doctor thought that the soldier mentioned that the astronaut won
# ::tree TP_CP(heard,men,TP_CP(knew,boys,TP_CP(believed,we,TP_CP(knew,I,TP_CP(said,kids,TP_CP(believed,girls,TP_CP(mentioned,women,TP_CP(heard,you,TP_CP(thought,doctor,TP_CP(mentioned,soldier,TP_intr(won,astronaut)))))))))))
# ::size0 11
# ::id deep_recursion_basic_91
# ::suppl deep_recursion_basic_91
(u_3465 / hear-01
        :ARG0 (r / man)
        :ARG1 (u_3462 / know-01
                      :ARG0 (u_3467 / boy)
                      :ARG1 (u_3459 / believe-01
                                    :ARG0 (u_3464 / we)
                                    :ARG1 (u_3456 / know-01
                                                  :ARG0 (u_3461 / i)
                                                  :ARG1 (u_3453 / say-01
                                                                :ARG0 (u_3458 / kid)
                                                                :ARG1 (u_3450 / believe-01
                                                                              :ARG0 (u_3455 / girl)
                                                                              :ARG1 (u_3447 / mention-01
                                                                                            :ARG0 (u_3452 / woman)
                                                                                            :ARG1 (u_3444 / hear-01
                                                                                                          :ARG0 (u_3449 / you)
                                                                                                          :ARG1 (u_3442 / think-01
                                                                                                                        :ARG0 (d / doctor)
                                                                                                                        :ARG1 (u_3441 / mention-01
                                                                                                                                      :ARG0 (s / soldier)
                                                                                                                                      :ARG1 (u_3446 / win-01
                                                                                                                                                    :ARG0 (a / astronaut))))))))))))

# ::snt The soldier knew that the women mentioned that the kids thought that you believed that the girls mentioned that the astronaut mentioned that I heard that the lawyer thought that the doctor mentioned that the boys thought that we won
# ::tree TP_CP(knew,soldier,TP_CP(mentioned,women,TP_CP(thought,kids,TP_CP(believed,you,TP_CP(mentioned,girls,TP_CP(mentioned,astronaut,TP_CP(heard,I,TP_CP(thought,lawyer,TP_CP(mentioned,doctor,TP_CP(thought,boys,TP_intr(won,we)))))))))))
# ::size0 11
# ::id deep_recursion_basic_92
# ::suppl deep_recursion_basic_92
(u_3484 / know-01
        :ARG0 (s / soldier)
        :ARG1 (u_3482 / mention-01
                      :ARG0 (r / woman)
                      :ARG1 (u_3480 / think-01
                                    :ARG0 (u_3483 / kid)
                                    :ARG1 (u_3478 / believe-01
                                                  :ARG0 (u_3481 / you)
                                                  :ARG1 (u_3476 / mention-01
                                                                :ARG0 (u_3479 / girl)
                                                                :ARG1 (u_3475 / mention-01
                                                                              :ARG0 (a / astronaut)
                                                                              :ARG1 (u_3473 / hear-01
                                                                                            :ARG0 (u_3477 / i)
                                                                                            :ARG1 (u_3472 / think-01
                                                                                                          :ARG0 (m / lawyer)
                                                                                                          :ARG1 (u_3471 / mention-01
                                                                                                                        :ARG0 (d / doctor)
                                                                                                                        :ARG1 (u_3469 / think-01
                                                                                                                                      :ARG0 (u_3474 / boy)
                                                                                                                                      :ARG1 (u_3468 / win-01
                                                                                                                                                    :ARG0 (u_3470 / we))))))))))))

# ::snt The girls said that the lawyer mentioned that the women mentioned that the soldier believed that you heard that the astronaut thought that we knew that the kids knew that I mentioned that the doctor said that the boys won
# ::tree TP_CP(said,girls,TP_CP(mentioned,lawyer,TP_CP(mentioned,women,TP_CP(believed,soldier,TP_CP(heard,you,TP_CP(thought,astronaut,TP_CP(knew,we,TP_CP(knew,kids,TP_CP(mentioned,I,TP_CP(said,doctor,TP_intr(won,boys)))))))))))
# ::size0 11
# ::id deep_recursion_basic_93
# ::suppl deep_recursion_basic_93
(u_3502 / say-01
        :ARG0 (r / girl)
        :ARG1 (u_3500 / mention-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_3497 / mention-01
                                    :ARG0 (u_3504 / woman)
                                    :ARG1 (u_3496 / believe-01
                                                  :ARG0 (s / soldier)
                                                  :ARG1 (u_3494 / hear-01
                                                                :ARG0 (u_3499 / you)
                                                                :ARG1 (u_3493 / think-01
                                                                              :ARG0 (a / astronaut)
                                                                              :ARG1 (u_3491 / know-01
                                                                                            :ARG0 (u_3495 / we)
                                                                                            :ARG1 (u_3489 / know-01
                                                                                                          :ARG0 (u_3492 / kid)
                                                                                                          :ARG1 (u_3487 / mention-01
                                                                                                                        :ARG0 (u_3490 / i)
                                                                                                                        :ARG1 (u_3486 / say-01
                                                                                                                                      :ARG0 (d / doctor)
                                                                                                                                      :ARG1 (u_3485 / win-01
                                                                                                                                                    :ARG0 (u_3488 / boy))))))))))))

# ::snt The kids believed that the soldier believed that we believed that I mentioned that the lawyer knew that the girls said that you believed that the women knew that the men believed that the boys believed that the astronaut sneezed
# ::tree TP_CP(believed,kids,TP_CP(believed,soldier,TP_CP(believed,we,TP_CP(mentioned,I,TP_CP(knew,lawyer,TP_CP(said,girls,TP_CP(believed,you,TP_CP(knew,women,TP_CP(believed,men,TP_CP(believed,boys,TP_intr(sneezed,astronaut)))))))))))
# ::size0 11
# ::id deep_recursion_basic_94
# ::suppl deep_recursion_basic_94
(u_3521 / believe-01
        :ARG0 (r / kid)
        :ARG1 (u_3520 / believe-01
                      :ARG0 (s / soldier)
                      :ARG1 (u_3518 / believe-01
                                    :ARG0 (u_3523 / we)
                                    :ARG1 (u_3516 / mention-01
                                                  :ARG0 (u_3519 / i)
                                                  :ARG1 (u_3515 / know-01
                                                                :ARG0 (m / lawyer)
                                                                :ARG1 (u_3513 / say-01
                                                                              :ARG0 (u_3517 / girl)
                                                                              :ARG1 (u_3511 / believe-01
                                                                                            :ARG0 (u_3514 / you)
                                                                                            :ARG1 (u_3509 / know-01
                                                                                                          :ARG0 (u_3512 / woman)
                                                                                                          :ARG1 (u_3507 / believe-01
                                                                                                                        :ARG0 (u_3510 / man)
                                                                                                                        :ARG1 (u_3505 / believe-01
                                                                                                                                      :ARG0 (u_3508 / boy)
                                                                                                                                      :ARG1 (u_3506 / sneeze-01
                                                                                                                                                    :ARG0 (a / astronaut))))))))))))

# ::snt The soldier believed that the lawyer believed that the girls knew that the men said that I believed that the astronaut heard that the doctor said that the kids thought that you thought that the boys heard that the women slept
# ::tree TP_CP(believed,soldier,TP_CP(believed,lawyer,TP_CP(knew,girls,TP_CP(said,men,TP_CP(believed,I,TP_CP(heard,astronaut,TP_CP(said,doctor,TP_CP(thought,kids,TP_CP(thought,you,TP_CP(heard,boys,TP_intr(slept,women)))))))))))
# ::size0 11
# ::id deep_recursion_basic_95
# ::suppl deep_recursion_basic_95
(u_3540 / believe-01
        :ARG0 (s / soldier)
        :ARG1 (u_3539 / believe-01
                      :ARG0 (m / lawyer)
                      :ARG1 (u_3537 / know-01
                                    :ARG0 (r / girl)
                                    :ARG1 (u_3535 / say-01
                                                  :ARG0 (u_3538 / man)
                                                  :ARG1 (u_3533 / believe-01
                                                                :ARG0 (u_3536 / i)
                                                                :ARG1 (u_3532 / hear-01
                                                                              :ARG0 (a / astronaut)
                                                                              :ARG1 (u_3531 / say-01
                                                                                            :ARG0 (d / doctor)
                                                                                            :ARG1 (u_3529 / think-01
                                                                                                          :ARG0 (u_3534 / kid)
                                                                                                          :ARG1 (u_3527 / think-01
                                                                                                                        :ARG0 (u_3530 / you)
                                                                                                                        :ARG1 (u_3525 / hear-01
                                                                                                                                      :ARG0 (u_3528 / boy)
                                                                                                                                      :ARG1 (u_3524 / sleep-01
                                                                                                                                                    :ARG0 (u_3526 / woman))))))))))))

# ::snt The kids thought that you thought that the boys said that the lawyer mentioned that the women knew that the girls mentioned that I knew that the astronaut said that the soldier knew that the men said that we sneezed
# ::tree TP_CP(thought,kids,TP_CP(thought,you,TP_CP(said,boys,TP_CP(mentioned,lawyer,TP_CP(knew,women,TP_CP(mentioned,girls,TP_CP(knew,I,TP_CP(said,astronaut,TP_CP(knew,soldier,TP_CP(said,men,TP_intr(sneezed,we)))))))))))
# ::size0 11
# ::id deep_recursion_basic_96
# ::suppl deep_recursion_basic_96
(u_3564 / think-01
        :ARG0 (r / kid)
        :ARG1 (u_3561 / think-01
                      :ARG0 (u_3566 / you)
                      :ARG1 (u_3558 / say-01
                                    :ARG0 (u_3563 / boy)
                                    :ARG1 (u_3556 / mention-01
                                                  :ARG0 (m / lawyer)
                                                  :ARG1 (u_3553 / know-01
                                                                :ARG0 (u_3560 / woman)
                                                                :ARG1 (u_3550 / mention-01
                                                                              :ARG0 (u_3555 / girl)
                                                                              :ARG1 (u_3547 / know-01
                                                                                            :ARG0 (u_3552 / i)
                                                                                            :ARG1 (u_3545 / say-01
                                                                                                          :ARG0 (a / astronaut)
                                                                                                          :ARG1 (u_3544 / know-01
                                                                                                                        :ARG0 (s / soldier)
                                                                                                                        :ARG1 (u_3542 / say-01
                                                                                                                                      :ARG0 (u_3549 / man)
                                                                                                                                      :ARG1 (u_3541 / sneeze-01
                                                                                                                                                    :ARG0 (u_3543 / we))))))))))))

# ::snt The astronaut said that the kids knew that you heard that we heard that the lawyer thought that the women believed that the doctor thought that the boys heard that the girls thought that I knew that the men won
# ::tree TP_CP(said,astronaut,TP_CP(knew,kids,TP_CP(heard,you,TP_CP(heard,we,TP_CP(thought,lawyer,TP_CP(believed,women,TP_CP(thought,doctor,TP_CP(heard,boys,TP_CP(thought,girls,TP_CP(knew,I,TP_intr(won,men)))))))))))
# ::size0 11
# ::id deep_recursion_basic_97
# ::suppl deep_recursion_basic_97
(u_3584 / say-01
        :ARG0 (a / astronaut)
        :ARG1 (u_3582 / know-01
                      :ARG0 (r / kid)
                      :ARG1 (u_3580 / hear-01
                                    :ARG0 (u_3583 / you)
                                    :ARG1 (u_3578 / hear-01
                                                  :ARG0 (u_3581 / we)
                                                  :ARG1 (u_3577 / think-01
                                                                :ARG0 (m / lawyer)
                                                                :ARG1 (u_3575 / believe-01
                                                                              :ARG0 (u_3579 / woman)
                                                                              :ARG1 (u_3574 / think-01
                                                                                            :ARG0 (d / doctor)
                                                                                            :ARG1 (u_3572 / hear-01
                                                                                                          :ARG0 (u_3576 / boy)
                                                                                                          :ARG1 (u_3570 / think-01
                                                                                                                        :ARG0 (u_3573 / girl)
                                                                                                                        :ARG1 (u_3568 / know-01
                                                                                                                                      :ARG0 (u_3571 / i)
                                                                                                                                      :ARG1 (u_3567 / win-01
                                                                                                                                                    :ARG0 (u_3569 / man))))))))))))

# ::snt The astronaut believed that the women heard that the doctor thought that the girls said that you mentioned that the kids said that I knew that we said that the lawyer mentioned that the soldier knew that the men slept
# ::tree TP_CP(believed,astronaut,TP_CP(heard,women,TP_CP(thought,doctor,TP_CP(said,girls,TP_CP(mentioned,you,TP_CP(said,kids,TP_CP(knew,I,TP_CP(said,we,TP_CP(mentioned,lawyer,TP_CP(knew,soldier,TP_intr(slept,men)))))))))))
# ::size0 11
# ::id deep_recursion_basic_98
# ::suppl deep_recursion_basic_98
(u_3609 / believe-01
        :ARG0 (a / astronaut)
        :ARG1 (u_3606 / hear-01
                      :ARG0 (r / woman)
                      :ARG1 (u_3604 / think-01
                                    :ARG0 (d / doctor)
                                    :ARG1 (u_3601 / say-01
                                                  :ARG0 (u_3608 / girl)
                                                  :ARG1 (u_3598 / mention-01
                                                                :ARG0 (u_3603 / you)
                                                                :ARG1 (u_3595 / say-01
                                                                              :ARG0 (u_3600 / kid)
                                                                              :ARG1 (u_3592 / know-01
                                                                                            :ARG0 (u_3597 / i)
                                                                                            :ARG1 (u_3589 / say-01
                                                                                                          :ARG0 (u_3594 / we)
                                                                                                          :ARG1 (u_3587 / mention-01
                                                                                                                        :ARG0 (m / lawyer)
                                                                                                                        :ARG1 (u_3586 / know-01
                                                                                                                                      :ARG0 (s / soldier)
                                                                                                                                      :ARG1 (u_3585 / sleep-01
                                                                                                                                                    :ARG0 (u_3591 / man))))))))))))

# ::snt The lawyer believed that the girls believed that the astronaut mentioned that the kids thought that the women said that I thought that the men mentioned that the doctor said that you mentioned that the boys said that we sneezed
# ::tree TP_CP(believed,lawyer,TP_CP(believed,girls,TP_CP(mentioned,astronaut,TP_CP(thought,kids,TP_CP(said,women,TP_CP(thought,I,TP_CP(mentioned,men,TP_CP(said,doctor,TP_CP(mentioned,you,TP_CP(said,boys,TP_intr(sneezed,we)))))))))))
# ::size0 11
# ::id deep_recursion_basic_99
# ::suppl deep_recursion_basic_99
(u_3628 / believe-01
        :ARG0 (m / lawyer)
        :ARG1 (u_3626 / believe-01
                      :ARG0 (r / girl)
                      :ARG1 (u_3625 / mention-01
                                    :ARG0 (a / astronaut)
                                    :ARG1 (u_3623 / think-01
                                                  :ARG0 (u_3627 / kid)
                                                  :ARG1 (u_3621 / say-01
                                                                :ARG0 (u_3624 / woman)
                                                                :ARG1 (u_3619 / think-01
                                                                              :ARG0 (u_3622 / i)
                                                                              :ARG1 (u_3617 / mention-01
                                                                                            :ARG0 (u_3620 / man)
                                                                                            :ARG1 (u_3616 / say-01
                                                                                                          :ARG0 (d / doctor)
                                                                                                          :ARG1 (u_3614 / mention-01
                                                                                                                        :ARG0 (u_3618 / you)
                                                                                                                        :ARG1 (u_3612 / say-01
                                                                                                                                      :ARG0 (u_3615 / boy)
                                                                                                                                      :ARG1 (u_3611 / sneeze-01
                                                                                                                                                    :ARG0 (u_3613 / we))))))))))))

# ::snt The boy who the girl saw met the child
# ::tree TP(Vbar_tr(met,child),NP_RC(boy,obj_rel(saw,finish_NP(girl))))
# ::size0 4
# ::id centre_embedding_0
# ::suppl centre_embedding_0
(u_164 / meet-02
       :ARG0 (r / boy
                :ARG1-of (u_165 / see-01
                                :ARG0 (u_166 / girl)))
       :ARG1 (u_167 / child))

# ::snt The mechanic who the child hugged jumped
# ::tree TP(Vbar_intr(jumped),NP_RC(mechanic,obj_rel(hugged,finish_NP(child))))
# ::size0 4
# ::id centre_embedding_1
# ::suppl centre_embedding_1
(u_170 / jump-03
       :ARG0 (r / mechanic
                :ARG1-of (u_168 / hug-01
                                :ARG0 (u_169 / child))))

# ::snt The astronaut who the child met laughed
# ::tree TP(Vbar_intr(laughed),NP_RC(astronaut,obj_rel(met,finish_NP(child))))
# ::size0 4
# ::id centre_embedding_2
# ::suppl centre_embedding_2
(u_173 / laugh-01
       :ARG0 (r / astronaut
                :ARG1-of (u_171 / meet-02
                                :ARG0 (u_172 / child))))

# ::snt The girl who the child hugged amused the woman
# ::tree TP(Vbar_tr(amused,woman),NP_RC(girl,obj_rel(hugged,finish_NP(child))))
# ::size0 4
# ::id centre_embedding_3
# ::suppl centre_embedding_3
(u_174 / amuse-01
       :ARG0 (r / girl
                :ARG1-of (u_175 / hug-01
                                :ARG0 (u_176 / child)))
       :ARG1 (u_177 / woman))

# ::snt The doctor who the boy met sneezed
# ::tree TP(Vbar_intr(sneezed),NP_RC(doctor,obj_rel(met,finish_NP(boy))))
# ::size0 4
# ::id centre_embedding_4
# ::suppl centre_embedding_4
(u_180 / sneeze-01
       :ARG0 (r / doctor
                :ARG1-of (u_178 / meet-02
                                :ARG0 (u_179 / boy))))

# ::snt The doctor who the astronaut saw amused the boy
# ::tree TP(Vbar_tr(amused,boy),NP_RC(doctor,obj_rel(saw,finish_NP(astronaut))))
# ::size0 4
# ::id centre_embedding_5
# ::suppl centre_embedding_5
(u_181 / amuse-01
       :ARG0 (r / doctor
                :ARG1-of (u_182 / see-01
                                :ARG0 (u_183 / astronaut)))
       :ARG1 (u_184 / boy))

# ::snt The doctor who the child taught likes the girl
# ::tree TP(Vbar_tr(likes,girl),NP_RC(doctor,obj_rel(taught,finish_NP(child))))
# ::size0 4
# ::id centre_embedding_6
# ::suppl centre_embedding_6
(u_185 / like-01
       :ARG0 (r / doctor
                :ARG2-of (u_186 / teach-01
                                :ARG0 (u_187 / child)))
       :ARG1 (u_188 / girl))

# ::snt The astronaut who the doctor amused sneezed
# ::tree TP(Vbar_intr(sneezed),NP_RC(astronaut,obj_rel(amused,finish_NP(doctor))))
# ::size0 4
# ::id centre_embedding_7
# ::suppl centre_embedding_7
(u_191 / sneeze-01
       :ARG0 (r / astronaut
                :ARG1-of (u_189 / amuse-01
                                :ARG0 (u_190 / doctor))))

# ::snt The mechanic who the woman amused saw the astronaut
# ::tree TP(Vbar_tr(saw,astronaut),NP_RC(mechanic,obj_rel(amused,finish_NP(woman))))
# ::size0 4
# ::id centre_embedding_8
# ::suppl centre_embedding_8
(u_192 / see-01
       :ARG0 (r / mechanic
                :ARG1-of (u_193 / amuse-01
                                :ARG0 (u_194 / woman)))
       :ARG1 (u_195 / astronaut))

# ::snt The girl who the child saw laughed
# ::tree TP(Vbar_intr(laughed),NP_RC(girl,obj_rel(saw,finish_NP(child))))
# ::size0 4
# ::id centre_embedding_9
# ::suppl centre_embedding_9
(u_198 / laugh-01
       :ARG0 (r / girl
                :ARG1-of (u_196 / see-01
                                :ARG0 (u_197 / child))))

# ::snt The woman who the astronaut who the doctor amused hugged taught the girl
# ::tree TP(Vbar_tr(taught,girl),NP_RC(woman,obj_rel(hugged,NP_RC(astronaut,obj_rel(amused,finish_NP(doctor))))))
# ::size0 6
# ::id centre_embedding_10
# ::suppl centre_embedding_10
(u_199 / teach-01
       :ARG0 (r / woman
                :ARG1-of (u_202 / hug-01
                                :ARG0 (u_203 / astronaut
                                             :ARG1-of (u_200 / amuse-01
                                                             :ARG0 (u_201 / doctor)))))
       :ARG2 (u_204 / girl))

# ::snt The astronaut who the girl who the boy hugged met slept
# ::tree TP(Vbar_intr(slept),NP_RC(astronaut,obj_rel(met,NP_RC(girl,obj_rel(hugged,finish_NP(boy))))))
# ::size0 6
# ::id centre_embedding_11
# ::suppl centre_embedding_11
(u_209 / sleep-01
       :ARG0 (r / astronaut
                :ARG1-of (u_207 / meet-02
                                :ARG0 (u_208 / girl
                                             :ARG1-of (u_205 / hug-01
                                                             :ARG0 (u_206 / boy))))))

# ::snt The woman who the mechanic who the child saw met laughed
# ::tree TP(Vbar_intr(laughed),NP_RC(woman,obj_rel(met,NP_RC(mechanic,obj_rel(saw,finish_NP(child))))))
# ::size0 6
# ::id centre_embedding_12
# ::suppl centre_embedding_12
(u_214 / laugh-01
       :ARG0 (r / woman
                :ARG1-of (u_212 / meet-02
                                :ARG0 (u_213 / mechanic
                                             :ARG1-of (u_210 / see-01
                                                             :ARG0 (u_211 / child))))))

# ::snt The woman who the astronaut who the girl likes amused jumped
# ::tree TP(Vbar_intr(jumped),NP_RC(woman,obj_rel(amused,NP_RC(astronaut,obj_rel(likes,finish_NP(girl))))))
# ::size0 6
# ::id centre_embedding_13
# ::suppl centre_embedding_13
(u_219 / jump-03
       :ARG0 (r / woman
                :ARG1-of (u_217 / amuse-01
                                :ARG0 (u_218 / astronaut
                                             :ARG1-of (u_215 / like-01
                                                             :ARG0 (u_216 / girl))))))

# ::snt The boy who the girl who the doctor saw likes amused the mechanic
# ::tree TP(Vbar_tr(amused,mechanic),NP_RC(boy,obj_rel(likes,NP_RC(girl,obj_rel(saw,finish_NP(doctor))))))
# ::size0 6
# ::id centre_embedding_14
# ::suppl centre_embedding_14
(u_220 / amuse-01
       :ARG0 (r / boy
                :ARG1-of (u_223 / like-01
                                :ARG0 (u_224 / girl
                                             :ARG1-of (u_221 / see-01
                                                             :ARG0 (u_222 / doctor)))))
       :ARG1 (u_225 / mechanic))

# ::snt The child who the woman who the boy amused met attended
# ::tree TP(Vbar_intr(attended),NP_RC(child,obj_rel(met,NP_RC(woman,obj_rel(amused,finish_NP(boy))))))
# ::size0 6
# ::id centre_embedding_15
# ::suppl centre_embedding_15
(u_230 / attend-01
       :ARG0 (r / child
                :ARG1-of (u_228 / meet-02
                                :ARG0 (u_229 / woman
                                             :ARG1-of (u_226 / amuse-01
                                                             :ARG0 (u_227 / boy))))))

# ::snt The child who the astronaut who the girl amused saw slept
# ::tree TP(Vbar_intr(slept),NP_RC(child,obj_rel(saw,NP_RC(astronaut,obj_rel(amused,finish_NP(girl))))))
# ::size0 6
# ::id centre_embedding_16
# ::suppl centre_embedding_16
(u_235 / sleep-01
       :ARG0 (r / child
                :ARG1-of (u_233 / see-01
                                :ARG0 (u_234 / astronaut
                                             :ARG1-of (u_231 / amuse-01
                                                             :ARG0 (u_232 / girl))))))

# ::snt The child who the girl who the woman taught met saw the doctor
# ::tree TP(Vbar_tr(saw,doctor),NP_RC(child,obj_rel(met,NP_RC(girl,obj_rel(taught,finish_NP(woman))))))
# ::size0 6
# ::id centre_embedding_17
# ::suppl centre_embedding_17
(u_236 / see-01
       :ARG0 (r / child
                :ARG1-of (u_239 / meet-02
                                :ARG0 (u_240 / girl
                                             :ARG2-of (u_237 / teach-01
                                                             :ARG0 (u_238 / woman)))))
       :ARG1 (u_241 / doctor))

# ::snt The doctor who the boy who the child met hugged saw the woman
# ::tree TP(Vbar_tr(saw,woman),NP_RC(doctor,obj_rel(hugged,NP_RC(boy,obj_rel(met,finish_NP(child))))))
# ::size0 6
# ::id centre_embedding_18
# ::suppl centre_embedding_18
(u_242 / see-01
       :ARG0 (r / doctor
                :ARG1-of (u_245 / hug-01
                                :ARG0 (u_246 / boy
                                             :ARG1-of (u_243 / meet-02
                                                             :ARG0 (u_244 / child)))))
       :ARG1 (u_247 / woman))

# ::snt The woman who the girl who the child amused taught hugged the astronaut
# ::tree TP(Vbar_tr(hugged,astronaut),NP_RC(woman,obj_rel(taught,NP_RC(girl,obj_rel(amused,finish_NP(child))))))
# ::size0 6
# ::id centre_embedding_19
# ::suppl centre_embedding_19
(u_248 / hug-01
       :ARG0 (r / woman
                :ARG2-of (u_251 / teach-01
                                :ARG0 (u_252 / girl
                                             :ARG1-of (u_249 / amuse-01
                                                             :ARG0 (u_250 / child)))))
       :ARG1 (u_253 / astronaut))

# ::snt The boy who the mechanic who the woman who the doctor amused likes taught focused
# ::tree TP(Vbar_intr(focused),NP_RC(boy,obj_rel(taught,NP_RC(mechanic,obj_rel(likes,NP_RC(woman,obj_rel(amused,finish_NP(doctor))))))))
# ::size0 8
# ::id centre_embedding_20
# ::suppl centre_embedding_20
(u_260 / focus-01
       :ARG0 (r / boy
                :ARG2-of (u_258 / teach-01
                                :ARG0 (u_259 / mechanic
                                             :ARG1-of (u_256 / like-01
                                                             :ARG0 (u_257 / woman
                                                                          :ARG1-of (u_254 / amuse-01
                                                                                          :ARG0 (u_255 / doctor))))))))

# ::snt The woman who the child who the mechanic who the doctor taught saw hugged slept
# ::tree TP(Vbar_intr(slept),NP_RC(woman,obj_rel(hugged,NP_RC(child,obj_rel(saw,NP_RC(mechanic,obj_rel(taught,finish_NP(doctor))))))))
# ::size0 8
# ::id centre_embedding_21
# ::suppl centre_embedding_21
(u_267 / sleep-01
       :ARG0 (r / woman
                :ARG1-of (u_265 / hug-01
                                :ARG0 (u_266 / child
                                             :ARG1-of (u_263 / see-01
                                                             :ARG0 (u_264 / mechanic
                                                                          :ARG2-of (u_261 / teach-01
                                                                                          :ARG0 (u_262 / doctor))))))))

# ::snt The doctor who the child who the girl who the astronaut hugged taught saw sneezed
# ::tree TP(Vbar_intr(sneezed),NP_RC(doctor,obj_rel(saw,NP_RC(child,obj_rel(taught,NP_RC(girl,obj_rel(hugged,finish_NP(astronaut))))))))
# ::size0 8
# ::id centre_embedding_22
# ::suppl centre_embedding_22
(u_274 / sneeze-01
       :ARG0 (r / doctor
                :ARG1-of (u_272 / see-01
                                :ARG0 (u_273 / child
                                             :ARG2-of (u_270 / teach-01
                                                             :ARG0 (u_271 / girl
                                                                          :ARG1-of (u_268 / hug-01
                                                                                          :ARG0 (u_269 / astronaut))))))))

# ::snt The girl who the astronaut who the boy who the doctor likes hugged taught slept
# ::tree TP(Vbar_intr(slept),NP_RC(girl,obj_rel(taught,NP_RC(astronaut,obj_rel(hugged,NP_RC(boy,obj_rel(likes,finish_NP(doctor))))))))
# ::size0 8
# ::id centre_embedding_23
# ::suppl centre_embedding_23
(u_281 / sleep-01
       :ARG0 (r / girl
                :ARG2-of (u_279 / teach-01
                                :ARG0 (u_280 / astronaut
                                             :ARG1-of (u_277 / hug-01
                                                             :ARG0 (u_278 / boy
                                                                          :ARG1-of (u_275 / like-01
                                                                                          :ARG0 (u_276 / doctor))))))))

# ::snt The woman who the boy who the mechanic who the girl saw likes amused taught the doctor
# ::tree TP(Vbar_tr(taught,doctor),NP_RC(woman,obj_rel(amused,NP_RC(boy,obj_rel(likes,NP_RC(mechanic,obj_rel(saw,finish_NP(girl))))))))
# ::size0 8
# ::id centre_embedding_24
# ::suppl centre_embedding_24
(u_282 / teach-01
       :ARG0 (r / woman
                :ARG1-of (u_287 / amuse-01
                                :ARG0 (u_288 / boy
                                             :ARG1-of (u_285 / like-01
                                                             :ARG0 (u_286 / mechanic
                                                                          :ARG1-of (u_283 / see-01
                                                                                          :ARG0 (u_284 / girl)))))))
       :ARG2 (u_289 / doctor))

# ::snt The mechanic who the girl who the boy who the woman met taught likes hugged the doctor
# ::tree TP(Vbar_tr(hugged,doctor),NP_RC(mechanic,obj_rel(likes,NP_RC(girl,obj_rel(taught,NP_RC(boy,obj_rel(met,finish_NP(woman))))))))
# ::size0 8
# ::id centre_embedding_25
# ::suppl centre_embedding_25
(u_290 / hug-01
       :ARG0 (r / mechanic
                :ARG1-of (u_295 / like-01
                                :ARG0 (u_296 / girl
                                             :ARG2-of (u_293 / teach-01
                                                             :ARG0 (u_294 / boy
                                                                          :ARG1-of (u_291 / meet-02
                                                                                          :ARG0 (u_292 / woman)))))))
       :ARG1 (u_297 / doctor))

# ::snt The boy who the woman who the child who the doctor likes met taught slept
# ::tree TP(Vbar_intr(slept),NP_RC(boy,obj_rel(taught,NP_RC(woman,obj_rel(met,NP_RC(child,obj_rel(likes,finish_NP(doctor))))))))
# ::size0 8
# ::id centre_embedding_26
# ::suppl centre_embedding_26
(u_304 / sleep-01
       :ARG0 (r / boy
                :ARG2-of (u_302 / teach-01
                                :ARG0 (u_303 / woman
                                             :ARG1-of (u_300 / meet-02
                                                             :ARG0 (u_301 / child
                                                                          :ARG1-of (u_298 / like-01
                                                                                          :ARG0 (u_299 / doctor))))))))

# ::snt The child who the boy who the doctor who the mechanic likes amused met saw the astronaut
# ::tree TP(Vbar_tr(saw,astronaut),NP_RC(child,obj_rel(met,NP_RC(boy,obj_rel(amused,NP_RC(doctor,obj_rel(likes,finish_NP(mechanic))))))))
# ::size0 8
# ::id centre_embedding_27
# ::suppl centre_embedding_27
(u_305 / see-01
       :ARG0 (r / child
                :ARG1-of (u_310 / meet-02
                                :ARG0 (u_311 / boy
                                             :ARG1-of (u_308 / amuse-01
                                                             :ARG0 (u_309 / doctor
                                                                          :ARG1-of (u_306 / like-01
                                                                                          :ARG0 (u_307 / mechanic)))))))
       :ARG1 (u_312 / astronaut))

# ::snt The doctor who the child who the boy who the girl hugged taught amused attended
# ::tree TP(Vbar_intr(attended),NP_RC(doctor,obj_rel(amused,NP_RC(child,obj_rel(taught,NP_RC(boy,obj_rel(hugged,finish_NP(girl))))))))
# ::size0 8
# ::id centre_embedding_28
# ::suppl centre_embedding_28
(u_319 / attend-01
       :ARG0 (r / doctor
                :ARG1-of (u_317 / amuse-01
                                :ARG0 (u_318 / child
                                             :ARG2-of (u_315 / teach-01
                                                             :ARG0 (u_316 / boy
                                                                          :ARG1-of (u_313 / hug-01
                                                                                          :ARG0 (u_314 / girl))))))))

# ::snt The doctor who the mechanic who the girl who the child met hugged likes ate
# ::tree TP(Vbar_intr(ate),NP_RC(doctor,obj_rel(likes,NP_RC(mechanic,obj_rel(hugged,NP_RC(girl,obj_rel(met,finish_NP(child))))))))
# ::size0 8
# ::id centre_embedding_29
# ::suppl centre_embedding_29
(u_326 / eat-01
       :ARG0 (r / doctor
                :ARG1-of (u_324 / like-01
                                :ARG0 (u_325 / mechanic
                                             :ARG1-of (u_322 / hug-01
                                                             :ARG0 (u_323 / girl
                                                                          :ARG1-of (u_320 / meet-02
                                                                                          :ARG0 (u_321 / child))))))))

# ::snt The astronaut heard that you amused him, the astronaut
# ::tree TP_resolve_coref(heard_resolve_coref,astronaut,TP_tr(amused_him,you))
# ::id deep_recursion_3s_sanity_check_0
# ::suppl deep_recursion_3s_sanity_check_0
(u_47 / hear-01
      :ARG0 (a / astronaut
               :ARG1-of (u_46 / amuse-01
                              :ARG0 (r / you)
                              :ARG1-of u_47)))

# ::snt The doctor thought that the girls amused her, the doctor
# ::tree TP_resolve_coref(thought_resolve_coref,doctor,TP_tr(amused_her,girls))
# ::id deep_recursion_3s_sanity_check_1
# ::suppl deep_recursion_3s_sanity_check_1
(u_49 / think-01
      :ARG0 (d / doctor
               :ARG1-of (u_48 / amuse-01
                              :ARG0 (r / girl)
                              :ARG1-of u_49)))

# ::snt The soldier mentioned that we liked him, the soldier
# ::tree TP_resolve_coref(mentioned_resolve_coref,soldier,TP_tr(liked_him,we))
# ::id deep_recursion_3s_sanity_check_2
# ::suppl deep_recursion_3s_sanity_check_2
(u_51 / mention-01
      :ARG0 (s / soldier
               :ARG1-of (u_50 / like-01
                              :ARG0 (r / we)
                              :ARG1-of u_51)))

# ::snt The lawyer knew that I hated her, the lawyer
# ::tree TP_resolve_coref(knew_resolve_coref,lawyer,TP_tr(hated_her,I))
# ::id deep_recursion_3s_sanity_check_3
# ::suppl deep_recursion_3s_sanity_check_3
(u_53 / know-01
      :ARG0 (m / lawyer
               :ARG1-of (u_52 / hate-01
                              :ARG0 (r / i)
                              :ARG1-of u_53)))

# ::snt The astronaut said that the kids saw him, the astronaut
# ::tree TP_resolve_coref(said_resolve_coref,astronaut,TP_tr(saw_him,kids))
# ::id deep_recursion_3s_sanity_check_4
# ::suppl deep_recursion_3s_sanity_check_4
(u_55 / say-01
      :ARG0 (a / astronaut
               :ARG1-of (u_54 / see-01
                              :ARG0 (r / kid)
                              :ARG1-of u_55)))

# ::snt The doctor believed that the boys hated him, the doctor
# ::tree TP_resolve_coref(believed_resolve_coref,doctor,TP_tr(hated_him,boys))
# ::id deep_recursion_3s_sanity_check_5
# ::suppl deep_recursion_3s_sanity_check_5
(u_57 / believe-01
      :ARG0 (d / doctor
               :ARG1-of (u_56 / hate-01
                              :ARG0 (r / boy)
                              :ARG1-of u_57)))

# ::snt The soldier heard that the lawyer saw her, the soldier
# ::tree TP_resolve_coref(heard_resolve_coref,soldier,TP_tr(saw_her,make_singular(lawyer)))
# ::id deep_recursion_3s_sanity_check_6
# ::suppl deep_recursion_3s_sanity_check_6
(u_58 / hear-01
      :ARG0 (s / soldier
               :ARG1-of (r / see-01
                           :ARG0 (m / lawyer)
                           :ARG1-of u_58)))

# ::snt The astronaut thought that you liked her, the astronaut
# ::tree TP_resolve_coref(thought_resolve_coref,astronaut,TP_tr(liked_her,you))
# ::id deep_recursion_3s_sanity_check_7
# ::suppl deep_recursion_3s_sanity_check_7
(u_60 / think-01
      :ARG0 (a / astronaut
               :ARG1-of (u_59 / like-01
                              :ARG0 (r / you)
                              :ARG1-of u_60)))

# ::snt Mary abandoned her ambitions in spring.
# ::tree templateGiveUpAmbitionInTimePeriod(mary,abandon,ambition,spring)
# ::id give_up_in_0
# ::suppl give_up_in_0
(u_1595 / abandon-01
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / ambition
                             :ARG1-of u_1595))
        :time (d / date-entity
                 :season (s35 / spring)))

# ::snt My sister abandoned her ambitions in spring.
# ::tree templateGiveUpAmbitionInTimePeriod(my_sister,abandon,ambition,spring)
# ::id give_up_in_1
# ::suppl give_up_in_1
(u_1597 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / ambition
                             :ARG1-of u_1597))
        :time (d / date-entity
                 :season (s35 / spring)))

# ::snt She abandoned her aspirations in the 60s.
# ::tree templateGiveUpAmbitionInTimePeriod(she,abandon,aspiration,the_60s)
# ::id give_up_in_2
# ::suppl give_up_in_2
(u_1599 / abandon-01
        :ARG0 (p / she
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1599)))
        :time (d / date-entity
                 :decade 1960))

# ::snt The astronaut abandoned her aspirations in spring.
# ::tree templateGiveUpAmbitionInTimePeriod(astronaut,abandon,aspiration,spring)
# ::id give_up_in_3
# ::suppl give_up_in_3
(u_1601 / abandon-01
        :ARG0 (p / astronaut
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1601)))
        :time (d / date-entity
                 :season (s35 / spring)))

# ::snt My sister abandoned her aspirations in spring.
# ::tree templateGiveUpAmbitionInTimePeriod(my_sister,abandon,aspiration,spring)
# ::id give_up_in_4
# ::suppl give_up_in_4
(u_1603 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1603)))
        :time (d / date-entity
                 :season (s35 / spring)))

# ::snt She gave up her aspirations in spring.
# ::tree templateGiveUpAmbitionInTimePeriod(she,give_up,aspiration,spring)
# ::id give_up_in_5
# ::suppl give_up_in_5
(u_1605 / give-up-07
        :ARG0 (p / she
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1605)))
        :time (d / date-entity
                 :season (s35 / spring)))

# ::snt Mary abandoned her ambitions in the 60s.
# ::tree templateGiveUpAmbitionInTimePeriod(mary,abandon,ambition,the_60s)
# ::id give_up_in_6
# ::suppl give_up_in_6
(u_1609 / abandon-01
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / ambition
                             :ARG1-of u_1609))
        :time (d / date-entity
                 :decade 1960))

# ::snt Mary gave up her aspirations in the 60s.
# ::tree templateGiveUpAmbitionInTimePeriod(mary,give_up,aspiration,the_60s)
# ::id give_up_in_7
# ::suppl give_up_in_7
(u_1613 / give-up-07
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1613)))
        :time (d / date-entity
                 :decade 1960))

# ::snt She gave up her career in 2012.
# ::tree templateGiveUpAmbitionInTimePeriod(she,give_up,career,year2012)
# ::id give_up_in_8
# ::suppl give_up_in_8
(u_1615 / give-up-07
        :ARG0 (p / she
                 :poss-of (r / career
                             :ARG1-of u_1615))
        :time (d / date-entity
                 :year 2012))

# ::snt My sister gave up her ambitions in 2012.
# ::tree templateGiveUpAmbitionInTimePeriod(my_sister,give_up,ambition,year2012)
# ::id give_up_in_9
# ::suppl give_up_in_9
(u_1617 / give-up-07
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / ambition
                             :ARG1-of u_1617))
        :time (d / date-entity
                 :year 2012))

# ::snt The astronaut abandoned her career in 2012.
# ::tree templateGiveUpAmbitionInTimePeriod(astronaut,abandon,career,year2012)
# ::id give_up_in_10
# ::suppl give_up_in_10
(u_1619 / abandon-01
        :ARG0 (p / astronaut
                 :poss-of (r / career
                             :ARG1-of u_1619))
        :time (d / date-entity
                 :year 2012))

# ::snt Mary abandoned her ambitions in 2012.
# ::tree templateGiveUpAmbitionInTimePeriod(mary,abandon,ambition,year2012)
# ::id give_up_in_11
# ::suppl give_up_in_11
(u_1623 / abandon-01
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / ambition
                             :ARG1-of u_1623))
        :time (d / date-entity
                 :year 2012))

# ::snt She gave up her ambitions in July.
# ::tree templateGiveUpAmbitionInTimePeriod(she,give_up,ambition,july)
# ::id give_up_in_12
# ::suppl give_up_in_12
(u_1625 / give-up-07
        :ARG0 (p / she
                 :poss-of (r / ambition
                             :ARG1-of u_1625))
        :time (d / date-entity
                 :month 7))

# ::snt Mary abandoned her career in July.
# ::tree templateGiveUpAmbitionInTimePeriod(mary,abandon,career,july)
# ::id give_up_in_13
# ::suppl give_up_in_13
(u_1629 / abandon-01
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / career
                             :ARG1-of u_1629))
        :time (d / date-entity
                 :month 7))

# ::snt The astronaut abandoned her ambitions in spring.
# ::tree templateGiveUpAmbitionInTimePeriod(astronaut,abandon,ambition,spring)
# ::id give_up_in_14
# ::suppl give_up_in_14
(u_1631 / abandon-01
        :ARG0 (p / astronaut
                 :poss-of (r / ambition
                             :ARG1-of u_1631))
        :time (d / date-entity
                 :season (s35 / spring)))

# ::snt She gave up her ambitions in the 60s.
# ::tree templateGiveUpAmbitionInTimePeriod(she,give_up,ambition,the_60s)
# ::id give_up_in_15
# ::suppl give_up_in_15
(u_1633 / give-up-07
        :ARG0 (p / she
                 :poss-of (r / ambition
                             :ARG1-of u_1633))
        :time (d / date-entity
                 :decade 1960))

# ::snt My sister abandoned her aspirations in the 60s.
# ::tree templateGiveUpAmbitionInTimePeriod(my_sister,abandon,aspiration,the_60s)
# ::id give_up_in_16
# ::suppl give_up_in_16
(u_1635 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1635)))
        :time (d / date-entity
                 :decade 1960))

# ::snt My sister abandoned her career in July.
# ::tree templateGiveUpAmbitionInTimePeriod(my_sister,abandon,career,july)
# ::id give_up_in_17
# ::suppl give_up_in_17
(u_1637 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / career
                             :ARG1-of u_1637))
        :time (d / date-entity
                 :month 7))

# ::snt Mary abandoned her career in 2012.
# ::tree templateGiveUpAmbitionInTimePeriod(mary,abandon,career,year2012)
# ::id give_up_in_18
# ::suppl give_up_in_18
(u_1641 / abandon-01
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / career
                             :ARG1-of u_1641))
        :time (d / date-entity
                 :year 2012))

# ::snt My sister gave up her career in July.
# ::tree templateGiveUpAmbitionInTimePeriod(my_sister,give_up,career,july)
# ::id give_up_in_19
# ::suppl give_up_in_19
(u_1643 / give-up-07
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / career
                             :ARG1-of u_1643))
        :time (d / date-entity
                 :month 7))

# ::snt She abandoned her career in spring.
# ::tree templateGiveUpAmbitionInTimePeriod(she,abandon,career,spring)
# ::id give_up_in_20
# ::suppl give_up_in_20
(u_1645 / abandon-01
        :ARG0 (p / she
                 :poss-of (r / career
                             :ARG1-of u_1645))
        :time (d / date-entity
                 :season (s35 / spring)))

# ::snt Mary gave up her aspirations in July.
# ::tree templateGiveUpAmbitionInTimePeriod(mary,give_up,aspiration,july)
# ::id give_up_in_21
# ::suppl give_up_in_21
(u_1649 / give-up-07
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1649)))
        :time (d / date-entity
                 :month 7))

# ::snt She gave up her career in spring.
# ::tree templateGiveUpAmbitionInTimePeriod(she,give_up,career,spring)
# ::id give_up_in_22
# ::suppl give_up_in_22
(u_1651 / give-up-07
        :ARG0 (p / she
                 :poss-of (r / career
                             :ARG1-of u_1651))
        :time (d / date-entity
                 :season (s35 / spring)))

# ::snt She gave up her career in July.
# ::tree templateGiveUpAmbitionInTimePeriod(she,give_up,career,july)
# ::id give_up_in_23
# ::suppl give_up_in_23
(u_1653 / give-up-07
        :ARG0 (p / she
                 :poss-of (r / career
                             :ARG1-of u_1653))
        :time (d / date-entity
                 :month 7))

# ::snt My sister abandoned her ambitions in the 60s.
# ::tree templateGiveUpAmbitionInTimePeriod(my_sister,abandon,ambition,the_60s)
# ::id give_up_in_24
# ::suppl give_up_in_24
(u_1655 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / ambition
                             :ARG1-of u_1655))
        :time (d / date-entity
                 :decade 1960))

# ::snt My sister gave up her ambitions in theater.
# ::tree templateGiveUpAmbitionInField(my_sister,give_up,ambition,theater)
# ::id give_up_in_25
# ::suppl give_up_in_25
(u_1656 / give-up-07
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / ambition
                             :topic (u_1657 / theater)
                             :ARG1-of u_1656)))

# ::snt Mary gave up her career in theater.
# ::tree templateGiveUpAmbitionInField(mary,give_up,career,theater)
# ::id give_up_in_26
# ::suppl give_up_in_26
(u_1658 / give-up-07
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / career
                             :topic (u_1661 / theater)
                             :ARG1-of u_1658)))

# ::snt She gave up her career in mathematics.
# ::tree templateGiveUpAmbitionInField(she,give_up,career,mathematics)
# ::id give_up_in_27
# ::suppl give_up_in_27
(u_1662 / give-up-07
        :ARG0 (p / she
                 :poss-of (r / career
                             :topic (u_1663 / mathematics)
                             :ARG1-of u_1662)))

# ::snt My sister gave up her ambitions in mathematics.
# ::tree templateGiveUpAmbitionInField(my_sister,give_up,ambition,mathematics)
# ::id give_up_in_28
# ::suppl give_up_in_28
(u_1664 / give-up-07
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / ambition
                             :topic (u_1665 / mathematics)
                             :ARG1-of u_1664)))

# ::snt My sister gave up her career in mathematics.
# ::tree templateGiveUpAmbitionInField(my_sister,give_up,career,mathematics)
# ::id give_up_in_29
# ::suppl give_up_in_29
(u_1666 / give-up-07
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / career
                             :topic (u_1667 / mathematics)
                             :ARG1-of u_1666)))

# ::snt The astronaut abandoned her aspirations in theater.
# ::tree templateGiveUpAmbitionInField(astronaut,abandon,aspiration,theater)
# ::id give_up_in_30
# ::suppl give_up_in_30
(u_1668 / abandon-01
        :ARG0 (p / astronaut
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :topic (u_1669 / theater)
                                      :ARG1-of u_1668))))

# ::snt The astronaut abandoned her aspirations in mathematics.
# ::tree templateGiveUpAmbitionInField(astronaut,abandon,aspiration,mathematics)
# ::id give_up_in_31
# ::suppl give_up_in_31
(u_1670 / abandon-01
        :ARG0 (p / astronaut
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :topic (u_1671 / mathematics)
                                      :ARG1-of u_1670))))

# ::snt My sister abandoned her career in theater.
# ::tree templateGiveUpAmbitionInField(my_sister,abandon,career,theater)
# ::id give_up_in_32
# ::suppl give_up_in_32
(u_1672 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / career
                             :topic (u_1673 / theater)
                             :ARG1-of u_1672)))

# ::snt My sister gave up her aspirations in theater.
# ::tree templateGiveUpAmbitionInField(my_sister,give_up,aspiration,theater)
# ::id give_up_in_33
# ::suppl give_up_in_33
(u_1674 / give-up-07
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :topic (u_1675 / theater)
                                      :ARG1-of u_1674))))

# ::snt My sister abandoned her ambitions in mathematics.
# ::tree templateGiveUpAmbitionInField(my_sister,abandon,ambition,mathematics)
# ::id give_up_in_34
# ::suppl give_up_in_34
(u_1676 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / ambition
                             :topic (u_1677 / mathematics)
                             :ARG1-of u_1676)))

# ::snt Mary abandoned her aspirations in theater.
# ::tree templateGiveUpAmbitionInField(mary,abandon,aspiration,theater)
# ::id give_up_in_35
# ::suppl give_up_in_35
(u_1678 / abandon-01
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :topic (u_1681 / theater)
                                      :ARG1-of u_1678))))

# ::snt My sister abandoned her career in mathematics.
# ::tree templateGiveUpAmbitionInField(my_sister,abandon,career,mathematics)
# ::id give_up_in_36
# ::suppl give_up_in_36
(u_1682 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / career
                             :topic (u_1683 / mathematics)
                             :ARG1-of u_1682)))

# ::snt The astronaut gave up her aspirations in crime.
# ::tree templateGiveUpAmbitionInField(astronaut,give_up,aspiration,crime)
# ::id give_up_in_37
# ::suppl give_up_in_37
(u_1684 / give-up-07
        :ARG0 (p / astronaut
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :topic (u_1685 / crime-02)
                                      :ARG1-of u_1684))))

# ::snt She abandoned her aspirations in theater.
# ::tree templateGiveUpAmbitionInField(she,abandon,aspiration,theater)
# ::id give_up_in_38
# ::suppl give_up_in_38
(u_1686 / abandon-01
        :ARG0 (p / she
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :topic (u_1687 / theater)
                                      :ARG1-of u_1686))))

# ::snt She abandoned her ambitions in theater.
# ::tree templateGiveUpAmbitionInField(she,abandon,ambition,theater)
# ::id give_up_in_39
# ::suppl give_up_in_39
(u_1688 / abandon-01
        :ARG0 (p / she
                 :poss-of (r / ambition
                             :topic (u_1689 / theater)
                             :ARG1-of u_1688)))

# ::snt The astronaut abandoned her career in theater.
# ::tree templateGiveUpAmbitionInField(astronaut,abandon,career,theater)
# ::id give_up_in_40
# ::suppl give_up_in_40
(u_1690 / abandon-01
        :ARG0 (p / astronaut
                 :poss-of (r / career
                             :topic (u_1691 / theater)
                             :ARG1-of u_1690)))

# ::snt My sister abandoned her career in crime.
# ::tree templateGiveUpAmbitionInField(my_sister,abandon,career,crime)
# ::id give_up_in_41
# ::suppl give_up_in_41
(u_1692 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / career
                             :topic (u_1693 / crime-02)
                             :ARG1-of u_1692)))

# ::snt The astronaut abandoned her aspirations in crime.
# ::tree templateGiveUpAmbitionInField(astronaut,abandon,aspiration,crime)
# ::id give_up_in_42
# ::suppl give_up_in_42
(u_1694 / abandon-01
        :ARG0 (p / astronaut
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :topic (u_1695 / crime-02)
                                      :ARG1-of u_1694))))

# ::snt My sister abandoned her aspirations in mathematics.
# ::tree templateGiveUpAmbitionInField(my_sister,abandon,aspiration,mathematics)
# ::id give_up_in_43
# ::suppl give_up_in_43
(u_1696 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :topic (u_1697 / mathematics)
                                      :ARG1-of u_1696))))

# ::snt Mary gave up her ambitions in crime.
# ::tree templateGiveUpAmbitionInField(mary,give_up,ambition,crime)
# ::id give_up_in_44
# ::suppl give_up_in_44
(u_1698 / give-up-07
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / ambition
                             :topic (u_1701 / crime-02)
                             :ARG1-of u_1698)))

# ::snt She gave up her aspirations in crime.
# ::tree templateGiveUpAmbitionInField(she,give_up,aspiration,crime)
# ::id give_up_in_45
# ::suppl give_up_in_45
(u_1702 / give-up-07
        :ARG0 (p / she
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :topic (u_1703 / crime-02)
                                      :ARG1-of u_1702))))

# ::snt My sister abandoned her aspirations in theater.
# ::tree templateGiveUpAmbitionInField(my_sister,abandon,aspiration,theater)
# ::id give_up_in_46
# ::suppl give_up_in_46
(u_1704 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :topic (u_1705 / theater)
                                      :ARG1-of u_1704))))

# ::snt Mary gave up her career in mathematics.
# ::tree templateGiveUpAmbitionInField(mary,give_up,career,mathematics)
# ::id give_up_in_47
# ::suppl give_up_in_47
(u_1706 / give-up-07
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / career
                             :topic (u_1709 / mathematics)
                             :ARG1-of u_1706)))

# ::snt She abandoned her career in crime.
# ::tree templateGiveUpAmbitionInField(she,abandon,career,crime)
# ::id give_up_in_48
# ::suppl give_up_in_48
(u_1710 / abandon-01
        :ARG0 (p / she
                 :poss-of (r / career
                             :topic (u_1711 / crime-02)
                             :ARG1-of u_1710)))

# ::snt Mary abandoned her ambitions in theater.
# ::tree templateGiveUpAmbitionInField(mary,abandon,ambition,theater)
# ::id give_up_in_49
# ::suppl give_up_in_49
(u_1712 / abandon-01
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / ambition
                             :topic (u_1715 / theater)
                             :ARG1-of u_1712)))

# ::snt She gave up her aspirations in a moment of clarity.
# ::tree templateGiveUpAmbitionInEmotionalState(she,give_up,aspiration,a_moment_of_clarity)
# ::id give_up_in_50
# ::suppl give_up_in_50
(u_1718 / give-up-07
        :ARG0 (p / she
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1718))
                 :ARG2-of (c3 / clear-06
                              :time (u_1716 / moment
                                            :ARG0-of (u_1717 / cause-01
                                                             :ARG1 u_1718)))))

# ::snt My sister gave up her aspirations in a fit of despair.
# ::tree templateGiveUpAmbitionInEmotionalState(my_sister,give_up,aspiration,a_fit_of_despair)
# ::id give_up_in_51
# ::suppl give_up_in_51
(u_1721 / give-up-07
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1721))
                 :ARG0-of (d / despair-01
                             :ARG2-of (u_1719 / fit-04
                                              :ARG1 p
                                              :ARG0-of (u_1720 / cause-01
                                                               :ARG1 u_1721)))))

# ::snt The astronaut gave up her ambitions in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(astronaut,give_up,ambition,anger)
# ::id give_up_in_52
# ::suppl give_up_in_52
(u_1724 / give-up-07
        :ARG0 (p / astronaut
                 :poss-of (r / ambition
                             :ARG1-of u_1724)
                 :ARG1-of (u_1722 / anger-01
                                  :ARG0-of (u_1723 / cause-01
                                                   :ARG1 u_1724))))

# ::snt Mary gave up her career in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(mary,give_up,career,anger)
# ::id give_up_in_53
# ::suppl give_up_in_53
(u_1729 / give-up-07
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / career
                             :ARG1-of u_1729)
                 :ARG1-of (u_1725 / anger-01
                                  :ARG0-of (u_1726 / cause-01
                                                   :ARG1 u_1729))))

# ::snt The astronaut abandoned her ambitions in a fit of despair.
# ::tree templateGiveUpAmbitionInEmotionalState(astronaut,abandon,ambition,a_fit_of_despair)
# ::id give_up_in_54
# ::suppl give_up_in_54
(u_1732 / abandon-01
        :ARG0 (p / astronaut
                 :poss-of (r / ambition
                             :ARG1-of u_1732)
                 :ARG0-of (d / despair-01
                             :ARG2-of (u_1730 / fit-04
                                              :ARG1 p
                                              :ARG0-of (u_1731 / cause-01
                                                               :ARG1 u_1732)))))

# ::snt Mary abandoned her career in a moment of clarity.
# ::tree templateGiveUpAmbitionInEmotionalState(mary,abandon,career,a_moment_of_clarity)
# ::id give_up_in_55
# ::suppl give_up_in_55
(u_1737 / abandon-01
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / career
                             :ARG1-of u_1737)
                 :ARG2-of (c3 / clear-06
                              :time (u_1733 / moment
                                            :ARG0-of (u_1734 / cause-01
                                                             :ARG1 u_1737)))))

# ::snt Mary gave up her ambitions in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(mary,give_up,ambition,anger)
# ::id give_up_in_56
# ::suppl give_up_in_56
(u_1742 / give-up-07
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / ambition
                             :ARG1-of u_1742)
                 :ARG1-of (u_1738 / anger-01
                                  :ARG0-of (u_1739 / cause-01
                                                   :ARG1 u_1742))))

# ::snt My sister abandoned her aspirations in a fit of despair.
# ::tree templateGiveUpAmbitionInEmotionalState(my_sister,abandon,aspiration,a_fit_of_despair)
# ::id give_up_in_57
# ::suppl give_up_in_57
(u_1745 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1745))
                 :ARG0-of (d / despair-01
                             :ARG2-of (u_1743 / fit-04
                                              :ARG1 p
                                              :ARG0-of (u_1744 / cause-01
                                                               :ARG1 u_1745)))))

# ::snt Mary gave up her career in a moment of clarity.
# ::tree templateGiveUpAmbitionInEmotionalState(mary,give_up,career,a_moment_of_clarity)
# ::id give_up_in_58
# ::suppl give_up_in_58
(u_1750 / give-up-07
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / career
                             :ARG1-of u_1750)
                 :ARG2-of (c3 / clear-06
                              :time (u_1746 / moment
                                            :ARG0-of (u_1747 / cause-01
                                                             :ARG1 u_1750)))))

# ::snt She gave up her career in a fit of despair.
# ::tree templateGiveUpAmbitionInEmotionalState(she,give_up,career,a_fit_of_despair)
# ::id give_up_in_59
# ::suppl give_up_in_59
(u_1753 / give-up-07
        :ARG0 (p / she
                 :poss-of (r / career
                             :ARG1-of u_1753)
                 :ARG0-of (d / despair-01
                             :ARG2-of (u_1751 / fit-04
                                              :ARG1 p
                                              :ARG0-of (u_1752 / cause-01
                                                               :ARG1 u_1753)))))

# ::snt Mary abandoned her aspirations in a fit of despair.
# ::tree templateGiveUpAmbitionInEmotionalState(mary,abandon,aspiration,a_fit_of_despair)
# ::id give_up_in_60
# ::suppl give_up_in_60
(u_1758 / abandon-01
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1758))
                 :ARG0-of (d / despair-01
                             :ARG2-of (u_1754 / fit-04
                                              :ARG1 p
                                              :ARG0-of (u_1755 / cause-01
                                                               :ARG1 u_1758)))))

# ::snt My sister gave up her ambitions in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(my_sister,give_up,ambition,anger)
# ::id give_up_in_61
# ::suppl give_up_in_61
(u_1761 / give-up-07
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / ambition
                             :ARG1-of u_1761)
                 :ARG1-of (u_1759 / anger-01
                                  :ARG0-of (u_1760 / cause-01
                                                   :ARG1 u_1761))))

# ::snt Mary gave up her ambitions in a moment of clarity.
# ::tree templateGiveUpAmbitionInEmotionalState(mary,give_up,ambition,a_moment_of_clarity)
# ::id give_up_in_62
# ::suppl give_up_in_62
(u_1766 / give-up-07
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :poss-of (r / ambition
                             :ARG1-of u_1766)
                 :ARG2-of (c3 / clear-06
                              :time (u_1762 / moment
                                            :ARG0-of (u_1763 / cause-01
                                                             :ARG1 u_1766)))))

# ::snt My sister abandoned her aspirations in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(my_sister,abandon,aspiration,anger)
# ::id give_up_in_63
# ::suppl give_up_in_63
(u_1769 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1769))
                 :ARG1-of (u_1767 / anger-01
                                  :ARG0-of (u_1768 / cause-01
                                                   :ARG1 u_1769))))

# ::snt My sister gave up her ambitions in a fit of despair.
# ::tree templateGiveUpAmbitionInEmotionalState(my_sister,give_up,ambition,a_fit_of_despair)
# ::id give_up_in_64
# ::suppl give_up_in_64
(u_1772 / give-up-07
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / ambition
                             :ARG1-of u_1772)
                 :ARG0-of (d / despair-01
                             :ARG2-of (u_1770 / fit-04
                                              :ARG1 p
                                              :ARG0-of (u_1771 / cause-01
                                                               :ARG1 u_1772)))))

# ::snt The astronaut gave up her aspirations in a moment of clarity.
# ::tree templateGiveUpAmbitionInEmotionalState(astronaut,give_up,aspiration,a_moment_of_clarity)
# ::id give_up_in_65
# ::suppl give_up_in_65
(u_1775 / give-up-07
        :ARG0 (p / astronaut
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1775))
                 :ARG2-of (c3 / clear-06
                              :time (u_1773 / moment
                                            :ARG0-of (u_1774 / cause-01
                                                             :ARG1 u_1775)))))

# ::snt She gave up her aspirations in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(she,give_up,aspiration,anger)
# ::id give_up_in_66
# ::suppl give_up_in_66
(u_1778 / give-up-07
        :ARG0 (p / she
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1778))
                 :ARG1-of (u_1776 / anger-01
                                  :ARG0-of (u_1777 / cause-01
                                                   :ARG1 u_1778))))

# ::snt My sister abandoned her aspirations in a moment of clarity.
# ::tree templateGiveUpAmbitionInEmotionalState(my_sister,abandon,aspiration,a_moment_of_clarity)
# ::id give_up_in_67
# ::suppl give_up_in_67
(u_1781 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1781))
                 :ARG2-of (c3 / clear-06
                              :time (u_1779 / moment
                                            :ARG0-of (u_1780 / cause-01
                                                             :ARG1 u_1781)))))

# ::snt The astronaut abandoned her aspirations in a fit of despair.
# ::tree templateGiveUpAmbitionInEmotionalState(astronaut,abandon,aspiration,a_fit_of_despair)
# ::id give_up_in_68
# ::suppl give_up_in_68
(u_1784 / abandon-01
        :ARG0 (p / astronaut
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1784))
                 :ARG0-of (d / despair-01
                             :ARG2-of (u_1782 / fit-04
                                              :ARG1 p
                                              :ARG0-of (u_1783 / cause-01
                                                               :ARG1 u_1784)))))

# ::snt My sister abandoned her ambitions in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(my_sister,abandon,ambition,anger)
# ::id give_up_in_69
# ::suppl give_up_in_69
(u_1787 / abandon-01
        :ARG0 (p / person
                 :ARG0-of (h / have-org-role-91
                             :ARG1 (i / i)
                             :ARG2 (s / sister))
                 :poss-of (r / ambition
                             :ARG1-of u_1787)
                 :ARG1-of (u_1785 / anger-01
                                  :ARG0-of (u_1786 / cause-01
                                                   :ARG1 u_1787))))

# ::snt Mary gave up her aspirations in a fit of despair.
# ::tree templateGiveUpAmbitionInEmotionalState(mary,give_up,aspiration,a_fit_of_despair)
# ::id give_up_in_70
# ::suppl give_up_in_70
(u_1792 / give-up-07
        :ARG0 (p / person
                 :wiki -
                 :name (n / name
                          :op1 "Mary")
                 :ARG0-of (a / aspire-01
                             :ARG1 (r / thing
                                      :ARG1-of u_1792))
                 :ARG0-of (d / despair-01
                             :ARG2-of (u_1788 / fit-04
                                              :ARG1 p
                                              :ARG0-of (u_1789 / cause-01
                                                               :ARG1 u_1792)))))

# ::snt The astronaut abandoned her ambitions in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(astronaut,abandon,ambition,anger)
# ::id give_up_in_71
# ::suppl give_up_in_71
(u_1795 / abandon-01
        :ARG0 (p / astronaut
                 :poss-of (r / ambition
                             :ARG1-of u_1795)
                 :ARG1-of (u_1793 / anger-01
                                  :ARG0-of (u_1794 / cause-01
                                                   :ARG1 u_1795))))

# ::snt She abandoned her ambitions in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(she,abandon,ambition,anger)
# ::id give_up_in_72
# ::suppl give_up_in_72
(u_1798 / abandon-01
        :ARG0 (p / she
                 :poss-of (r / ambition
                             :ARG1-of u_1798)
                 :ARG1-of (u_1796 / anger-01
                                  :ARG0-of (u_1797 / cause-01
                                                   :ARG1 u_1798))))

# ::snt She gave up her ambitions in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(she,give_up,ambition,anger)
# ::id give_up_in_73
# ::suppl give_up_in_73
(u_1801 / give-up-07
        :ARG0 (p / she
                 :poss-of (r / ambition
                             :ARG1-of u_1801)
                 :ARG1-of (u_1799 / anger-01
                                  :ARG0-of (u_1800 / cause-01
                                                   :ARG1 u_1801))))

# ::snt The astronaut gave up her career in anger.
# ::tree templateGiveUpAmbitionInEmotionalState(astronaut,give_up,career,anger)
# ::id give_up_in_74
# ::suppl give_up_in_74
(u_1804 / give-up-07
        :ARG0 (p / astronaut
                 :poss-of (r / career
                             :ARG1-of u_1804)
                 :ARG1-of (u_1802 / anger-01
                                  :ARG0-of (u_1803 / cause-01
                                                   :ARG1 u_1804))))

# ::snt The lawyer mentioned that the astronaut won
# ::tree TP_CP(mentioned,lawyer,TP_intr(won,astronaut))
# ::id deep_recursion_basic_sanity_check_0
# ::suppl deep_recursion_basic_sanity_check_0
(u_73 / mention-01
      :ARG0 (m / lawyer)
      :ARG1 (r / win-01
               :ARG0 (a / astronaut)))

# ::snt The doctor said that the women slept
# ::tree TP_CP(said,doctor,TP_intr(slept,women))
# ::id deep_recursion_basic_sanity_check_1
# ::suppl deep_recursion_basic_sanity_check_1
(u_75 / say-01
      :ARG0 (d / doctor)
      :ARG1 (u_74 / sleep-01
                  :ARG0 (r / woman)))

# ::snt The men believed that the soldier sneezed
# ::tree TP_CP(believed,men,TP_intr(sneezed,soldier))
# ::id deep_recursion_basic_sanity_check_2
# ::suppl deep_recursion_basic_sanity_check_2
(u_76 / believe-01
      :ARG0 (r / man)
      :ARG1 (u_78 / sneeze-01
                  :ARG0 (s / soldier)))

# ::snt We heard that you arrived
# ::tree TP_CP(heard,we,TP_intr(arrived,you))
# ::id deep_recursion_basic_sanity_check_3
# ::suppl deep_recursion_basic_sanity_check_3
(u_80 / hear-01
      :ARG0 (r / we)
      :ARG1 (u_79 / arrive-01
                  :ARG1 (u_81 / you)))

# ::snt I knew that the boys won
# ::tree TP_CP(knew,I,TP_intr(won,boys))
# ::id deep_recursion_basic_sanity_check_4
# ::suppl deep_recursion_basic_sanity_check_4
(u_83 / know-01
      :ARG0 (r / i)
      :ARG1 (u_82 / win-01
                  :ARG0 (u_84 / boy)))

# ::snt The girls thought that the kids slept
# ::tree TP_CP(thought,girls,TP_intr(slept,kids))
# ::id deep_recursion_basic_sanity_check_5
# ::suppl deep_recursion_basic_sanity_check_5
(u_86 / think-01
      :ARG0 (r / girl)
      :ARG1 (u_85 / sleep-01
                  :ARG0 (u_87 / kid)))
